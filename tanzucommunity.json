{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "default",
                "resourceVersion": "476",
                "uid": "948fd8d9-c7fe-4d36-85a7-7dd436c52c68"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "kube-node-lease",
                "resourceVersion": "475",
                "uid": "5bef1516-3cb1-4c03-94cc-93c1d53fdc22"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "jws-kubeconfig-0ymqx4": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjB5bXF4NCJ9..6ae2MxAuimNEegAuh56VcjhlBRiAqSwEOLv6HRVlHgg",
                "jws-kubeconfig-7zsaih": "eyJhbGciOiJIUzI1NiIsImtpZCI6Ijd6c2FpaCJ9..sbPNWqwX68rZTmPltg8_rq6urpNdKZLXqcfzU99GI58",
                "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2akNDQWRLZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1UQXhNekV4TXprMU1sb1hEVE14TVRBeE1URXhORFExTWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0VnCk5pYU93S1FGR2pNV3dpUU5GY3I2ZFVWSUM0d3dJaXhLL3IxZzBXN0tjOUNWOU9uUmNsUFhDaGFjQ1RKMmpVVWEKalFqK1ZPeTBMdmtHcU9qZEpsaVkxVHBQUU0xb3JNNWxIZXVjS3kvS2JKMDFoeFFpWjQrRHh6V0hURzg2RzlFYgpzdFBtQW85dzJObnF6Y1kyZGFhc2lLeC8wMUFZS1RlelBPcGlKMWg1M0o4SXpvZUdqT1V6WU9Na0JsbW1qMVo4CmdUVnNwNURwZlRlSjBaSFAxL0FtS3EyQnJETC9aOFhacmYySHpPazluTGpJSUdOQ2FlRURxb3JYQ3RzVGpuZGwKMHZQdjFwTXV5Q0R1QzFYdEtxNjlkUjVucVVReEM2T1hTMHR0elp3cDcySGx4a2U0d2NRY0tQeklreFlnSlZzVQpKcFJaRHRZc3gwUDkzcGJPRHNNQ0F3RUFBYU5GTUVNd0RnWURWUjBQQVFIL0JBUURBZ0trTUJJR0ExVWRFd0VCCi93UUlNQVlCQWY4Q0FRQXdIUVlEVlIwT0JCWUVGTW5DTVlWY3FiNVp1UlR6OWV0YkhQSUNFcEVvTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQ1dvcjlDb0FWRXE3ZjJNcC92bjdEdWRGeVljS3dvYVR1a0ZSNjNzRjBNU09HOQpLS2RKMTRrOVUvSWJ2cFZ0cGcrSWRuY2ZtUXMzMnhMODFYQ3pQMy9OWFZpZWU2RU56c0NFTmVvVk0xVktCTGdUCkh3QmFoY0FJek9LbmE0KzZaaGFwSkF6a2FNaEN4SGo1VFZIcDFBMkJNY0c4cUpTczZQNzBqSUY1eXJpOExZV1kKWndJRjlkZS91d3h2WUY2L08yQUhBb01CMXhnbGEyOTExZGloZ2dmMkZzQ2F0VjQ0a1lyWXh3Wm1qTFpKRFpmYgplV2JOcVJmeGN2a251eFEra0NaU3dVTUZzQ0loNUxXanc4RlBtUE5RNVJaY1BxMXFxWmV5MlNnTWxhKzZrRG5vCmQ1eXhBMThENzlOamxyay9JRXRYYlp5RG4wQ3ZTK2FoM05PNExhT0IKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n    server: https://172.18.0.3:6443\n  name: \"\"\ncontexts: null\ncurrent-context: \"\"\nkind: Config\npreferences: {}\nusers: null\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "cluster-info",
                "namespace": "kube-public",
                "resourceVersion": "633",
                "uid": "f05ae7a1-b42a-41e6-b616-2a00ed9aeec4"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "kube-public",
                "resourceVersion": "481",
                "uid": "1e3bc0ef-d516-49e2-a677-0afedde3b38a"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDSjCCAjKgAwIBAgIBAjANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRhbnRy\nZWEtY2FAMTYzNDEyNTYxOTAeFw0yMTEwMTMxMDQ2NTlaFw0yMjEwMTMxMDQ2NTla\nMBwxGjAYBgNVBAMMEWFudHJlYUAxNjM0MTI1NjE5MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEArIF6mBv638w64KO+LUuHAk3LRr9rK4jX9FaDxFtHv/sd\nr/UYRChPGaZIo8Nv1vJMBZ6AaESzF18yCLvgUZXgJrC346XAf4tafD1lU15E/9eK\nd7q2QmsxSbouRvbfI2gNX+jqAEYyGBrvRHtt57qOUncpKlxoZE4AdR60BuPL78vL\nRY/ND0l+7xNWzealWQH71rCyT7J64flFqSgykEsXvG7LYNSe8sHtpzROjnGtYzq1\ndohCmdXjbHRkaCzm0UP0Al1aJyoaFnWYk8hxywSEIjf/44kpUYlyoYhEZ7TOm5qj\nMXNZgvJA3zXQwDVm2paNQITuHpDE0hHT47ATAwI8uQIDAQABo4GTMIGQMA4GA1Ud\nDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8G\nA1UdIwQYMBaAFMNYLF9UYGxBDWIO0bybhrGo5GQGMDoGA1UdEQQzMDGCBmFudHJl\nYYIWYW50cmVhLmt1YmUtc3lzdGVtLnN2Y4IJbG9jYWxob3N0hwR/AAABMA0GCSqG\nSIb3DQEBCwUAA4IBAQBqw6OIwGenWb8Nv9VJusIVb9Nw7JPcXt2lKNVbjPqbPIEC\nIY/WM3nyUFqNElQNAle1A83tuj7Zb6ptVqNM4pOz9nFQodJxWfS+mfMm2mEMEqyz\nYUXM4b7FiTjpMLMxyTqvvCcsz6ScGz8tI4EfUfJXmno1CA/xaXR3g79u1znEbCpL\nJosnB/2bbvuJtG+lCLSnrbJtWZ5643l2FJIFkjQ3ieES1C/eyNPYDJIt921aTl20\nUTw3kuCwMQv4QDGnbes21IMxVleqStUKejW/J/oHzNetSmna1o9/D/pI12M6cq/b\nN0PI3SnGTpmeXeFD72pdMpz6kpE58Bdr9e+51NMO\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgIBATANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRhbnRy\nZWEtY2FAMTYzNDEyNTYxOTAeFw0yMTEwMTMxMDQ2NTlaFw0yMjEwMTMxMDQ2NTla\nMB8xHTAbBgNVBAMMFGFudHJlYS1jYUAxNjM0MTI1NjE5MIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAs2ohbJ1PkN2wOyED0T+EYWpNbNTe0KOuzFH2SeO8\nF9AIvoOYxycl1NwfStZEiVPavlBuNk8bIFUE9SdjZIR9pTBlZXUrA2PDvPZJm0rb\nJPCOi4EgA4V+XGThcSIvEhMOWF+f1lW23ZQNVzIrqG/kJc08DSoQU/Oq6yCkuXYu\nWHnBpvInF9ty28Z97HNmKa3R33mVE9oq0rPnsmCer6i45NxqohXarVA/5xM22BwI\nx74rTaRcF4vOoZCo+2906YSMVIqzhIMBrUMQsgpQmY6e0i4UtlZcXfFmWi39m7Qq\n9goIibKOVtLSTKynObrfRQaJYlOXO6vUU9usZo6gG+7ojQIDAQABo0IwQDAOBgNV\nHQ8BAf8EBAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUw1gsX1RgbEEN\nYg7RvJuGsajkZAYwDQYJKoZIhvcNAQELBQADggEBAEl2hAd7JBS6oNKmn7WJJf0e\nBnPUV/9MT41HmCMgYNAR4/gQqmjBYne93rhj74QN69+Ss8/h1DcRnpQmWoIT6dXI\nY5OQUSmpzeEQjHXwtn8blh7v0oR0poCVyG7qRACijl/B6QgGr0W/6xnEDlOacwsu\n9YHdQ6ui/U6P/ZOpc3C9nlDOrbFdMvS8X8SxNQogkRnYHPhH3ENmmYmOgrc1VteU\nmElFevuJYi8drtS1r3nIZhAcQAk69ACwIaWhwiXiPHBmCMMmPZ9yGwmmRxiww698\naBYQCeqB3BmwhcH2vx63Px9i9G0Fo4xLCPAGo8QcRmLrYMiosDuOAMqUHX4tSFw=\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-ca",
                "namespace": "kube-system",
                "resourceVersion": "946",
                "uid": "0c0ee8a0-a313-44af-877a-80fdada72c01"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "uuid": "62e1aee8-c5b8-4bd4-988d-491c43ff0261"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-cluster-identity",
                "namespace": "kube-system",
                "resourceVersion": "947",
                "uid": "9b548076-adfb-48d9-a1cd-8251a67c5a51"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "antrea-agent.conf": "featureGates:\n  AntreaProxy: true\n  EndpointSlice: false\n  Traceflow: true\n  NodePortLocal: false\n  AntreaPolicy: true\n  FlowExporter: false\n  NetworkPolicyStats: false\novsDatapathType: netdev\ntrafficEncapMode: encap\nnoSNAT: false\nserviceCIDR: 100.64.0.0/13\ntlsCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384\n",
                "antrea-cni.conflist": "{\n    \"cniVersion\":\"0.3.0\",\n    \"name\": \"antrea\",\n    \"plugins\": [\n        {\n            \"type\": \"antrea\",\n            \"ipam\": {\n                \"type\": \"host-local\"\n            }\n        },\n        {\n            \"type\": \"portmap\",\n            \"capabilities\": {\"portMappings\": true}\n        },\n        {\n            \"type\": \"bandwidth\",\n            \"capabilities\": {\"bandwidth\": true}\n        }\n    ]\n}\n",
                "antrea-controller.conf": "featureGates:\n  Traceflow: true\n  AntreaPolicy: true\n  NetworkPolicyStats: false\nselfSignedCert: true\ntlsCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-config-ctb8mftc58",
                "namespace": "kube-system",
                "resourceVersion": "809",
                "uid": "26bf212b-87b4-45e3-a360-29e185dba6ef"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "Corefile": ".:53 {\n    errors\n    health {\n       lameduck 5s\n    }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n       pods insecure\n       fallthrough in-addr.arpa ip6.arpa\n       ttl 30\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf {\n       max_concurrent 1000\n    }\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "coredns",
                "namespace": "kube-system",
                "resourceVersion": "292",
                "uid": "8d85b5d3-4941-4b9c-8011-2a7fcca059a8"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n",
                "requestheader-allowed-names": "[\"front-proxy-client\"]",
                "requestheader-client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKi4\nLjZaseUgn4GJt+3WJaISVc/Ir5gKSVSAVwpha84NYLg33FW42nboModpgbQdzuND\niK4ZpEVK5iuauSTPLjb5AXT3fvbF5AqfyQQI6BgTxhjhiPSr0an3aDslAqnE8218\nq3RqDiYdWCY80dynEMv4kwcR/ff43BNz4MppAKMMmTGV3zcqXq3n4EmOm2njN07Q\nvJBs/yuOrof+WRrtIxU1xY8HiR5qT4cbUQMYlKPVrBoBeFIrs4bhkJP2QP7LmV18\nS0Zfuc2DH0BDIqdx1zYW17+VXI4HHPoTOiMKJkt3/Tia5cgz1VpQFDdeI2nEurlv\nTSJoCcuDomg/IzAeK1ECAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCh5IvydodfPPE+wxdrkjFPciQ9IMA0GCSqG\nSIb3DQEBCwUAA4IBAQB8oyW6MfvqQum+ndWE9+ZblnCdMZf7A1iLH/qJo2Kya7sW\nTRCtBdKYVu5Mm12IImKO77OwEcvi5JKTfWAkbqwj78yMp5j6j41qhxYPQT/onnmd\nUQfpNdXlQA7M6oEosR/KP4wL5vtTQI3UYJWHQ2KqOznA/cLdvemROtVWAJ0Bp2pk\nkk2kYo7p9c7oBT2otIbPcCjeCJIZDg1iLexL3HEddAA01c4NFfz8ojT/pAKxX1i/\nH3WCWFjq0YA/1u90VJGvp0tOWo39xCzn4Z+A6j+gr4FgVXfi+43bNvqV4r7lKCrv\n9jr0fQ9Mk1bmV/m95BSFgEO3ant/eJwbzj15PDHJ\n-----END CERTIFICATE-----\n",
                "requestheader-extra-headers-prefix": "[\"X-Remote-Extra-\"]",
                "requestheader-group-headers": "[\"X-Remote-Group\"]",
                "requestheader-username-headers": "[\"X-Remote-User\"]"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "name": "extension-apiserver-authentication",
                "namespace": "kube-system",
                "resourceVersion": "39",
                "uid": "135fbebc-5ea7-4cc6-b4fb-fcfbc6ef6114"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "config.conf": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nbindAddressHardFail: false\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 0\n  contentType: \"\"\n  kubeconfig: /var/lib/kube-proxy/kubeconfig.conf\n  qps: 0\nclusterCIDR: 100.96.0.0/11\nconfigSyncPeriod: 0s\nconntrack:\n  maxPerCore: 0\n  min: null\n  tcpCloseWaitTimeout: null\n  tcpEstablishedTimeout: null\ndetectLocalMode: \"\"\nenableProfiling: false\nhealthzBindAddress: \"\"\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: null\n  minSyncPeriod: 0s\n  syncPeriod: 0s\nipvs:\n  excludeCIDRs: null\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  strictARP: false\n  syncPeriod: 0s\n  tcpFinTimeout: 0s\n  tcpTimeout: 0s\n  udpTimeout: 0s\nkind: KubeProxyConfiguration\nmetricsBindAddress: \"\"\nmode: \"\"\nnodePortAddresses: null\noomScoreAdj: null\nportRange: \"\"\nshowHiddenMetricsForVersion: \"\"\nudpIdleTimeout: 0s\nwinkernel:\n  enableDSR: false\n  networkName: \"\"\n  sourceVip: \"\"",
                "kubeconfig.conf": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    server: https://172.18.0.3:6443\n  name: default\ncontexts:\n- context:\n    cluster: default\n    namespace: default\n    user: default\n  name: default\ncurrent-context: default\nusers:\n- name: default\n  user:\n    tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "labels": {
                    "app": "kube-proxy"
                },
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "302",
                "uid": "c17f73e6-0a2d-49ce-8eab-06b28d8bbf82"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "kube-system",
                "resourceVersion": "480",
                "uid": "9ea6235a-12d2-4f8f-95b7-567a0843294b"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ClusterConfiguration": "apiServer:\n  certSANs:\n  - localhost\n  - 127.0.0.1\n  extraArgs:\n    authorization-mode: Node,RBAC\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: testcluster\ncontrolPlaneEndpoint: 172.18.0.3:6443\ncontrollerManager:\n  extraArgs:\n    enable-hostpath-provisioner: \"true\"\ndns:\n  imageRepository: projects.registry.vmware.com/tkg\n  imageTag: v1.8.0_vmware.5\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\n    imageRepository: projects.registry.vmware.com/tkg\n    imageTag: v3.4.13_vmware.15\nimageRepository: projects.registry.vmware.com/tkg\nkind: ClusterConfiguration\nkubernetesVersion: v1.21.2+vmware.1\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: 100.96.0.0/11\n  serviceSubnet: 100.64.0.0/13\nscheduler: {}\n",
                "ClusterStatus": "apiEndpoints:\n  testcluster-control-plane-f4k77:\n    advertiseAddress: 172.18.0.4\n    bindPort: 6443\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterStatus\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "204",
                "uid": "9e3ac16f-0952-47f9-9879-db50fb49f3b4"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "kubelet": "apiVersion: kubelet.config.k8s.io/v1beta1\nauthentication:\n  anonymous:\n    enabled: false\n  webhook:\n    cacheTTL: 0s\n    enabled: true\n  x509:\n    clientCAFile: /etc/kubernetes/pki/ca.crt\nauthorization:\n  mode: Webhook\n  webhook:\n    cacheAuthorizedTTL: 0s\n    cacheUnauthorizedTTL: 0s\ncgroupDriver: systemd\nclusterDNS:\n- 100.64.0.10\nclusterDomain: cluster.local\ncpuManagerReconcilePeriod: 0s\nevictionPressureTransitionPeriod: 0s\nfileCheckFrequency: 0s\nhealthzBindAddress: 127.0.0.1\nhealthzPort: 10248\nhttpCheckFrequency: 0s\nimageMinimumGCAge: 0s\nkind: KubeletConfiguration\nlogging: {}\nnodeStatusReportFrequency: 0s\nnodeStatusUpdateFrequency: 0s\nrotateCertificates: true\nruntimeRequestTimeout: 0s\nshutdownGracePeriod: 0s\nshutdownGracePeriodCriticalPods: 0s\nstaticPodPath: /etc/kubernetes/manifests\nstreamingConnectionIdleTimeout: 0s\nsyncFrequency: 0s\nvolumeStatsAggPeriod: 0s\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "kubeadm.kubernetes.io/component-config.hash": "sha256:d5303344ad640ba772f693acde81368b4c9c02bc7a8a0ec7cb6b87cbb22f5bac"
                },
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kubelet-config-1.21",
                "namespace": "kube-system",
                "resourceVersion": "207",
                "uid": "ccfb718e-3369-48a2-9140-41c64506623f"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "kube-root-ca.crt",
                "namespace": "tanzu-package-repo-global",
                "resourceVersion": "549",
                "uid": "2a27567a-6e03-4e8a-ac33-f5b3dafbbbda"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "tkg-system-public",
                "resourceVersion": "477",
                "uid": "ec03874e-af09-482a-a53b-3fe4b95cdd84"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "bom.yaml": "apiVersion: run.tanzu.vmware.com/v1alpha2\ndefault:\n  k8sVersion: v1.21.2+vmware.1-tkg.1\nrelease:\n  version: v1.4.0\ncomponents:\n  aad-pod-identity:\n  - version: v1.6.3+vmware.2\n    images:\n      micImage:\n        imagePath: cluster-api/mic\n        tag: v1.6.3_vmware.2\n      nmiImage:\n        imagePath: cluster-api/nmi\n        tag: v1.6.3_vmware.2\n  alertmanager:\n  - version: v0.22.2+vmware.1\n    images:\n      alertmanagerImage:\n        imagePath: prometheus/alertmanager\n        tag: v0.22.2_vmware.1\n  cadvisor:\n  - version: v0.39.1+vmware.1\n    images:\n      cadvisorImage:\n        imagePath: prometheus/cadvisor\n        tag: v0.39.1_vmware.1\n  cloud-provider-azure:\n  - version: v0.7.4+vmware.1\n    images:\n      ccmAzureControllerImage:\n        imagePath: azure-cloud-controller-manager\n        tag: v0.7.4_vmware.1\n      ccmAzureNodeImage:\n        imagePath: azure-cloud-node-manager\n        tag: v0.7.4_vmware.1\n  cluster-api-provider-azure:\n  - version: v0.4.15+vmware.1\n    images:\n      capzControllerImage:\n        imagePath: cluster-api/cluster-api-azure-controller\n        tag: v0.4.15_vmware.1\n  cluster_api:\n  - version: v0.3.23+vmware.1\n    images:\n      cabpkControllerImage:\n        imagePath: cluster-api/kubeadm-bootstrap-controller\n        tag: v0.3.23_vmware.1\n      capdManagerImage:\n        imagePath: cluster-api/capd-manager\n        tag: v0.3.23_vmware.1\n      capiControllerImage:\n        imagePath: cluster-api/cluster-api-controller\n        tag: v0.3.23_vmware.1\n      kcpControllerImage:\n        imagePath: cluster-api/kubeadm-control-plane-controller\n        tag: v0.3.23_vmware.1\n  cluster_api_aws:\n  - version: v0.6.6+vmware.1\n    images:\n      capaControllerImage:\n        imagePath: cluster-api/cluster-api-aws-controller\n        tag: v0.6.6_vmware.1\n  cluster_api_vsphere:\n  - version: v0.7.10+vmware.1\n    images:\n      capvControllerImage:\n        imagePath: cluster-api/cluster-api-vsphere-controller\n        tag: v0.7.10_vmware.1\n  configmap-reload:\n  - version: v0.5.0+vmware.1\n    images:\n      configmapReloadImage:\n        imagePath: prometheus/configmap-reload\n        tag: v0.5.0_vmware.1\n  contour:\n  - version: v1.17.1+vmware.1\n    images:\n      contourImage:\n        imagePath: contour\n        tag: v1.17.1_vmware.1\n  crash-diagnostics:\n  - version: v0.3.3+vmware.1\n  envoy:\n  - version: v1.18.3+vmware.1\n    images:\n      envoyImage:\n        imagePath: envoy\n        tag: v1.18.3_vmware.1\n  external-dns:\n  - version: v0.8.0+vmware.1\n    images:\n      externalDNSImage:\n        imagePath: external-dns\n        tag: v0.8.0_vmware.1\n  fluent-bit:\n  - version: v1.7.5+vmware.1\n    images:\n      fluentBitImage:\n        imagePath: fluent-bit\n        tag: v1.7.5_vmware.1\n  gangway:\n  - version: v3.2.0+vmware.2\n    images:\n      gangwayImage:\n        imagePath: gangway\n        tag: v3.2.0_vmware.2\n  grafana:\n  - version: v7.5.7+vmware.1\n    images:\n      grafanaImage:\n        imagePath: grafana/grafana\n        tag: v7.5.7_vmware.1\n  harbor:\n  - version: v2.2.3+vmware.1\n    images:\n      harborChartMuseumImage:\n        imagePath: harbor/chartmuseum-photon\n        tag: v2.2.3_vmware.1\n      harborCoreImage:\n        imagePath: harbor/harbor-core\n        tag: v2.2.3_vmware.1\n      harborDatabaseImage:\n        imagePath: harbor/harbor-db\n        tag: v2.2.3_vmware.1\n      harborExporterImage:\n        imagePath: harbor/harbor-exporter\n        tag: v2.2.3_vmware.1\n      harborJobServiceImage:\n        imagePath: harbor/harbor-jobservice\n        tag: v2.2.3_vmware.1\n      harborLogImage:\n        imagePath: harbor/harbor-log\n        tag: v2.2.3_vmware.1\n      harborNginxImage:\n        imagePath: harbor/nginx-photon\n        tag: v2.2.3_vmware.1\n      harborNotaryServerImage:\n        imagePath: harbor/notary-server-photon\n        tag: v2.2.3_vmware.1\n      harborNotarySignerImage:\n        imagePath: harbor/notary-signer-photon\n        tag: v2.2.3_vmware.1\n      harborPortalImage:\n        imagePath: harbor/harbor-portal\n        tag: v2.2.3_vmware.1\n      harborPrepareImage:\n        imagePath: harbor/prepare\n        tag: v2.2.3_vmware.1\n      harborRedisImage:\n        imagePath: harbor/redis-photon\n        tag: v2.2.3_vmware.1\n      harborRegistryCtlImage:\n        imagePath: harbor/harbor-registryctl\n        tag: v2.2.3_vmware.1\n      harborRegistryImage:\n        imagePath: harbor/registry-photon\n        tag: v2.2.3_vmware.1\n      harborTrivyAdapterImage:\n        imagePath: harbor/trivy-adapter-photon\n        tag: v2.2.3_vmware.1\n  image-builder:\n  - version: v0.1.9+vmware.1\n    images:\n      imagebuilder-tar:\n        imagePath: image-builder\n        tag: v0.1.9_vmware.1\n  imgpkg:\n  - version: v0.10.0+vmware.1\n  jetstack_cert-manager:\n  - version: v1.1.0+vmware.1\n    images:\n      certMgrControllerImage:\n        imagePath: cert-manager-controller\n        tag: v1.1.0_vmware.1\n      certMgrInjectorImage:\n        imagePath: cert-manager-cainjector\n        tag: v1.1.0_vmware.1\n      certMgrWebhookImage:\n        imagePath: cert-manager-webhook\n        tag: v1.1.0_vmware.1\n  k8s-sidecar:\n  - version: v1.12.1+vmware.1\n    images:\n      k8sSidecarImage:\n        imagePath: grafana/k8s-sidecar\n        tag: v1.12.1_vmware.1\n  k14s_kapp:\n  - version: v0.37.0+vmware.1\n  k14s_ytt:\n  - version: v0.34.0+vmware.1\n  kbld:\n  - version: v0.30.0+vmware.1\n  kube-state-metrics:\n  - version: v1.9.8+vmware.1\n    images:\n      kubeStateMetricsImage:\n        imagePath: prometheus/kube-state-metrics\n        tag: v1.9.8_vmware.1\n  kube-vip:\n  - version: v0.3.3+vmware.1\n    images:\n      kubeVipImage:\n        imagePath: kube-vip\n        tag: v0.3.3_vmware.1\n  kube_rbac_proxy:\n  - version: v0.8.0+vmware.1\n    images:\n      kubeRbacProxyControllerImage:\n        imagePath: kube-rbac-proxy\n        tag: v0.8.0_vmware.1\n      kubeRbacProxyControllerImageCapi:\n        imagePath: cluster-api/kube-rbac-proxy\n        tag: v0.8.0_vmware.1\n  kubernetes-sigs_kind:\n  - version: v1.21.2+vmware.1\n    images:\n      kindNodeImage:\n        imagePath: kind/node\n        tag: v1.21.2_vmware.1\n  kubernetes_autoscaler:\n  - version: v1.21.0+vmware.1\n    images:\n      kubernetesAutoscalerImage:\n        imagePath: cluster-autoscaler\n        tag: v1.21.0_vmware.1\n    metadata:\n      k8sversion: v1.21.1+vmware.1\n  - version: v1.20.0+vmware.1\n    images:\n      kubernetesAutoscalerImage:\n        imagePath: cluster-autoscaler\n        tag: v1.20.0_vmware.1\n    metadata:\n      k8sversion: v1.20.4+vmware.1\n  - version: v1.19.1+vmware.1\n    images:\n      kubernetesAutoscalerImage:\n        imagePath: cluster-autoscaler\n        tag: v1.19.1_vmware.1\n    metadata:\n      k8sversion: v1.19.8+vmware.1\n  multus-cni:\n  - version: v3.7.1+vmware.1\n    images:\n      multusCniImage:\n        imagePath: multus-cni\n        tag: v3.7.1_vmware.1\n  prometheus:\n  - version: v2.27.0+vmware.1\n    images:\n      prometheusImage:\n        imagePath: prometheus/prometheus\n        tag: v2.27.0_vmware.1\n  prometheus_node_exporter:\n  - version: v1.1.2+vmware.1\n    images:\n      prometheusNodeExporterImage:\n        imagePath: prometheus/prometheus_node_exporter\n        tag: v1.1.2_vmware.1\n  pushgateway:\n  - version: v1.4.0+vmware.1\n    images:\n      pushgatewayImage:\n        imagePath: prometheus/pushgateway\n        tag: v1.4.0_vmware.1\n  sonobuoy:\n  - version: v0.20.0+vmware.1\n    images:\n      sonobuoyImage:\n        imagePath: sonobuoy\n        tag: v0.20.0_vmware.1\n  tanzu-framework:\n  - version: v1.4.0\n    images:\n      capabilitiesImage:\n        imagePath: tanzu_core/capabilities/capabilities-controller-manager\n        tag: v1.4.0\n      providerTemplateImage:\n        imagePath: tanzu_core/provider/provider-templates\n        tag: v1.4.0\n      tkrImage:\n        imagePath: tanzu_core/tkr/tkr-controller-manager\n        tag: v1.4.0\n  tkg-bom:\n  - version: v1.4.0\n    images:\n      tkgBomImage:\n        imagePath: tkg-bom\n        tag: v1.4.0\n  tkg-standard-packages:\n  - version: v1.4.0\n    images:\n      cert-manager.tanzu.vmware.com:\n        imagePath: packages/standard/cert-manager\n        tag: v1.1.0_vmware.1-tkg.2\n      contour.tanzu.vmware.com:\n        imagePath: packages/standard/contour\n        tag: v1.17.1_vmware.1-tkg.1\n      external-dns.tanzu.vmware.com:\n        imagePath: packages/standard/external-dns\n        tag: v0.8.0_vmware.1-tkg.1\n      fluent-bit.tanzu.vmware.com:\n        imagePath: packages/standard/fluent-bit\n        tag: v1.7.5_vmware.1-tkg.1\n      grafana.tanzu.vmware.com:\n        imagePath: packages/standard/grafana\n        tag: v7.5.7_vmware.1-tkg.1\n      harbor.tanzu.vmware.com:\n        imagePath: packages/standard/harbor\n        tag: v2.2.3_vmware.1-tkg.1\n      multus-cni.tanzu.vmware.com:\n        imagePath: packages/standard/multus-cni\n        tag: v3.7.1_vmware.1-tkg.1\n      prometheus.tanzu.vmware.com:\n        imagePath: packages/standard/prometheus\n        tag: v2.27.0_vmware.1-tkg.1\n      tanzuStandardPackageRepositoryImage:\n        imagePath: packages/standard/repo\n        tag: v1.4.0\n  tkg_telemetry:\n  - version: v1.4.0+vmware.1\n    images:\n      tkgTelemetryImage:\n        imagePath: tkg-telemetry\n        tag: v1.4.0_vmware.1\n  velero:\n  - version: v1.6.2+vmware.1\n    images:\n      veleroImage:\n        imagePath: velero/velero\n        tag: v1.6.2_vmware.1\n      veleroResticRestoreHelperImage:\n        imagePath: velero/velero-restic-restore-helper\n        tag: v1.6.2_vmware.1\n  velero-plugin-for-aws:\n  - version: v1.2.1+vmware.1\n    images:\n      veleroPluginForAwsImage:\n        imagePath: velero/velero-plugin-for-aws\n        tag: v1.2.1_vmware.1\n  velero-plugin-for-microsoft-azure:\n  - version: v1.2.1+vmware.1\n    images:\n      veleroPluginForMicrosoftAzureImage:\n        imagePath: velero/velero-plugin-for-microsoft-azure\n        tag: v1.2.1_vmware.1\n  velero-plugin-for-vsphere:\n  - version: v1.1.1+vmware.1\n    images:\n      veleroBackupDriverImage:\n        imagePath: velero/backup-driver\n        tag: v1.1.1_vmware.1\n      veleroDataManagerForPluginImage:\n        imagePath: velero/data-manager-for-plugin\n        tag: v1.1.1_vmware.1\n      veleroPluginForVsphereImage:\n        imagePath: velero/velero-plugin-for-vsphere\n        tag: v1.1.1_vmware.1\n  vendir:\n  - version: v0.21.1+vmware.1\nkindKubeadmConfigSpec:\n- 'kind: Cluster'\n- 'apiVersion: kind.x-k8s.io/v1alpha4'\n- 'kubeadmConfigPatches:'\n- '- |'\n- '  apiVersion: kubeadm.k8s.io/v1beta2'\n- '  kind: ClusterConfiguration'\n- '  imageRepository: projects.registry.vmware.com/tkg'\n- '  etcd:'\n- '    local:'\n- '      imageRepository: projects.registry.vmware.com/tkg'\n- '      imageTag: v3.4.13_vmware.15'\n- '  dns:'\n- '    type: CoreDNS'\n- '    imageRepository: projects.registry.vmware.com/tkg'\n- '    imageTag: v1.8.0_vmware.5'\nimageConfig:\n  imageRepository: projects.registry.vmware.com/tkg\ntkr-bom:\n  imagePath: tkr-bom\ntkr-compatibility:\n  imagePath: tkr-compatibility\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "metadata/tkg"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "tkg-bom",
                "namespace": "tkg-system-public",
                "resourceVersion": "534",
                "uid": "354411cc-b632-4161-9d02-d4630a66d5c8"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "metadata.yaml": "cluster:\n  name: testcluster\n  type: management\n  plan: dev\n  kubernetesProvider: VMware Tanzu Kubernetes Grid\n  tkgVersion: v1.4.0\n  infrastructure:\n    provider: docker\nbom:\n  configmapRef:\n    name: tkg-bom\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "metadata/tkg"
                },
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tkg-metadata",
                "namespace": "tkg-system-public",
                "resourceVersion": "372",
                "uid": "bcb61a48-dcc6-4d81-bbba-16e8bbbc1f06"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "caCerts": "",
                "dangerousSkipTLSVerify": "",
                "httpProxy": "",
                "httpsProxy": "",
                "noProxy": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/change-group": "apps.kappctrl.k14s.io/kapp-controller-config",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "name": "kapp-controller-config",
                "namespace": "tkg-system",
                "resourceVersion": "737",
                "uid": "5f80d6db-3afb-4e94-9eaf-d159ab69eb2e"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "tkg-system",
                "resourceVersion": "479",
                "uid": "664625fd-113f-4bec-ad60-508c27da490f"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "spec": "{\"labelKey\":\"kapp.k14s.io/app\",\"labelValue\":\"1634125634387008976\",\"lastChangeName\":\"tanzu-core-ctrl-change-c8x27\",\"lastChange\":{\"startedAt\":\"2021-10-13T11:47:40.976203946Z\",\"finishedAt\":\"2021-10-13T11:47:42.124354929Z\",\"successful\":true,\"description\":\"update: Op: 20 create, 0 delete, 0 update, 0 noop / Wait to: 0 reconcile, 0 delete, 20 noop\",\"namespaces\":[\"tkg-system\"]},\"usedGVs\":[{\"Group\":\"data.packaging.carvel.dev\",\"Version\":\"v1alpha1\"}]}"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:14Z",
                "labels": {
                    "kapp.k14s.io/is-app": ""
                },
                "name": "tanzu-core-ctrl",
                "namespace": "tkg-system",
                "resourceVersion": "1142",
                "uid": "92e2b45c-d293-4099-aea9-17ca8e21064a"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "spec": "{\"startedAt\":\"2021-10-13T11:47:40.976203946Z\",\"finishedAt\":\"2021-10-13T11:47:42.124354929Z\",\"successful\":true,\"description\":\"update: Op: 20 create, 0 delete, 0 update, 0 noop / Wait to: 0 reconcile, 0 delete, 20 noop\",\"namespaces\":[\"tkg-system\"]}"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:40Z",
                "generateName": "tanzu-core-ctrl-change-",
                "labels": {
                    "kapp.k14s.io/app-change-app": "tanzu-core-ctrl",
                    "kapp.k14s.io/is-app-change": ""
                },
                "name": "tanzu-core-ctrl-change-c8x27",
                "namespace": "tkg-system",
                "resourceVersion": "1141",
                "uid": "90575b44-868c-44a0-a4b8-a5ee3b661529"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"tkr-controller-manager-6bc455b5d4-h2bqk_5b99938c-5d06-4bfd-b06e-f44c036a4b9c\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2021-10-13T11:47:10Z\",\"renewTime\":\"2021-10-13T11:54:54Z\",\"leaderTransitions\":0}"
                },
                "creationTimestamp": "2021-10-13T11:47:10Z",
                "name": "abf9f9ab.tanzu.vmware.com",
                "namespace": "tkr-system",
                "resourceVersion": "2009",
                "uid": "b97e75a6-8c57-478e-8278-b17c2298bd92"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "compatibility": "bWFuYWdlbWVudENsdXN0ZXJWZXJzaW9uczoKLSB2ZXJzaW9uOiB2MS40LjAKICBzdXBwb3J0ZWRLdWJlcm5ldGVzVmVyc2lvbnM6CiAgLSB2MS4xOS4xMit2bXdhcmUuMS10a2cuMQogIC0gdjEuMjEuMit2bXdhcmUuMS10a2cuMQogIC0gdjEuMjAuOCt2bXdhcmUuMS10a2cuMgotIHZlcnNpb246IHYxLjMuMAogIHN1cHBvcnRlZEt1YmVybmV0ZXNWZXJzaW9uczoKICAtIHYxLjIwLjQrdm13YXJlLjEtdGtnLjEKICAtIHYxLjE5Ljgrdm13YXJlLjEtdGtnLjEKICAtIHYxLjE4LjE2K3Ztd2FyZS4xLXRrZy4xCiAgLSB2MS4xNy4xNit2bXdhcmUuMi10a2cuMQotIHZlcnNpb246IHYxLjMuMQogIHN1cHBvcnRlZEt1YmVybmV0ZXNWZXJzaW9uczoKICAtIHYxLjE5Ljgrdm13YXJlLjMtdGtnLjEKICAtIHYxLjIwLjUrdm13YXJlLjItdGtnLjEKICAtIHYxLjE4LjE3K3Ztd2FyZS4yLXRrZy4xCiAgLSB2MS4yMC40K3Ztd2FyZS4zLXRrZy4xCiAgLSB2MS4xOS45K3Ztd2FyZS4yLXRrZy4xCiAgLSB2MS4xOC4xNit2bXdhcmUuMy10a2cuMQogIC0gdjEuMTcuMTYrdm13YXJlLjMtdGtnLjEKLSB2ZXJzaW9uOiB2MS4zLjEtcGF0Y2gxCiAgc3VwcG9ydGVkS3ViZXJuZXRlc1ZlcnNpb25zOgogIC0gdjEuMTkuOCt2bXdhcmUuMy10a2cuMQogIC0gdjEuMjAuNSt2bXdhcmUuMi10a2cuMQogIC0gdjEuMTguMTcrdm13YXJlLjItdGtnLjEKICAtIHYxLjIwLjQrdm13YXJlLjMtdGtnLjEKICAtIHYxLjE5Ljkrdm13YXJlLjItdGtnLjEKICAtIHYxLjE4LjE2K3Ztd2FyZS4zLXRrZy4xCiAgLSB2MS4xNy4xNit2bXdhcmUuMy10a2cuMQotIHZlcnNpb246IHYxLjMuMS1maXBzLjEKICBzdXBwb3J0ZWRLdWJlcm5ldGVzVmVyc2lvbnM6CiAgLSB2MS4yMC41K3Ztd2FyZS4yLWZpcHMuMS10a2cuMQo="
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:12Z",
                "name": "bom-metadata",
                "namespace": "tkr-system",
                "resourceVersion": "1202",
                "uid": "cc8c013c-3cf4-4af8-8421-5325e60f5fdc"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMTAxMzExMzk1MloXDTMxMTAxMTExNDQ1MlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOEg\nNiaOwKQFGjMWwiQNFcr6dUVIC4wwIixK/r1g0W7Kc9CV9OnRclPXChacCTJ2jUUa\njQj+VOy0LvkGqOjdJliY1TpPQM1orM5lHeucKy/KbJ01hxQiZ4+DxzWHTG86G9Eb\nstPmAo9w2NnqzcY2daasiKx/01AYKTezPOpiJ1h53J8IzoeGjOUzYOMkBlmmj1Z8\ngTVsp5DpfTeJ0ZHP1/AmKq2BrDL/Z8XZrf2HzOk9nLjIIGNCaeEDqorXCtsTjndl\n0vPv1pMuyCDuC1XtKq69dR5nqUQxC6OXS0ttzZwp72Hlxke4wcQcKPzIkxYgJVsU\nJpRZDtYsx0P93pbODsMCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwHQYDVR0OBBYEFMnCMYVcqb5ZuRTz9etbHPICEpEoMA0GCSqG\nSIb3DQEBCwUAA4IBAQCWor9CoAVEq7f2Mp/vn7DudFyYcKwoaTukFR63sF0MSOG9\nKKdJ14k9U/IbvpVtpg+IdncfmQs32xL81XCzP3/NXViee6ENzsCENeoVM1VKBLgT\nHwBahcAIzOKna4+6ZhapJAzkaMhCxHj5TVHp1A2BMcG8qJSs6P70jIF5yri8LYWY\nZwIF9de/uwxvYF6/O2AHAoMB1xgla2911dihggf2FsCatV44kYrYxwZmjLZJDZfb\neWbNqRfxcvknuxQ+kCZSwUMFsCIh5LWjw8FPmPNQ5RZcPq1qqZey2SgMla+6kDno\nd5yxA18D79Njlrk/IEtXbZyDn0CvS+ah3NO4LaOB\n-----END CERTIFICATE-----\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "name": "kube-root-ca.crt",
                "namespace": "tkr-system",
                "resourceVersion": "478",
                "uid": "4daaca6a-bf0b-4ac3-b6af-db60e76cd790"
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "caCerts": "",
                "imageRepository": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "tkr-controller-config",
                "namespace": "tkr-system",
                "resourceVersion": "321",
                "uid": "b0287eaf-3ec5-48cd-b2d9-164271829c99"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.17.16_vmware.2-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.17.16---vmware.2-tkg.1"
                },
                "name": "v1.17.16---vmware.2-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1211",
                "uid": "4c334724-d2d9-478b-ba2d-2a01f5ebb4b9"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.17.16_vmware.2-tkg.2"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.17.16---vmware.2-tkg.2"
                },
                "name": "v1.17.16---vmware.2-tkg.2",
                "namespace": "tkr-system",
                "resourceVersion": "1212",
                "uid": "8cbec1c5-f85c-4829-8da6-d48ea4d2fe08"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.17.16_vmware.3-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.17.16---vmware.3-tkg.1"
                },
                "name": "v1.17.16---vmware.3-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1213",
                "uid": "95e18a48-6fc6-4526-b493-b2f2ba1483ca"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.18.16_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:13Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.18.16---vmware.1-tkg.1"
                },
                "name": "v1.18.16---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1205",
                "uid": "4fdefac9-9783-4013-a264-ac32e01a405d"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.18.16_vmware.1-tkg.2"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.18.16---vmware.1-tkg.2"
                },
                "name": "v1.18.16---vmware.1-tkg.2",
                "namespace": "tkr-system",
                "resourceVersion": "1219",
                "uid": "074fd877-1d61-434c-bcb3-3451bc270b5f"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.18.16_vmware.3-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.18.16---vmware.3-tkg.1"
                },
                "name": "v1.18.16---vmware.3-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1226",
                "uid": "2276abfd-b74a-4466-91c7-202dff681459"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.18.17_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:13Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.18.17---vmware.1-tkg.1"
                },
                "name": "v1.18.17---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1206",
                "uid": "899433f8-fe42-44bd-82c6-03621318363d"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.18.17_vmware.2-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:16Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.18.17---vmware.2-tkg.1"
                },
                "name": "v1.18.17---vmware.2-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1230",
                "uid": "e4e6e035-5579-4dc8-b1ee-160db673367d"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.19.12_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.19.12---vmware.1-tkg.1"
                },
                "name": "v1.19.12---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1228",
                "uid": "d151f1e1-fec7-46ea-9bfa-a493344c8de1"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.19.8_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.19.8---vmware.1-tkg.1"
                },
                "name": "v1.19.8---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1229",
                "uid": "a3103276-e288-4dd2-b4b4-094e8f8af45f"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.19.8_vmware.1-tkg.2"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.19.8---vmware.1-tkg.2"
                },
                "name": "v1.19.8---vmware.1-tkg.2",
                "namespace": "tkr-system",
                "resourceVersion": "1221",
                "uid": "dc76f97e-1a11-4cbf-86cf-3d46e6c3184b"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.19.8_vmware.3-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.19.8---vmware.3-tkg.1"
                },
                "name": "v1.19.8---vmware.3-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1223",
                "uid": "05ee7c31-c792-4818-a11a-d39e75e2b198"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.19.9_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.19.9---vmware.1-tkg.1"
                },
                "name": "v1.19.9---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1215",
                "uid": "ebf18991-8618-4f23-ac0e-e0eb05bfe995"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.19.9_vmware.2-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:16Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.19.9---vmware.2-tkg.1"
                },
                "name": "v1.19.9---vmware.2-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1231",
                "uid": "30583a77-bbe6-43be-bbb0-50e66cea346d"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.4_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.4---vmware.1-tkg.1"
                },
                "name": "v1.20.4---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1217",
                "uid": "0e9996aa-a174-4708-82f2-f0056909bc01"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.4_vmware.1-tkg.2"
                },
                "creationTimestamp": "2021-10-13T11:48:13Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.4---vmware.1-tkg.2"
                },
                "name": "v1.20.4---vmware.1-tkg.2",
                "namespace": "tkr-system",
                "resourceVersion": "1208",
                "uid": "1e67e238-4b67-4c0c-8f65-5800eb66b699"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.4_vmware.3-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.4---vmware.3-tkg.1"
                },
                "name": "v1.20.4---vmware.3-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1224",
                "uid": "9888a5e1-8ba1-4a9a-bb32-e89fde421ce2"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.5_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.5---vmware.1-tkg.1"
                },
                "name": "v1.20.5---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1209",
                "uid": "ca98a42f-5109-4658-8457-7990d71b66ff"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.5_vmware.2-fips.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.5---vmware.2-fips.1-tkg.1"
                },
                "name": "v1.20.5---vmware.2-fips.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1210",
                "uid": "0ee8dc0d-7772-4022-ba50-30853a6f541a"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.5_vmware.2-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:14Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.5---vmware.2-tkg.1"
                },
                "name": "v1.20.5---vmware.2-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1214",
                "uid": "497f5aaa-b8c4-4549-85da-8b31b5c2b59c"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.20.8_vmware.1-tkg.2"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.20.8---vmware.1-tkg.2"
                },
                "name": "v1.20.8---vmware.1-tkg.2",
                "namespace": "tkr-system",
                "resourceVersion": "1218",
                "uid": "11fd28be-d439-4d8d-8edb-80abcbf7764a"
            }
        },
        {
            "apiVersion": "v1",
            "binaryData": {
                "bomContent": ""
            },
            "kind": "ConfigMap",
            "metadata": {
                "annotations": {
                    "bomImageTag": "v1.21.2_vmware.1-tkg.1"
                },
                "creationTimestamp": "2021-10-13T11:48:15Z",
                "labels": {
                    "tanzuKubernetesRelease": "v1.21.2---vmware.1-tkg.1"
                },
                "name": "v1.21.2---vmware.1-tkg.1",
                "namespace": "tkr-system",
                "resourceVersion": "1225",
                "uid": "3e106ae5-d773-4053-8c38-aee8470ecbbc"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "endpointslice.kubernetes.io/skip-mirror": "true"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "199",
                "uid": "799c8f06-0b61-4ca0-89d2-5797f1dc9a5c"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "172.18.0.4"
                        }
                    ],
                    "ports": [
                        {
                            "name": "https",
                            "port": 6443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2021-10-13T11:47:08Z"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea",
                "namespace": "kube-system",
                "resourceVersion": "1033",
                "uid": "f43e99d9-e221-4d4e-b446-6c8ae6f75046"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "172.18.0.5",
                            "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "antrea-controller-86f8988c5f-tmgvh",
                                "namespace": "kube-system",
                                "resourceVersion": "1030",
                                "uid": "5728c88a-1b2e-40ab-bb30-2ce7f98104c5"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "port": 10349,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2021-10-13T11:47:05Z"
                },
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "kube-dns",
                "namespace": "kube-system",
                "resourceVersion": "1015",
                "uid": "63deae07-639e-4fd9-90e8-935202f18c09"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "100.96.1.4",
                            "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "coredns-8dcb5c56b-jcd79",
                                "namespace": "kube-system",
                                "resourceVersion": "1003",
                                "uid": "fc9c15bd-f721-41a5-bef8-1e15b85ec728"
                            }
                        },
                        {
                            "ip": "100.96.1.5",
                            "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "coredns-8dcb5c56b-mmxrc",
                                "namespace": "kube-system",
                                "resourceVersion": "1012",
                                "uid": "fadd038f-a1f1-434a-92c6-65494f97de80"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "name": "dns-tcp",
                            "port": 53,
                            "protocol": "TCP"
                        },
                        {
                            "name": "dns",
                            "port": 53,
                            "protocol": "UDP"
                        },
                        {
                            "name": "metrics",
                            "port": 9153,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Endpoints",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2021-10-13T11:47:02Z"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "packaging-api",
                "namespace": "tkg-system",
                "resourceVersion": "967",
                "uid": "c3aac3c8-94f3-4c76-9c84-ab846234bd19"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "172.18.0.5",
                            "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                            "targetRef": {
                                "kind": "Pod",
                                "name": "kapp-controller-6499b8866-2fcn8",
                                "namespace": "tkg-system",
                                "resourceVersion": "966",
                                "uid": "790f0162-085f-4924-aa1b-175c0332a942"
                            }
                        }
                    ],
                    "ports": [
                        {
                            "port": 10100,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/metadata.name": "default"
                },
                "name": "default",
                "resourceVersion": "195",
                "uid": "47169181-06ba-41cf-98d1-73d631231ab7"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kubernetes.io/metadata.name": "kube-node-lease"
                },
                "name": "kube-node-lease",
                "resourceVersion": "18",
                "uid": "d7a6ac70-beec-47db-b446-a67a8720b873"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kubernetes.io/metadata.name": "kube-public"
                },
                "name": "kube-public",
                "resourceVersion": "15",
                "uid": "2159e41a-4985-4ffd-b32a-3c489d4394fb"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kubernetes.io/metadata.name": "kube-system"
                },
                "name": "kube-system",
                "resourceVersion": "11",
                "uid": "8dd0bcef-54e6-4687-834a-c741965e70b8"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "kubernetes.io/metadata.name": "tanzu-package-repo-global"
                },
                "name": "tanzu-package-repo-global",
                "resourceVersion": "543",
                "uid": "502a597f-705f-4a89-9c05-e4fa02121eea"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "labels": {
                    "kubernetes.io/metadata.name": "tkg-system"
                },
                "name": "tkg-system",
                "resourceVersion": "380",
                "uid": "d34f0e82-4251-474a-8e58-d77ef605073e"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "metadata/tkg"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "labels": {
                    "kubernetes.io/metadata.name": "tkg-system-public"
                },
                "name": "tkg-system-public",
                "resourceVersion": "312",
                "uid": "96d7b776-aa8c-4d66-a0a1-9bebdbc48ca4"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Namespace",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "labels": {
                    "control-plane": "controller-manager",
                    "kubernetes.io/metadata.name": "tkr-system"
                },
                "name": "tkr-system",
                "resourceVersion": "316",
                "uid": "dd6ad92a-95e1-4aac-a380-d62a3f0ad55c"
            },
            "spec": {
                "finalizers": [
                    "kubernetes"
                ]
            },
            "status": {
                "phase": "Active"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Node",
            "metadata": {
                "annotations": {
                    "cluster.x-k8s.io/cluster-name": "testcluster",
                    "cluster.x-k8s.io/cluster-namespace": "tkg-system",
                    "cluster.x-k8s.io/machine": "testcluster-control-plane-f4k77",
                    "cluster.x-k8s.io/owner-kind": "KubeadmControlPlane",
                    "cluster.x-k8s.io/owner-name": "testcluster-control-plane",
                    "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "testcluster-control-plane-f4k77",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node-role.kubernetes.io/master": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "name": "testcluster-control-plane-f4k77",
                "resourceVersion": "1695",
                "uid": "b7524e19-8095-4320-b100-52503b81c868"
            },
            "spec": {
                "podCIDR": "100.96.0.0/24",
                "podCIDRs": [
                    "100.96.0.0/24"
                ],
                "providerID": "docker:////testcluster-control-plane-f4k77",
                "taints": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    }
                ]
            },
            "status": {
                "addresses": [
                    {
                        "address": "172.18.0.4",
                        "type": "InternalIP"
                    },
                    {
                        "address": "testcluster-control-plane-f4k77",
                        "type": "Hostname"
                    }
                ],
                "allocatable": {
                    "cpu": "4",
                    "ephemeral-storage": "20511312Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12337044Ki",
                    "pods": "110"
                },
                "capacity": {
                    "cpu": "4",
                    "ephemeral-storage": "20511312Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12337044Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:03Z",
                        "lastTransitionTime": "2021-10-13T11:45:24Z",
                        "message": "kubelet has sufficient memory available",
                        "reason": "KubeletHasSufficientMemory",
                        "status": "False",
                        "type": "MemoryPressure"
                    },
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:03Z",
                        "lastTransitionTime": "2021-10-13T11:45:24Z",
                        "message": "kubelet has no disk pressure",
                        "reason": "KubeletHasNoDiskPressure",
                        "status": "False",
                        "type": "DiskPressure"
                    },
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:03Z",
                        "lastTransitionTime": "2021-10-13T11:45:24Z",
                        "message": "kubelet has sufficient PID available",
                        "reason": "KubeletHasSufficientPID",
                        "status": "False",
                        "type": "PIDPressure"
                    },
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:03Z",
                        "lastTransitionTime": "2021-10-13T11:46:53Z",
                        "message": "kubelet is posting ready status",
                        "reason": "KubeletReady",
                        "status": "True",
                        "type": "Ready"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "images": [
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                            "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1"
                        ],
                        "sizeBytes": 181889744
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-apiserver:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 126846931
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-controller-manager:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 121050937
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:0.5.4"
                        ],
                        "sizeBytes": 113207016
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 105113801
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/etcd:v3.4.13_vmware.15"
                        ],
                        "sizeBytes": 102950904
                    },
                    {
                        "names": [
                            "us.gcr.io/k8s-artifacts-prod/build-image/debian-base:v2.1.0"
                        ],
                        "sizeBytes": 53876619
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-scheduler:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 51874104
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5"
                        ],
                        "sizeBytes": 42482656
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner:v0.0.12"
                        ],
                        "sizeBytes": 41994847
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/pause:3.4.1"
                        ],
                        "sizeBytes": 685866
                    }
                ],
                "nodeInfo": {
                    "architecture": "amd64",
                    "bootID": "15947bfc-6790-42f9-879b-babec1c0b8b4",
                    "containerRuntimeVersion": "containerd://1.3.3-14-g449e9269",
                    "kernelVersion": "5.4.0-88-generic",
                    "kubeProxyVersion": "v1.21.2+vmware.1-360497810732255795",
                    "kubeletVersion": "v1.21.2+vmware.1-360497810732255795",
                    "machineID": "b311314681514a7cb74c03ef17dd5e48",
                    "operatingSystem": "linux",
                    "osImage": "Ubuntu 20.04 LTS",
                    "systemUUID": "84c4d5a1-1869-4d0e-82dc-c60ff51a10a2"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Node",
            "metadata": {
                "annotations": {
                    "cluster.x-k8s.io/cluster-name": "testcluster",
                    "cluster.x-k8s.io/cluster-namespace": "tkg-system",
                    "cluster.x-k8s.io/machine": "testcluster-md-0-58c696578c-xbzgl",
                    "cluster.x-k8s.io/owner-kind": "MachineSet",
                    "cluster.x-k8s.io/owner-name": "testcluster-md-0-58c696578c",
                    "kubeadm.alpha.kubernetes.io/cri-socket": "/var/run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                },
                "creationTimestamp": "2021-10-13T11:46:06Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "testcluster-md-0-58c696578c-xbzgl",
                    "kubernetes.io/os": "linux"
                },
                "name": "testcluster-md-0-58c696578c-xbzgl",
                "resourceVersion": "1757",
                "uid": "a69b8887-6851-4545-af81-1ea9c4a6b64e"
            },
            "spec": {
                "podCIDR": "100.96.1.0/24",
                "podCIDRs": [
                    "100.96.1.0/24"
                ],
                "providerID": "docker:////testcluster-md-0-58c696578c-xbzgl"
            },
            "status": {
                "addresses": [
                    {
                        "address": "172.18.0.5",
                        "type": "InternalIP"
                    },
                    {
                        "address": "testcluster-md-0-58c696578c-xbzgl",
                        "type": "Hostname"
                    }
                ],
                "allocatable": {
                    "cpu": "4",
                    "ephemeral-storage": "20511312Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12337044Ki",
                    "pods": "110"
                },
                "capacity": {
                    "cpu": "4",
                    "ephemeral-storage": "20511312Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "12337044Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:38Z",
                        "lastTransitionTime": "2021-10-13T11:46:06Z",
                        "message": "kubelet has sufficient memory available",
                        "reason": "KubeletHasSufficientMemory",
                        "status": "False",
                        "type": "MemoryPressure"
                    },
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:38Z",
                        "lastTransitionTime": "2021-10-13T11:46:06Z",
                        "message": "kubelet has no disk pressure",
                        "reason": "KubeletHasNoDiskPressure",
                        "status": "False",
                        "type": "DiskPressure"
                    },
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:38Z",
                        "lastTransitionTime": "2021-10-13T11:46:06Z",
                        "message": "kubelet has sufficient PID available",
                        "reason": "KubeletHasSufficientPID",
                        "status": "False",
                        "type": "PIDPressure"
                    },
                    {
                        "lastHeartbeatTime": "2021-10-13T11:52:38Z",
                        "lastTransitionTime": "2021-10-13T11:46:56Z",
                        "message": "kubelet is posting ready status",
                        "reason": "KubeletReady",
                        "status": "True",
                        "type": "Ready"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "images": [
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kapp-controller@sha256:753a70f616c746a4ac12f634afd9a6773216f1949c1007190b033c6df3a7e01d",
                            "projects.registry.vmware.com/tkg/kapp-controller:v0.23.0_vmware.1"
                        ],
                        "sizeBytes": 347916847
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                            "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1"
                        ],
                        "sizeBytes": 181889744
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-apiserver:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 126846931
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-controller-manager:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 121050937
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:0.5.4"
                        ],
                        "sizeBytes": 113207016
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 105113801
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/etcd:v3.4.13_vmware.15"
                        ],
                        "sizeBytes": 102950904
                    },
                    {
                        "names": [
                            "us.gcr.io/k8s-artifacts-prod/build-image/debian-base:v2.1.0"
                        ],
                        "sizeBytes": 53876619
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/kube-scheduler:v1.21.2_vmware.1"
                        ],
                        "sizeBytes": 51874104
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5"
                        ],
                        "sizeBytes": 42482656
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner:v0.0.12"
                        ],
                        "sizeBytes": 41994847
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager@sha256:46f492740b0a56fdfeb6e3ad255a962f2e80f6df12b96f1d5c77d1fa8c781bd4",
                            "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager:v1.4.0"
                        ],
                        "sizeBytes": 19941804
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager@sha256:f00540247307ae6b78c8fc914c9c01fd8ad41078d0ff5302005df72f172e3abb",
                            "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0"
                        ],
                        "sizeBytes": 18295633
                    },
                    {
                        "names": [
                            "projects.registry.vmware.com/tkg/pause:3.4.1"
                        ],
                        "sizeBytes": 685866
                    }
                ],
                "nodeInfo": {
                    "architecture": "amd64",
                    "bootID": "15947bfc-6790-42f9-879b-babec1c0b8b4",
                    "containerRuntimeVersion": "containerd://1.3.3-14-g449e9269",
                    "kernelVersion": "5.4.0-88-generic",
                    "kubeProxyVersion": "v1.21.2+vmware.1-360497810732255795",
                    "kubeletVersion": "v1.21.2+vmware.1-360497810732255795",
                    "machineID": "694cf58eb21a4620997d4da1b40a6ec9",
                    "operatingSystem": "linux",
                    "osImage": "Ubuntu 20.04 LTS",
                    "systemUUID": "41a71bae-fe2f-4cd7-87f4-35168d622c15"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generateName": "antrea-agent-",
                "labels": {
                    "app": "antrea",
                    "component": "antrea-agent",
                    "controller-revision-hash": "75c599bbdd",
                    "pod-template-generation": "1"
                },
                "name": "antrea-agent-bqmn5",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "antrea-agent",
                        "uid": "8c84cfc4-36e3-45b6-9fb9-fa9c7a148363"
                    }
                ],
                "resourceVersion": "957",
                "uid": "c69bec63-0a37-4983-bd44-921918c9cfe8"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "testcluster-control-plane-f4k77"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--config",
                            "/etc/antrea/antrea-agent.conf",
                            "--logtostderr=false",
                            "--log_dir=/var/log/antrea",
                            "--alsologtostderr",
                            "--log_file_max_size=100",
                            "--log_file_max_num=4",
                            "--v=0"
                        ],
                        "command": [
                            "antrea-agent"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "container_liveness_probe agent"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "antrea-agent",
                        "ports": [
                            {
                                "containerPort": 10350,
                                "hostPort": 10350,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/readyz",
                                "port": "api",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/antrea/antrea-agent.conf",
                                "name": "antrea-config",
                                "readOnly": true,
                                "subPath": "antrea-agent.conf"
                            },
                            {
                                "mountPath": "/var/run/antrea",
                                "name": "host-var-run-antrea"
                            },
                            {
                                "mountPath": "/var/run/openvswitch",
                                "name": "host-var-run-antrea",
                                "subPath": "openvswitch"
                            },
                            {
                                "mountPath": "/var/lib/cni",
                                "name": "host-var-run-antrea",
                                "subPath": "cni"
                            },
                            {
                                "mountPath": "/var/log/antrea",
                                "name": "host-var-log-antrea"
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "host-proc",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/var/run/netns",
                                "mountPropagation": "HostToContainer",
                                "name": "host-var-run-netns",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jvrpr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--log_file_max_size=100",
                            "--log_file_max_num=4"
                        ],
                        "command": [
                            "start_ovs_netdev"
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "timeout 10 container_liveness_probe ovs"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "antrea-ovs",
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_NICE",
                                    "NET_ADMIN",
                                    "SYS_ADMIN",
                                    "IPC_LOCK"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/openvswitch",
                                "name": "host-var-run-antrea",
                                "subPath": "openvswitch"
                            },
                            {
                                "mountPath": "/var/log/openvswitch",
                                "name": "host-var-log-antrea",
                                "subPath": "openvswitch"
                            },
                            {
                                "mountPath": "/dev/net/tun",
                                "name": "dev-tun"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jvrpr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirstWithHostNet",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "initContainers": [
                    {
                        "command": [
                            "install_cni_kind"
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "install-cni",
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_MODULE"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/antrea/antrea-cni.conflist",
                                "name": "antrea-config",
                                "readOnly": true,
                                "subPath": "antrea-cni.conflist"
                            },
                            {
                                "mountPath": "/host/etc/cni/net.d",
                                "name": "host-cni-conf"
                            },
                            {
                                "mountPath": "/host/opt/cni/bin",
                                "name": "host-cni-bin"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "host-lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/antrea",
                                "name": "host-var-run-antrea"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jvrpr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "testcluster-control-plane-f4k77",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "antrea-agent",
                "serviceAccountName": "antrea-agent",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "antrea-config-ctb8mftc58"
                        },
                        "name": "antrea-config"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        },
                        "name": "host-cni-conf"
                    },
                    {
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        },
                        "name": "host-cni-bin"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "host-proc"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/netns",
                            "type": ""
                        },
                        "name": "host-var-run-netns"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/antrea",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "host-var-run-antrea"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/antrea",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "host-var-log-antrea"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "host-lib-modules"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/dev/net/tun",
                            "type": "CharDevice"
                        },
                        "name": "dev-tun"
                    },
                    {
                        "name": "kube-api-access-jvrpr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:00Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:00Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://65b6c85e053fee1d4d61defff2416153e738baf130130dbcd1640b81a2cc0ee5",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "antrea-agent",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:46:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://1d5c8d39a68b2dede01ff0a871eba725d0f84772aeb82eaa352ef61cffa958eb",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "antrea-ovs",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:46:51Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.4",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://5cfbbc050a8b75be59881253a245fa2cf10977aa32cab80d8b90e8d236eb98dd",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "install-cni",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://5cfbbc050a8b75be59881253a245fa2cf10977aa32cab80d8b90e8d236eb98dd",
                                "exitCode": 0,
                                "finishedAt": "2021-10-13T11:46:49Z",
                                "reason": "Completed",
                                "startedAt": "2021-10-13T11:46:49Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:46:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generateName": "antrea-agent-",
                "labels": {
                    "app": "antrea",
                    "component": "antrea-agent",
                    "controller-revision-hash": "75c599bbdd",
                    "pod-template-generation": "1"
                },
                "name": "antrea-agent-ltnjk",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "antrea-agent",
                        "uid": "8c84cfc4-36e3-45b6-9fb9-fa9c7a148363"
                    }
                ],
                "resourceVersion": "959",
                "uid": "2dbfb8d3-dd07-4897-b5b7-c4fa09ea8920"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "testcluster-md-0-58c696578c-xbzgl"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--config",
                            "/etc/antrea/antrea-agent.conf",
                            "--logtostderr=false",
                            "--log_dir=/var/log/antrea",
                            "--alsologtostderr",
                            "--log_file_max_size=100",
                            "--log_file_max_num=4",
                            "--v=0"
                        ],
                        "command": [
                            "antrea-agent"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "container_liveness_probe agent"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "antrea-agent",
                        "ports": [
                            {
                                "containerPort": 10350,
                                "hostPort": 10350,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/readyz",
                                "port": "api",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/antrea/antrea-agent.conf",
                                "name": "antrea-config",
                                "readOnly": true,
                                "subPath": "antrea-agent.conf"
                            },
                            {
                                "mountPath": "/var/run/antrea",
                                "name": "host-var-run-antrea"
                            },
                            {
                                "mountPath": "/var/run/openvswitch",
                                "name": "host-var-run-antrea",
                                "subPath": "openvswitch"
                            },
                            {
                                "mountPath": "/var/lib/cni",
                                "name": "host-var-run-antrea",
                                "subPath": "cni"
                            },
                            {
                                "mountPath": "/var/log/antrea",
                                "name": "host-var-log-antrea"
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "host-proc",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/var/run/netns",
                                "mountPropagation": "HostToContainer",
                                "name": "host-var-run-netns",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k27bq",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--log_file_max_size=100",
                            "--log_file_max_num=4"
                        ],
                        "command": [
                            "start_ovs_netdev"
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "timeout 10 container_liveness_probe ovs"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "antrea-ovs",
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_NICE",
                                    "NET_ADMIN",
                                    "SYS_ADMIN",
                                    "IPC_LOCK"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/openvswitch",
                                "name": "host-var-run-antrea",
                                "subPath": "openvswitch"
                            },
                            {
                                "mountPath": "/var/log/openvswitch",
                                "name": "host-var-log-antrea",
                                "subPath": "openvswitch"
                            },
                            {
                                "mountPath": "/dev/net/tun",
                                "name": "dev-tun"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k27bq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirstWithHostNet",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "initContainers": [
                    {
                        "command": [
                            "install_cni_kind"
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "install-cni",
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_MODULE"
                                ]
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/antrea/antrea-cni.conflist",
                                "name": "antrea-config",
                                "readOnly": true,
                                "subPath": "antrea-cni.conflist"
                            },
                            {
                                "mountPath": "/host/etc/cni/net.d",
                                "name": "host-cni-conf"
                            },
                            {
                                "mountPath": "/host/opt/cni/bin",
                                "name": "host-cni-bin"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "host-lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/antrea",
                                "name": "host-var-run-antrea"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k27bq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "antrea-agent",
                "serviceAccountName": "antrea-agent",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "antrea-config-ctb8mftc58"
                        },
                        "name": "antrea-config"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        },
                        "name": "host-cni-conf"
                    },
                    {
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        },
                        "name": "host-cni-bin"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "host-proc"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/netns",
                            "type": ""
                        },
                        "name": "host-var-run-netns"
                    },
                    {
                        "hostPath": {
                            "path": "/var/run/antrea",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "host-var-run-antrea"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/antrea",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "host-var-log-antrea"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "host-lib-modules"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/dev/net/tun",
                            "type": "CharDevice"
                        },
                        "name": "dev-tun"
                    },
                    {
                        "name": "kube-api-access-k27bq",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:00Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:00Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://ce7bc91f0ac4cb58914cf6dfc4733f7972253d29646c1a80647f948c84f4fa94",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "antrea-agent",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:46:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://68f1e7638e834a385ecb94b60d82fbc5e510509770eecd0c7dee59654fd1936c",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "antrea-ovs",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:46:51Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://59662549e9a7a6552dd9f3bba2aa5c21b4761a6f55ed2e6c8d9d05e9ebe15471",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "install-cni",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://59662549e9a7a6552dd9f3bba2aa5c21b4761a6f55ed2e6c8d9d05e9ebe15471",
                                "exitCode": 0,
                                "finishedAt": "2021-10-13T11:46:49Z",
                                "reason": "Completed",
                                "startedAt": "2021-10-13T11:46:49Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:46:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generateName": "antrea-controller-86f8988c5f-",
                "labels": {
                    "app": "antrea",
                    "component": "antrea-controller",
                    "pod-template-hash": "86f8988c5f"
                },
                "name": "antrea-controller-86f8988c5f-tmgvh",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "antrea-controller-86f8988c5f",
                        "uid": "eb3f1b57-1f11-43e0-b256-7329f7b02172"
                    }
                ],
                "resourceVersion": "1030",
                "uid": "5728c88a-1b2e-40ab-bb30-2ce7f98104c5"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--config",
                            "/etc/antrea/antrea-controller.conf",
                            "--logtostderr=false",
                            "--log_dir=/var/log/antrea",
                            "--alsologtostderr",
                            "--log_file_max_size=100",
                            "--log_file_max_num=4",
                            "--v=0"
                        ],
                        "command": [
                            "antrea-controller"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "SERVICEACCOUNT_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ANTREA_CONFIG_MAP_NAME",
                                "value": "antrea-config-ctb8mftc58"
                            }
                        ],
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/livez",
                                "port": "api",
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "antrea-controller",
                        "ports": [
                            {
                                "containerPort": 10349,
                                "hostPort": 10349,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/readyz",
                                "port": "api",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/antrea/antrea-controller.conf",
                                "name": "antrea-config",
                                "readOnly": true,
                                "subPath": "antrea-controller.conf"
                            },
                            {
                                "mountPath": "/var/run/antrea/antrea-controller-tls",
                                "name": "antrea-controller-tls"
                            },
                            {
                                "mountPath": "/var/log/antrea",
                                "name": "host-var-log-antrea"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-mzkfb",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "antrea-controller",
                "serviceAccountName": "antrea-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "antrea-config-ctb8mftc58"
                        },
                        "name": "antrea-config"
                    },
                    {
                        "name": "antrea-controller-tls",
                        "secret": {
                            "defaultMode": 256,
                            "optional": true,
                            "secretName": "antrea-controller-tls"
                        }
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/antrea",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "host-var-log-antrea"
                    },
                    {
                        "name": "kube-api-access-mzkfb",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:58Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:58Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://6b7dad34fc64fecbe8f8c117d11de4401277c7b5c7de35e85676ab4dfb9a95de",
                        "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/antrea/antrea-debian@sha256:8a4c3f719bec5eb3d6b4a73fc8156a8d7137418f7788ae29b1226f820df1b102",
                        "lastState": {},
                        "name": "antrea-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:46:59Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:46:58Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "generateName": "coredns-8dcb5c56b-",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "8dcb5c56b"
                },
                "name": "coredns-8dcb5c56b-jcd79",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "coredns-8dcb5c56b",
                        "uid": "a68dc46a-9508-4051-9b85-5477a08da721"
                    }
                ],
                "resourceVersion": "1003",
                "uid": "fc9c15bd-f721-41a5-bef8-1e15b85ec728"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "image": "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "coredns",
                        "ports": [
                            {
                                "containerPort": 53,
                                "name": "dns",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 53,
                                "name": "dns-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9153,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ssm7m",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "Default",
                "enableServiceLinks": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "name": "coredns"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-ssm7m",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:05Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://9233a3ab2cca17f522ed4d52f5eac077f2a852bec78ede9dcf741a1b0669651d",
                        "image": "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5",
                        "imageID": "sha256:c9265e1ac0f2ca81031d0c40c6f3e2d1bc5ed57e86668235d49f149861cb9d49",
                        "lastState": {},
                        "name": "coredns",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:47:05Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "100.96.1.4",
                "podIPs": [
                    {
                        "ip": "100.96.1.4"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:47:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "generateName": "coredns-8dcb5c56b-",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "8dcb5c56b"
                },
                "name": "coredns-8dcb5c56b-mmxrc",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "coredns-8dcb5c56b",
                        "uid": "a68dc46a-9508-4051-9b85-5477a08da721"
                    }
                ],
                "resourceVersion": "1012",
                "uid": "fadd038f-a1f1-434a-92c6-65494f97de80"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "image": "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "coredns",
                        "ports": [
                            {
                                "containerPort": 53,
                                "name": "dns",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 53,
                                "name": "dns-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9153,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c9vwc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "Default",
                "enableServiceLinks": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "name": "coredns"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-c9vwc",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:05Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://754cb8a613b5d166254415c5a6c0d9551da8d33b243a5c79fbe1bbdad699cfee",
                        "image": "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5",
                        "imageID": "sha256:c9265e1ac0f2ca81031d0c40c6f3e2d1bc5ed57e86668235d49f149861cb9d49",
                        "lastState": {},
                        "name": "coredns",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:47:05Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "100.96.1.5",
                "podIPs": [
                    {
                        "ip": "100.96.1.5"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:47:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.4:2379",
                    "kubernetes.io/config.hash": "456264b1e2f3f3b5014cb7d1cd0f6a74",
                    "kubernetes.io/config.mirror": "456264b1e2f3f3b5014cb7d1cd0f6a74",
                    "kubernetes.io/config.seen": "2021-10-13T11:45:26.101722021Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "name": "etcd-testcluster-control-plane-f4k77",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "testcluster-control-plane-f4k77",
                        "uid": "b7524e19-8095-4320-b100-52503b81c868"
                    }
                ],
                "resourceVersion": "521",
                "uid": "7a4ef5e5-8ee5-4a0c-adc8-49e9ae55dbcb"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.4:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--initial-advertise-peer-urls=https://172.18.0.4:2380",
                            "--initial-cluster=testcluster-control-plane-f4k77=https://172.18.0.4:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.4:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.4:2380",
                            "--name=testcluster-control-plane-f4k77",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "image": "projects.registry.vmware.com/tkg/etcd:v3.4.13_vmware.15",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/health",
                                "port": 2381,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "etcd",
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/health",
                                "port": 2381,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/etcd",
                                "name": "etcd-data"
                            },
                            {
                                "mountPath": "/etc/kubernetes/pki/etcd",
                                "name": "etcd-certs"
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-control-plane-f4k77",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etcd-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etcd-data"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:35Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:35Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://96659fa7b2b0c3645a09124f87e39f3e6b836eee62fbc0c976279ee7dd622cde",
                        "image": "projects.registry.vmware.com/tkg/etcd:v3.4.13_vmware.15",
                        "imageID": "sha256:6f7c29e5ac889c71ecf720209631e5235a3f95d929472ed522ca68cb11124253",
                        "lastState": {},
                        "name": "etcd",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:45:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.4",
                "phase": "Running",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:45:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.4:6443",
                    "kubernetes.io/config.hash": "ee00447b326537b92b9de51ef83352fc",
                    "kubernetes.io/config.mirror": "ee00447b326537b92b9de51ef83352fc",
                    "kubernetes.io/config.seen": "2021-10-13T11:45:26.101723091Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "name": "kube-apiserver-testcluster-control-plane-f4k77",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "testcluster-control-plane-f4k77",
                        "uid": "b7524e19-8095-4320-b100-52503b81c868"
                    }
                ],
                "resourceVersion": "527",
                "uid": "6503b4e2-0268-4aa6-94b6-9ad6939bc973"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.4",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--insecure-port=0",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=100.64.0.0/13",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "image": "projects.registry.vmware.com/tkg/kube-apiserver:v1.21.2_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "172.18.0.4",
                                "path": "/livez",
                                "port": 6443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-apiserver",
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "172.18.0.4",
                                "path": "/readyz",
                                "port": 6443,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "172.18.0.4",
                                "path": "/livez",
                                "port": 6443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/ssl/certs",
                                "name": "ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/ca-certificates",
                                "name": "etc-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes/pki",
                                "name": "k8s-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/local/share/ca-certificates",
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/share/ca-certificates",
                                "name": "usr-share-ca-certificates",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-control-plane-f4k77",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "ca-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etc-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "k8s-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-local-share-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-share-ca-certificates"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:37Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b76bb41a6b18e4a9cdbc643c02e1ddcca94715c0cc0774ffd23f4d951df27b0d",
                        "image": "projects.registry.vmware.com/tkg/kube-apiserver:v1.21.2_vmware.1",
                        "imageID": "sha256:684ab9df1d71ef59a113e4a94975390c68ea6d7aca0d097d3697b26eb18d055a",
                        "lastState": {},
                        "name": "kube-apiserver",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:45:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.4",
                "phase": "Running",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:45:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "9cc42c2f5b192eb3057452e3c73487fa",
                    "kubernetes.io/config.mirror": "9cc42c2f5b192eb3057452e3c73487fa",
                    "kubernetes.io/config.seen": "2021-10-13T11:45:26.101723771Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "name": "kube-controller-manager-testcluster-control-plane-f4k77",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "testcluster-control-plane-f4k77",
                        "uid": "b7524e19-8095-4320-b100-52503b81c868"
                    }
                ],
                "resourceVersion": "616",
                "uid": "8de705ca-3eb0-43d1-a9de-d08d9dda2ee2"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=100.96.0.0/11",
                            "--cluster-name=testcluster",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--port=0",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=100.64.0.0/13",
                            "--use-service-account-credentials=true"
                        ],
                        "image": "projects.registry.vmware.com/tkg/kube-controller-manager:v1.21.2_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10257,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-controller-manager",
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10257,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/ssl/certs",
                                "name": "ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/ca-certificates",
                                "name": "etc-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                                "name": "flexvolume-dir"
                            },
                            {
                                "mountPath": "/etc/kubernetes/pki",
                                "name": "k8s-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes/controller-manager.conf",
                                "name": "kubeconfig",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/local/share/ca-certificates",
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/share/ca-certificates",
                                "name": "usr-share-ca-certificates",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-control-plane-f4k77",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "ca-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etc-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "flexvolume-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "k8s-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        },
                        "name": "kubeconfig"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-local-share-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-share-ca-certificates"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:41Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:41Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://2a779996b4ed3b5272169f278b82ae14a15b5d497b495ee77a1fc25d3fbe1ee6",
                        "image": "projects.registry.vmware.com/tkg/kube-controller-manager:v1.21.2_vmware.1",
                        "imageID": "sha256:ce37dbec1f16e2533d42f4845b7a597dec173baed4f190f472a2dfa490b31715",
                        "lastState": {},
                        "name": "kube-controller-manager",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:45:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.4",
                "phase": "Running",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:45:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:06Z",
                "generateName": "kube-proxy-",
                "labels": {
                    "controller-revision-hash": "c994565f8",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "name": "kube-proxy-gm526",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "aeb8e360-deae-4f0c-a490-2f03c6b8c474"
                    }
                ],
                "resourceVersion": "704",
                "uid": "2868155d-9c1d-4e8d-a954-eb25a27a753a"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "testcluster-md-0-58c696578c-xbzgl"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-proxy",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kube-proxy",
                                "name": "kube-proxy"
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k7t4k",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kube-proxy",
                "serviceAccountName": "kube-proxy",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kube-proxy"
                        },
                        "name": "kube-proxy"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "lib-modules"
                    },
                    {
                        "name": "kube-api-access-k7t4k",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:09Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:09Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://53a72631e507225c825edbf916605de7c1354dd9ec1aee2b5c9a9973cb18fd41",
                        "image": "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1",
                        "imageID": "sha256:f7f7ffd14fc047480af7fae02d9d7060aca25da44d018f3a2971e70b465a5630",
                        "lastState": {},
                        "name": "kube-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:46:08Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2021-10-13T11:46:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "generateName": "kube-proxy-",
                "labels": {
                    "controller-revision-hash": "c994565f8",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "name": "kube-proxy-rjqrf",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "aeb8e360-deae-4f0c-a490-2f03c6b8c474"
                    }
                ],
                "resourceVersion": "523",
                "uid": "bc01e6bf-cf05-4efc-a9c1-0fbe476ff7e3"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "testcluster-control-plane-f4k77"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-proxy",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kube-proxy",
                                "name": "kube-proxy"
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-pxp5n",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-control-plane-f4k77",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kube-proxy",
                "serviceAccountName": "kube-proxy",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kube-proxy"
                        },
                        "name": "kube-proxy"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "lib-modules"
                    },
                    {
                        "name": "kube-api-access-pxp5n",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:34Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:34Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://e02921c86f93b73d76ffaf566bb6cb51944b58bfb5cfec615bbecff491c747c2",
                        "image": "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1",
                        "imageID": "sha256:f7f7ffd14fc047480af7fae02d9d7060aca25da44d018f3a2971e70b465a5630",
                        "lastState": {},
                        "name": "kube-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:45:36Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.4",
                "phase": "Running",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2021-10-13T11:45:34Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "a461cf4e1fa66f88f68068630d339987",
                    "kubernetes.io/config.mirror": "a461cf4e1fa66f88f68068630d339987",
                    "kubernetes.io/config.seen": "2021-10-13T11:45:26.101712941Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "name": "kube-scheduler-testcluster-control-plane-f4k77",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "testcluster-control-plane-f4k77",
                        "uid": "b7524e19-8095-4320-b100-52503b81c868"
                    }
                ],
                "resourceVersion": "512",
                "uid": "7a53c856-9bf8-4b18-ba51-f36adb497df7"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true",
                            "--port=0"
                        ],
                        "image": "projects.registry.vmware.com/tkg/kube-scheduler:v1.21.2_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-scheduler",
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/kubernetes/scheduler.conf",
                                "name": "kubeconfig",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-control-plane-f4k77",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        },
                        "name": "kubeconfig"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:33Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:45:32Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://36f0e5370a5f94c3cc385de47f8b996cb7f768263f5753ea709a13fb7110abd4",
                        "image": "projects.registry.vmware.com/tkg/kube-scheduler:v1.21.2_vmware.1",
                        "imageID": "sha256:36dc8f84f1ae9adce7941b6c41f197186c2a6f2a679146a09015c4b676cce021",
                        "lastState": {},
                        "name": "kube-scheduler",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:45:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.4",
                "phase": "Running",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:45:32Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generateName": "kapp-controller-6499b8866-",
                "labels": {
                    "app": "kapp-controller",
                    "pod-template-hash": "6499b8866"
                },
                "name": "kapp-controller-6499b8866-2fcn8",
                "namespace": "tkg-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kapp-controller-6499b8866",
                        "uid": "c93eaecc-0c01-4fe9-ba3b-8990e65dff37"
                    }
                ],
                "resourceVersion": "966",
                "uid": "790f0162-085f-4924-aa1b-175c0332a942"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-packaging-global-namespace=tanzu-package-repo-global",
                            "-concurrency=4"
                        ],
                        "env": [
                            {
                                "name": "KAPPCTRL_MEM_TMP_DIR",
                                "value": "/etc/kappctrl-mem-tmp"
                            },
                            {
                                "name": "KAPPCTRL_SYSTEM_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KAPPCTRL_API_PORT",
                                "value": "10100"
                            }
                        ],
                        "image": "projects.registry.vmware.com/tkg/kapp-controller:v0.23.0_vmware.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kapp-controller",
                        "ports": [
                            {
                                "containerPort": 10100,
                                "hostPort": 10100,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "120m",
                                "memory": "100Mi"
                            }
                        },
                        "securityContext": {
                            "runAsGroup": 2000,
                            "runAsUser": 1000
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/kappctrl-mem-tmp",
                                "name": "template-fs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-qdrxf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 3000
                },
                "serviceAccount": "kapp-controller-sa",
                "serviceAccountName": "kapp-controller-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/not-ready"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.cloudprovider.kubernetes.io/uninitialized",
                        "value": "true"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "template-fs"
                    },
                    {
                        "name": "kube-api-access-qdrxf",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:40Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:02Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:02Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:46:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://1b96ffdfc822dfea2ee205a58c55b133d9e7025089cf2dfb03cf5b3b1d343163",
                        "image": "projects.registry.vmware.com/tkg/kapp-controller:v0.23.0_vmware.1",
                        "imageID": "projects.registry.vmware.com/tkg/kapp-controller@sha256:753a70f616c746a4ac12f634afd9a6773216f1949c1007190b033c6df3a7e01d",
                        "lastState": {},
                        "name": "kapp-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:47:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:46:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generateName": "tanzu-capabilities-controller-manager-6ff97656b8-",
                "labels": {
                    "app": "tanzu-capabilities-manager",
                    "pod-template-hash": "6ff97656b8"
                },
                "name": "tanzu-capabilities-controller-manager-6ff97656b8-t6x5f",
                "namespace": "tkg-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tanzu-capabilities-controller-manager-6ff97656b8",
                        "uid": "1fb95997-eb2b-40c7-a76b-151b8f163eaf"
                    }
                ],
                "resourceVersion": "1026",
                "uid": "76804e47-8850-4c65-8bab-aeeec0fba0b7"
            },
            "spec": {
                "containers": [
                    {
                        "image": "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "manager",
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "30Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-9qx24",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tanzu-capabilities-manager-sa",
                "serviceAccountName": "tanzu-capabilities-manager-sa",
                "terminationGracePeriodSeconds": 10,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-9qx24",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://6b213b35b6bf0715df4fcfbddc7f34d20668840ec6c2b9732afd10d4db9c091f",
                        "image": "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0",
                        "imageID": "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager@sha256:f00540247307ae6b78c8fc914c9c01fd8ad41078d0ff5302005df72f172e3abb",
                        "lastState": {},
                        "name": "manager",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:47:07Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "100.96.1.3",
                "podIPs": [
                    {
                        "ip": "100.96.1.3"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:47:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generateName": "tkr-controller-manager-6bc455b5d4-",
                "labels": {
                    "control-plane": "controller-manager",
                    "pod-template-hash": "6bc455b5d4"
                },
                "name": "tkr-controller-manager-6bc455b5d4-h2bqk",
                "namespace": "tkr-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tkr-controller-manager-6bc455b5d4",
                        "uid": "473fa565-5be4-4792-9156-8a1c023c2409"
                    }
                ],
                "resourceVersion": "1018",
                "uid": "edbceef7-2d78-4d2b-836f-c8f6c2e0d202"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--enable-leader-election",
                            "--bom-image-path=projects.registry.vmware.com/tkg/tkr-bom",
                            "--bom-metadata-image-path=projects.registry.vmware.com/tkg/tkr-compatibility",
                            "--skip-verify-registry-cert=False",
                            "--continuous-discover-frequency=600"
                        ],
                        "command": [
                            "/manager"
                        ],
                        "image": "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager:v1.4.0",
                        "imagePullPolicy": "Always",
                        "name": "manager",
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-f79fn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 10,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-f79fn",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:06Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-10-13T11:47:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://fabc4e0b7c70ff61c05554cc0fd2adc8c380e259180e11d909eef26681d60702",
                        "image": "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager:v1.4.0",
                        "imageID": "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager@sha256:46f492740b0a56fdfeb6e3ad255a962f2e80f6df12b96f1d5c77d1fa8c781bd4",
                        "lastState": {},
                        "name": "manager",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2021-10-13T11:47:06Z"
                            }
                        }
                    }
                ],
                "hostIP": "172.18.0.5",
                "phase": "Running",
                "podIP": "100.96.1.2",
                "podIPs": [
                    {
                        "ip": "100.96.1.2"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2021-10-13T11:47:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "default",
                "resourceVersion": "456",
                "uid": "a4cab02c-38d0-465a-a8d7-65e8a83bc2ca"
            },
            "secrets": [
                {
                    "name": "default-token-brnlb"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "kube-node-lease",
                "resourceVersion": "454",
                "uid": "c90a5504-b374-45c7-917d-bf5e603a90c2"
            },
            "secrets": [
                {
                    "name": "default-token-7s5jd"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "kube-public",
                "resourceVersion": "484",
                "uid": "172fefd1-d4d9-49a4-b9e7-90da7299a2f9"
            },
            "secrets": [
                {
                    "name": "default-token-nrtkv"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antctl",
                "namespace": "kube-system",
                "resourceVersion": "592",
                "uid": "bd03cffe-75d2-485c-82a0-2787968c1274"
            },
            "secrets": [
                {
                    "name": "antctl-token-6xl98"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-agent",
                "namespace": "kube-system",
                "resourceVersion": "608",
                "uid": "58c59dd1-16b8-477e-b995-d227b8242266"
            },
            "secrets": [
                {
                    "name": "antrea-agent-token-n8c5n"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-controller",
                "namespace": "kube-system",
                "resourceVersion": "607",
                "uid": "4672c688-605f-4fc4-b980-4811ce3187dc"
            },
            "secrets": [
                {
                    "name": "antrea-controller-token-h8d2r"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "attachdetach-controller",
                "namespace": "kube-system",
                "resourceVersion": "440",
                "uid": "18d44e4f-c9ea-4047-b59d-fada26acdef6"
            },
            "secrets": [
                {
                    "name": "attachdetach-controller-token-j578b"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "398",
                "uid": "8e98c99e-caa0-4374-92de-bcea0506be87"
            },
            "secrets": [
                {
                    "name": "bootstrap-signer-token-nhkqx"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "certificate-controller",
                "namespace": "kube-system",
                "resourceVersion": "356",
                "uid": "5a70db55-8c75-4040-b749-f666d4d916dc"
            },
            "secrets": [
                {
                    "name": "certificate-controller-token-cjbgl"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "clusterrole-aggregation-controller",
                "namespace": "kube-system",
                "resourceVersion": "238",
                "uid": "29aa0cae-d97a-4d8d-80b7-cf7936785bf0"
            },
            "secrets": [
                {
                    "name": "clusterrole-aggregation-controller-token-kggqt"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "coredns",
                "namespace": "kube-system",
                "resourceVersion": "297",
                "uid": "fc652059-0123-45b9-8137-e209f9105daf"
            },
            "secrets": [
                {
                    "name": "coredns-token-zdwm6"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "cronjob-controller",
                "namespace": "kube-system",
                "resourceVersion": "434",
                "uid": "52d43742-08b2-4e0b-989d-d2146de64d5f"
            },
            "secrets": [
                {
                    "name": "cronjob-controller-token-shmxd"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "daemon-set-controller",
                "namespace": "kube-system",
                "resourceVersion": "411",
                "uid": "aa6d85d4-b100-4a70-906e-1f66e10a7730"
            },
            "secrets": [
                {
                    "name": "daemon-set-controller-token-cn69s"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "kube-system",
                "resourceVersion": "465",
                "uid": "e65b9664-9e08-4948-9784-d0b520890c1a"
            },
            "secrets": [
                {
                    "name": "default-token-fhv9d"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:21Z",
                "name": "deployment-controller",
                "namespace": "kube-system",
                "resourceVersion": "242",
                "uid": "4816275c-dd5b-4cf9-8c97-8f4a9b196593"
            },
            "secrets": [
                {
                    "name": "deployment-controller-token-lznxc"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "disruption-controller",
                "namespace": "kube-system",
                "resourceVersion": "226",
                "uid": "ea443940-027e-4ec7-b8e7-632033627a3c"
            },
            "secrets": [
                {
                    "name": "disruption-controller-token-mg8fq"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "endpoint-controller",
                "namespace": "kube-system",
                "resourceVersion": "371",
                "uid": "becd485d-09de-4222-be75-5e10f6bd75ec"
            },
            "secrets": [
                {
                    "name": "endpoint-controller-token-jhkck"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "endpointslice-controller",
                "namespace": "kube-system",
                "resourceVersion": "429",
                "uid": "2ee24037-bc6e-4cb9-814f-1780b048322e"
            },
            "secrets": [
                {
                    "name": "endpointslice-controller-token-lkldq"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "endpointslicemirroring-controller",
                "namespace": "kube-system",
                "resourceVersion": "363",
                "uid": "fbd9fb91-4669-4712-af4b-6d719856484d"
            },
            "secrets": [
                {
                    "name": "endpointslicemirroring-controller-token-vfvbj"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "ephemeral-volume-controller",
                "namespace": "kube-system",
                "resourceVersion": "401",
                "uid": "a79f0aea-a6cc-454d-bb70-ae1b596d1cf6"
            },
            "secrets": [
                {
                    "name": "ephemeral-volume-controller-token-rp9g2"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "expand-controller",
                "namespace": "kube-system",
                "resourceVersion": "426",
                "uid": "a303d75b-7571-4850-bee7-01ecf832a176"
            },
            "secrets": [
                {
                    "name": "expand-controller-token-q9zdz"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "generic-garbage-collector",
                "namespace": "kube-system",
                "resourceVersion": "365",
                "uid": "27c8f8d3-a845-4614-b003-4b2f135a7594"
            },
            "secrets": [
                {
                    "name": "generic-garbage-collector-token-7428q"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "horizontal-pod-autoscaler",
                "namespace": "kube-system",
                "resourceVersion": "236",
                "uid": "94b70b41-b989-4c30-9063-662851cbaf93"
            },
            "secrets": [
                {
                    "name": "horizontal-pod-autoscaler-token-tg9h9"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "job-controller",
                "namespace": "kube-system",
                "resourceVersion": "227",
                "uid": "090b5769-dd58-4ad3-9063-fe2b3dd1e8dc"
            },
            "secrets": [
                {
                    "name": "job-controller-token-xhsnd"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "304",
                "uid": "3eae1afd-8593-4112-8e31-606042cb6618"
            },
            "secrets": [
                {
                    "name": "kube-proxy-token-bw5bw"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "namespace-controller",
                "namespace": "kube-system",
                "resourceVersion": "404",
                "uid": "64d492fa-6965-4e64-b20f-5d907aef546b"
            },
            "secrets": [
                {
                    "name": "namespace-controller-token-7zx88"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "node-controller",
                "namespace": "kube-system",
                "resourceVersion": "221",
                "uid": "d13b2419-71e3-4f76-84be-592ea3f555a6"
            },
            "secrets": [
                {
                    "name": "node-controller-token-hrm8s"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "persistent-volume-binder",
                "namespace": "kube-system",
                "resourceVersion": "354",
                "uid": "49048dbe-4ee6-4155-8680-e6accb87f2da"
            },
            "secrets": [
                {
                    "name": "persistent-volume-binder-token-42m7w"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "pod-garbage-collector",
                "namespace": "kube-system",
                "resourceVersion": "391",
                "uid": "ab7184c0-15a6-435c-8369-1ad1bbab6c50"
            },
            "secrets": [
                {
                    "name": "pod-garbage-collector-token-6qwkz"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "pv-protection-controller",
                "namespace": "kube-system",
                "resourceVersion": "228",
                "uid": "7b7148cc-e46e-4927-99a7-97a1bc374ec4"
            },
            "secrets": [
                {
                    "name": "pv-protection-controller-token-xh696"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "pvc-protection-controller",
                "namespace": "kube-system",
                "resourceVersion": "359",
                "uid": "6d9fbb5a-d5fd-42a2-91bc-b646c71d9e48"
            },
            "secrets": [
                {
                    "name": "pvc-protection-controller-token-hctk7"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:21Z",
                "name": "replicaset-controller",
                "namespace": "kube-system",
                "resourceVersion": "245",
                "uid": "68593f8a-dcc4-451c-8ec2-6f8e7cd4ce81"
            },
            "secrets": [
                {
                    "name": "replicaset-controller-token-d5f8b"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "replication-controller",
                "namespace": "kube-system",
                "resourceVersion": "224",
                "uid": "2c9a4059-82fd-41cc-901b-edc57861c9bc"
            },
            "secrets": [
                {
                    "name": "replication-controller-token-wjdxf"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "resourcequota-controller",
                "namespace": "kube-system",
                "resourceVersion": "234",
                "uid": "6f93d71c-fc10-4b36-91ce-e12ea56d3e81"
            },
            "secrets": [
                {
                    "name": "resourcequota-controller-token-dlrqn"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "root-ca-cert-publisher",
                "namespace": "kube-system",
                "resourceVersion": "444",
                "uid": "0c255507-3e30-4112-b9d9-7fc4f14e79c4"
            },
            "secrets": [
                {
                    "name": "root-ca-cert-publisher-token-pqdlp"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "service-account-controller",
                "namespace": "kube-system",
                "resourceVersion": "231",
                "uid": "43321cd4-40ce-47cd-9798-c0581c239ef2"
            },
            "secrets": [
                {
                    "name": "service-account-controller-token-qjjbm"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "service-controller",
                "namespace": "kube-system",
                "resourceVersion": "351",
                "uid": "e12bd204-0a9b-4f8d-a8ed-cd8685ff095a"
            },
            "secrets": [
                {
                    "name": "service-controller-token-9c574"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "statefulset-controller",
                "namespace": "kube-system",
                "resourceVersion": "395",
                "uid": "8a90124b-01af-4139-a76c-91b323d76dd3"
            },
            "secrets": [
                {
                    "name": "statefulset-controller-token-9t54g"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "token-cleaner",
                "namespace": "kube-system",
                "resourceVersion": "418",
                "uid": "04333415-5c16-4288-b810-3a80d9f55747"
            },
            "secrets": [
                {
                    "name": "token-cleaner-token-bw9mr"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "ttl-after-finished-controller",
                "namespace": "kube-system",
                "resourceVersion": "370",
                "uid": "240740f1-62bf-4814-b1d4-6f4f400a7390"
            },
            "secrets": [
                {
                    "name": "ttl-after-finished-controller-token-579nf"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "ttl-controller",
                "namespace": "kube-system",
                "resourceVersion": "437",
                "uid": "c7e9a615-0c95-45a3-9af8-a4aaaf66a374"
            },
            "secrets": [
                {
                    "name": "ttl-controller-token-jwwsk"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "default",
                "namespace": "tanzu-package-repo-global",
                "resourceVersion": "569",
                "uid": "7fe5211c-5c90-4145-a9a5-a4b843976fd6"
            },
            "secrets": [
                {
                    "name": "default-token-7svdn"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "tkg-system-public",
                "resourceVersion": "460",
                "uid": "eba48db8-f6d6-434b-b3f5-a3ed18db97e7"
            },
            "secrets": [
                {
                    "name": "default-token-vscjf"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "tkg-system",
                "resourceVersion": "473",
                "uid": "1cd9ff02-f4e2-4ccd-aba2-606677d9c215"
            },
            "secrets": [
                {
                    "name": "default-token-6rh5p"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "name": "kapp-controller-sa",
                "namespace": "tkg-system",
                "resourceVersion": "799",
                "uid": "6489fd0b-0599-4ac2-9335-f9f7c0eafbb0"
            },
            "secrets": [
                {
                    "name": "kapp-controller-sa-token-bvggr"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "annotations": {
                    "ext.packaging.carvel.dev/ytt-data-values-overlays": "tanzu-addons-manager-data-values",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/tanzu-addons-manager"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "tanzu-addons-package-sa",
                "namespace": "tkg-system",
                "resourceVersion": "591",
                "uid": "269172c8-e6c8-4a9d-b8a3-d067aac26b81"
            },
            "secrets": [
                {
                    "name": "tanzu-addons-package-sa-token-gzqpf"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "app": "tanzu-capabilities-manager"
                },
                "name": "tanzu-capabilities-manager-sa",
                "namespace": "tkg-system",
                "resourceVersion": "602",
                "uid": "e2093f8a-2d04-4262-a72e-a8e7760ff344"
            },
            "secrets": [
                {
                    "name": "tanzu-capabilities-manager-sa-token-w8p9v"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:33Z",
                "name": "default",
                "namespace": "tkr-system",
                "resourceVersion": "461",
                "uid": "855c27b0-ca94-4818-914d-35a2ae0b4c5d"
            },
            "secrets": [
                {
                    "name": "default-token-wkgq4"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "197",
                "uid": "49b5799b-4500-4c17-8d3c-5db3e7b8874b"
            },
            "spec": {
                "clusterIP": "100.64.0.1",
                "clusterIPs": [
                    "100.64.0.1"
                ],
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 6443
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea",
                "namespace": "kube-system",
                "resourceVersion": "811",
                "uid": "33bd3979-401d-42d0-8db3-3695afd86bee"
            },
            "spec": {
                "clusterIP": "100.65.189.123",
                "clusterIPs": [
                    "100.65.189.123"
                ],
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "api"
                    }
                ],
                "selector": {
                    "app": "antrea",
                    "component": "antrea-controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "kube-dns",
                "namespace": "kube-system",
                "resourceVersion": "300",
                "uid": "05ef5dda-69fa-4e01-8802-8876001ad7c7"
            },
            "spec": {
                "clusterIP": "100.64.0.10",
                "clusterIPs": [
                    "100.64.0.10"
                ],
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "dns",
                        "port": 53,
                        "protocol": "UDP",
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "port": 53,
                        "protocol": "TCP",
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "port": 9153,
                        "protocol": "TCP",
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "packaging-api",
                "namespace": "tkg-system",
                "resourceVersion": "566",
                "uid": "9b8274a9-b006-4d9d-8324-ac23568de051"
            },
            "spec": {
                "clusterIP": "100.66.17.113",
                "clusterIPs": [
                    "100.66.17.113"
                ],
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "api"
                    }
                ],
                "selector": {
                    "app": "kapp-controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "admissionregistration.k8s.io/v1",
            "kind": "MutatingWebhookConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generation": 2,
                "labels": {
                    "app": "antrea"
                },
                "name": "crdmutator.antrea.tanzu.vmware.com",
                "resourceVersion": "954",
                "uid": "ad95fafd-a7b4-49a1-b28b-c3b1f5940bbc"
            },
            "webhooks": [
                {
                    "admissionReviewVersions": [
                        "v1",
                        "v1beta1"
                    ],
                    "clientConfig": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "service": {
                            "name": "antrea",
                            "namespace": "kube-system",
                            "path": "/mutate/acnp",
                            "port": 443
                        }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "acnpmutator.antrea.tanzu.vmware.com",
                    "namespaceSelector": {},
                    "objectSelector": {},
                    "reinvocationPolicy": "Never",
                    "rules": [
                        {
                            "apiGroups": [
                                "security.antrea.tanzu.vmware.com"
                            ],
                            "apiVersions": [
                                "v1alpha1"
                            ],
                            "operations": [
                                "CREATE",
                                "UPDATE"
                            ],
                            "resources": [
                                "clusternetworkpolicies"
                            ],
                            "scope": "Cluster"
                        }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 5
                },
                {
                    "admissionReviewVersions": [
                        "v1",
                        "v1beta1"
                    ],
                    "clientConfig": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "service": {
                            "name": "antrea",
                            "namespace": "kube-system",
                            "path": "/mutate/anp",
                            "port": 443
                        }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "anpmutator.antrea.tanzu.vmware.com",
                    "namespaceSelector": {},
                    "objectSelector": {},
                    "reinvocationPolicy": "Never",
                    "rules": [
                        {
                            "apiGroups": [
                                "security.antrea.tanzu.vmware.com"
                            ],
                            "apiVersions": [
                                "v1alpha1"
                            ],
                            "operations": [
                                "CREATE",
                                "UPDATE"
                            ],
                            "resources": [
                                "networkpolicies"
                            ],
                            "scope": "Namespaced"
                        }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 5
                }
            ]
        },
        {
            "apiVersion": "admissionregistration.k8s.io/v1",
            "kind": "ValidatingWebhookConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generation": 2,
                "labels": {
                    "app": "antrea"
                },
                "name": "crdvalidator.antrea.tanzu.vmware.com",
                "resourceVersion": "955",
                "uid": "7831e060-8f5f-4fa1-b4b3-51593122eea3"
            },
            "webhooks": [
                {
                    "admissionReviewVersions": [
                        "v1",
                        "v1beta1"
                    ],
                    "clientConfig": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "service": {
                            "name": "antrea",
                            "namespace": "kube-system",
                            "path": "/validate/tier",
                            "port": 443
                        }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "tiervalidator.antrea.tanzu.vmware.com",
                    "namespaceSelector": {},
                    "objectSelector": {},
                    "rules": [
                        {
                            "apiGroups": [
                                "security.antrea.tanzu.vmware.com"
                            ],
                            "apiVersions": [
                                "v1alpha1"
                            ],
                            "operations": [
                                "CREATE",
                                "UPDATE",
                                "DELETE"
                            ],
                            "resources": [
                                "tiers"
                            ],
                            "scope": "Cluster"
                        }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 5
                },
                {
                    "admissionReviewVersions": [
                        "v1",
                        "v1beta1"
                    ],
                    "clientConfig": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "service": {
                            "name": "antrea",
                            "namespace": "kube-system",
                            "path": "/validate/acnp",
                            "port": 443
                        }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "acnpvalidator.antrea.tanzu.vmware.com",
                    "namespaceSelector": {},
                    "objectSelector": {},
                    "rules": [
                        {
                            "apiGroups": [
                                "security.antrea.tanzu.vmware.com"
                            ],
                            "apiVersions": [
                                "v1alpha1"
                            ],
                            "operations": [
                                "CREATE",
                                "UPDATE",
                                "DELETE"
                            ],
                            "resources": [
                                "clusternetworkpolicies"
                            ],
                            "scope": "Cluster"
                        }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 5
                },
                {
                    "admissionReviewVersions": [
                        "v1",
                        "v1beta1"
                    ],
                    "clientConfig": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "service": {
                            "name": "antrea",
                            "namespace": "kube-system",
                            "path": "/validate/anp",
                            "port": 443
                        }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "anpvalidator.antrea.tanzu.vmware.com",
                    "namespaceSelector": {},
                    "objectSelector": {},
                    "rules": [
                        {
                            "apiGroups": [
                                "security.antrea.tanzu.vmware.com"
                            ],
                            "apiVersions": [
                                "v1alpha1"
                            ],
                            "operations": [
                                "CREATE",
                                "UPDATE",
                                "DELETE"
                            ],
                            "resources": [
                                "networkpolicies"
                            ],
                            "scope": "Namespaced"
                        }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 5
                },
                {
                    "admissionReviewVersions": [
                        "v1",
                        "v1beta1"
                    ],
                    "clientConfig": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "service": {
                            "name": "antrea",
                            "namespace": "kube-system",
                            "path": "/validate/clustergroup",
                            "port": 443
                        }
                    },
                    "failurePolicy": "Fail",
                    "matchPolicy": "Equivalent",
                    "name": "clustergroupvalidator.antrea.tanzu.vmware.com",
                    "namespaceSelector": {},
                    "objectSelector": {},
                    "rules": [
                        {
                            "apiGroups": [
                                "core.antrea.tanzu.vmware.com"
                            ],
                            "apiVersions": [
                                "v1alpha2"
                            ],
                            "operations": [
                                "CREATE",
                                "UPDATE",
                                "DELETE"
                            ],
                            "resources": [
                                "clustergroups"
                            ],
                            "scope": "Cluster"
                        }
                    ],
                    "sideEffects": "None",
                    "timeoutSeconds": 5
                }
            ]
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "antreaagentinfos.clusterinformation.antrea.tanzu.vmware.com",
                "resourceVersion": "319",
                "uid": "cb63118b-cb3b-4998-b733-cc5ce451643a"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "clusterinformation.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "AntreaAgentInfo",
                    "listKind": "AntreaAgentInfoList",
                    "plural": "antreaagentinfos",
                    "shortNames": [
                        "aai"
                    ],
                    "singular": "antreaagentinfo"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "AntreaAgentInfo",
                    "listKind": "AntreaAgentInfoList",
                    "plural": "antreaagentinfos",
                    "shortNames": [
                        "aai"
                    ],
                    "singular": "antreaagentinfo"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "antreacontrollerinfos.clusterinformation.antrea.tanzu.vmware.com",
                "resourceVersion": "335",
                "uid": "f1c9d1b7-1166-493a-becf-ee946286b019"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "clusterinformation.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "AntreaControllerInfo",
                    "listKind": "AntreaControllerInfoList",
                    "plural": "antreacontrollerinfos",
                    "shortNames": [
                        "aci"
                    ],
                    "singular": "antreacontrollerinfo"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "AntreaControllerInfo",
                    "listKind": "AntreaControllerInfoList",
                    "plural": "antreacontrollerinfos",
                    "shortNames": [
                        "aci"
                    ],
                    "singular": "antreacontrollerinfo"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:00Z",
                "generation": 1,
                "name": "apps.kappctrl.k14s.io",
                "resourceVersion": "654",
                "uid": "8ed75331-f029-4ba5-9613-a747a6c0b093"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kappctrl.k14s.io",
                "names": {
                    "kind": "App",
                    "listKind": "AppList",
                    "plural": "apps",
                    "singular": "app"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "Friendly description",
                                "jsonPath": ".status.friendlyDescription",
                                "name": "Description",
                                "type": "string"
                            },
                            {
                                "description": "Last time app started being deployed. Does not mean anything was changed.",
                                "jsonPath": ".status.deploy.startedAt",
                                "name": "Since-Deploy",
                                "type": "date"
                            },
                            {
                                "description": "Time since creation",
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "canceled": {
                                                "description": "Canceled when set to true will stop all active changes",
                                                "type": "boolean"
                                            },
                                            "cluster": {
                                                "properties": {
                                                    "kubeconfigSecretRef": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "namespace": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "deploy": {
                                                "items": {
                                                    "properties": {
                                                        "kapp": {
                                                            "properties": {
                                                                "delete": {
                                                                    "properties": {
                                                                        "rawOptions": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "inspect": {
                                                                    "properties": {
                                                                        "rawOptions": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "intoNs": {
                                                                    "type": "string"
                                                                },
                                                                "mapNs": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "rawOptions": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "fetch": {
                                                "items": {
                                                    "properties": {
                                                        "git": {
                                                            "description": "TODO implement git",
                                                            "properties": {
                                                                "lfsSkipSmudge": {
                                                                    "type": "boolean"
                                                                },
                                                                "ref": {
                                                                    "type": "string"
                                                                },
                                                                "secretRef": {
                                                                    "description": "Secret may include one or more keys: ssh-privatekey, ssh-knownhosts",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Object is expected to be within same namespace",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "subPath": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "helmChart": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Example: stable/redis",
                                                                    "type": "string"
                                                                },
                                                                "repository": {
                                                                    "properties": {
                                                                        "secretRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "Object is expected to be within same namespace",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "url": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "version": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "http": {
                                                            "properties": {
                                                                "secretRef": {
                                                                    "description": "Secret may include one or more keys: username, password",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Object is expected to be within same namespace",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "sha256": {
                                                                    "type": "string"
                                                                },
                                                                "subPath": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "description": "URL can point to one of following formats: text, tgz, zip",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "image": {
                                                            "properties": {
                                                                "secretRef": {
                                                                    "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication. TODO support docker config formated secret",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Object is expected to be within same namespace",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "subPath": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "description": "Example: username/app1-config:v0.1.0",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "imgpkgBundle": {
                                                            "properties": {
                                                                "image": {
                                                                    "type": "string"
                                                                },
                                                                "secretRef": {
                                                                    "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication. TODO support docker config formated secret",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Object is expected to be within same namespace",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "inline": {
                                                            "properties": {
                                                                "paths": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "pathsFrom": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "configMapRef": {
                                                                                "properties": {
                                                                                    "directoryPath": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "secretRef": {
                                                                                "properties": {
                                                                                    "directoryPath": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "noopDelete": {
                                                "description": "When NoopDeletion set to true, App deletion should delete App CR but preserve App's associated resources",
                                                "type": "boolean"
                                            },
                                            "paused": {
                                                "description": "Paused when set to true will ignore all pending changes, once it set back to false, pending changes will be applied",
                                                "type": "boolean"
                                            },
                                            "serviceAccountName": {
                                                "type": "string"
                                            },
                                            "syncPeriod": {
                                                "description": "Controls frequency of app reconciliation",
                                                "type": "string"
                                            },
                                            "template": {
                                                "items": {
                                                    "properties": {
                                                        "helmTemplate": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "namespace": {
                                                                    "type": "string"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "valuesFrom": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "configMapRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "path": {
                                                                                "type": "string"
                                                                            },
                                                                            "secretRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "jsonnet": {
                                                            "description": "TODO implement jsonnet",
                                                            "type": "object"
                                                        },
                                                        "kbld": {
                                                            "properties": {
                                                                "paths": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "kustomize": {
                                                            "description": "TODO implement kustomize",
                                                            "type": "object"
                                                        },
                                                        "sops": {
                                                            "properties": {
                                                                "paths": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "pgp": {
                                                                    "properties": {
                                                                        "privateKeysSecretRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ytt": {
                                                            "properties": {
                                                                "fileMarks": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ignoreUnknownComments": {
                                                                    "type": "boolean"
                                                                },
                                                                "inline": {
                                                                    "properties": {
                                                                        "paths": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "pathsFrom": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "configMapRef": {
                                                                                        "properties": {
                                                                                            "directoryPath": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "secretRef": {
                                                                                        "properties": {
                                                                                            "directoryPath": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "paths": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "strict": {
                                                                    "type": "boolean"
                                                                },
                                                                "valuesFrom": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "configMapRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "path": {
                                                                                "type": "string"
                                                                            },
                                                                            "secretRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "conditions": {
                                                "items": {
                                                    "description": "TODO rename to Condition",
                                                    "properties": {
                                                        "message": {
                                                            "description": "Human-readable message indicating details about last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "status",
                                                        "type"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "consecutiveReconcileFailures": {
                                                "type": "integer"
                                            },
                                            "consecutiveReconcileSuccesses": {
                                                "type": "integer"
                                            },
                                            "deploy": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "finished": {
                                                        "type": "boolean"
                                                    },
                                                    "startedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "stdout": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "fetch": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "startedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "stdout": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "friendlyDescription": {
                                                "type": "string"
                                            },
                                            "inspect": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "stdout": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "managedAppName": {
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "template": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "usefulErrorMessage": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "spec"
                                ],
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "App",
                    "listKind": "AppList",
                    "plural": "apps",
                    "singular": "app"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:46:00Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:46:00Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "controller-gen.kubebuilder.io/version": "v0.2.5"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "name": "capabilities.run.tanzu.vmware.com",
                "resourceVersion": "338",
                "uid": "fabdc451-dc5a-49b6-a530-c43d044b41fb"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "run.tanzu.vmware.com",
                "names": {
                    "kind": "Capability",
                    "listKind": "CapabilityList",
                    "plural": "capabilities",
                    "singular": "capability"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "description": "Capability is the Schema for the capabilities API",
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "description": "Spec is the capability spec that has cluster queries.",
                                        "properties": {
                                            "queries": {
                                                "description": "Queries specifies set of queries that are evaluated.",
                                                "items": {
                                                    "description": "Query is a logical grouping of GVR, Object and PartialSchema queries.",
                                                    "properties": {
                                                        "groupVersionResources": {
                                                            "description": "GroupVersionResources evaluates a slice of GVR queries.",
                                                            "items": {
                                                                "description": "QueryGVR queries for an API group with the optional ability to check for API versions and resource.",
                                                                "properties": {
                                                                    "group": {
                                                                        "description": "Group is the API group to check for in the cluster.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "Name is the unique name of the query.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "resource": {
                                                                        "description": "Resource is the API resource to check for given an API group and a slice of versions. Specifying a Resource requires at least one version to be specified in Versions.",
                                                                        "type": "string"
                                                                    },
                                                                    "versions": {
                                                                        "description": "Versions is the slice of versions to check for in the specified API group.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "group",
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-map-keys": [
                                                                "name"
                                                            ],
                                                            "x-kubernetes-list-type": "map"
                                                        },
                                                        "name": {
                                                            "description": "Name is the unique name of the query.",
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "objects": {
                                                            "description": "Objects evaluates a slice of Object queries.",
                                                            "items": {
                                                                "description": "QueryObject represents any runtime.Object that could exist in a cluster with the ability to check for annotations.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name is the unique name of the query.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "objectReference": {
                                                                        "description": "ObjectReference is the ObjectReference to check for in the cluster.",
                                                                        "properties": {
                                                                            "apiVersion": {
                                                                                "description": "API version of the referent.",
                                                                                "type": "string"
                                                                            },
                                                                            "fieldPath": {
                                                                                "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                "type": "string"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                                                "type": "string"
                                                                            },
                                                                            "resourceVersion": {
                                                                                "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                                                "type": "string"
                                                                            },
                                                                            "uid": {
                                                                                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "withAnnotations": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "WithAnnotations are the annotations whose presence is checked in the object. The query succeeds only if all the annotations specified exists.",
                                                                        "type": "object"
                                                                    },
                                                                    "withoutAnnotations": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "WithAnnotations are the annotations whose absence is checked in the object. The query succeeds only if all the annotations specified do not exist.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "objectReference"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-map-keys": [
                                                                "name"
                                                            ],
                                                            "x-kubernetes-list-type": "map"
                                                        },
                                                        "partialSchemas": {
                                                            "description": "PartialSchemas evaluates a slice of PartialSchema queries.",
                                                            "items": {
                                                                "description": "QueryPartialSchema queries for any OpenAPI schema that may exist on a cluster.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name is the unique name of the query.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "partialSchema": {
                                                                        "description": "PartialSchema is the partial OpenAPI schema that will be matched in a cluster.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "partialSchema"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-map-keys": [
                                                                "name"
                                                            ],
                                                            "x-kubernetes-list-type": "map"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array",
                                                "x-kubernetes-list-map-keys": [
                                                    "name"
                                                ],
                                                "x-kubernetes-list-type": "map"
                                            }
                                        },
                                        "required": [
                                            "queries"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "Status is the capability status that has results of cluster queries.",
                                        "properties": {
                                            "results": {
                                                "description": "Results represents the results of all the queries specified in the spec.",
                                                "items": {
                                                    "description": "Result represents the results of queries in Query.",
                                                    "properties": {
                                                        "groupVersionResources": {
                                                            "description": "GroupVersionResources represents results of GVR queries in spec.",
                                                            "items": {
                                                                "description": "QueryResult represents the result of a single query.",
                                                                "properties": {
                                                                    "error": {
                                                                        "description": "Error indicates if an error occurred while processing the query.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "errorDetail": {
                                                                        "description": "ErrorDetail represents the error detail, if an error occurred.",
                                                                        "type": "string"
                                                                    },
                                                                    "found": {
                                                                        "description": "Found is a boolean which indicates if the query condition succeeded.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "name": {
                                                                        "description": "Name is the name of the query in spec whose result this struct represents.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "notFoundReason": {
                                                                        "description": "NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-map-keys": [
                                                                "name"
                                                            ],
                                                            "x-kubernetes-list-type": "map"
                                                        },
                                                        "name": {
                                                            "description": "Name is the unique name of the query.",
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "objects": {
                                                            "description": "Objects represents results of Object queries in spec.",
                                                            "items": {
                                                                "description": "QueryResult represents the result of a single query.",
                                                                "properties": {
                                                                    "error": {
                                                                        "description": "Error indicates if an error occurred while processing the query.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "errorDetail": {
                                                                        "description": "ErrorDetail represents the error detail, if an error occurred.",
                                                                        "type": "string"
                                                                    },
                                                                    "found": {
                                                                        "description": "Found is a boolean which indicates if the query condition succeeded.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "name": {
                                                                        "description": "Name is the name of the query in spec whose result this struct represents.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "notFoundReason": {
                                                                        "description": "NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-map-keys": [
                                                                "name"
                                                            ],
                                                            "x-kubernetes-list-type": "map"
                                                        },
                                                        "partialSchemas": {
                                                            "description": "PartialSchemas represents results of PartialSchema queries in spec.",
                                                            "items": {
                                                                "description": "QueryResult represents the result of a single query.",
                                                                "properties": {
                                                                    "error": {
                                                                        "description": "Error indicates if an error occurred while processing the query.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "errorDetail": {
                                                                        "description": "ErrorDetail represents the error detail, if an error occurred.",
                                                                        "type": "string"
                                                                    },
                                                                    "found": {
                                                                        "description": "Found is a boolean which indicates if the query condition succeeded.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "name": {
                                                                        "description": "Name is the name of the query in spec whose result this struct represents.",
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "notFoundReason": {
                                                                        "description": "NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-map-keys": [
                                                                "name"
                                                            ],
                                                            "x-kubernetes-list-type": "map"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array",
                                                "x-kubernetes-list-map-keys": [
                                                    "name"
                                                ],
                                                "x-kubernetes-list-type": "map"
                                            }
                                        },
                                        "required": [
                                            "results"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "Capability",
                    "listKind": "CapabilityList",
                    "plural": "capabilities",
                    "singular": "capability"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "spec.preserveUnknownFields: Invalid value: true: must be false",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "clustergroups.core.antrea.tanzu.vmware.com",
                "resourceVersion": "337",
                "uid": "d0f8ffc1-185e-404c-948c-0f3c54b9d00b"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "core.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "ClusterGroup",
                    "listKind": "ClusterGroupList",
                    "plural": "clustergroups",
                    "shortNames": [
                        "cg"
                    ],
                    "singular": "group"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1alpha2",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "externalEntitySelector": {
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "ipBlock": {
                                                "properties": {
                                                    "cidr": {
                                                        "format": "cidr",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "namespaceSelector": {
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "podSelector": {
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "serviceReference": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "conditions": {
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "ClusterGroup",
                    "listKind": "ClusterGroupList",
                    "plural": "clustergroups",
                    "shortNames": [
                        "cg"
                    ],
                    "singular": "group"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha2"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "clusternetworkpolicies.security.antrea.tanzu.vmware.com",
                "resourceVersion": "340",
                "uid": "170ecaee-f2f4-4da4-8759-f262927a2010"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "security.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "ClusterNetworkPolicy",
                    "listKind": "ClusterNetworkPolicyList",
                    "plural": "clusternetworkpolicies",
                    "shortNames": [
                        "cnp",
                        "acnp"
                    ],
                    "singular": "clusternetworkpolicy"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The Tier to which this ClusterNetworkPolicy belongs to.",
                                "jsonPath": ".spec.tier",
                                "name": "Tier",
                                "type": "string"
                            },
                            {
                                "description": "The Priority of this ClusterNetworkPolicy relative to other policies.",
                                "format": "float",
                                "jsonPath": ".spec.priority",
                                "name": "Priority",
                                "type": "number"
                            },
                            {
                                "description": "The total number of Nodes that should realize the NetworkPolicy.",
                                "format": "int32",
                                "jsonPath": ".status.desiredNodesRealized",
                                "name": "Desired Nodes",
                                "type": "number"
                            },
                            {
                                "description": "The number of Nodes that have realized the NetworkPolicy.",
                                "format": "int32",
                                "jsonPath": ".status.currentNodesRealized",
                                "name": "Current Nodes",
                                "type": "number"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "appliedTo": {
                                                "items": {
                                                    "properties": {
                                                        "group": {
                                                            "type": "string"
                                                        },
                                                        "namespaceSelector": {
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "podSelector": {
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "egress": {
                                                "items": {
                                                    "properties": {
                                                        "action": {
                                                            "enum": [
                                                                "Allow",
                                                                "Drop"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "appliedTo": {
                                                            "items": {
                                                                "properties": {
                                                                    "group": {
                                                                        "type": "string"
                                                                    },
                                                                    "namespaceSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "podSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "enableLogging": {
                                                            "type": "boolean"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "ports": {
                                                            "items": {
                                                                "properties": {
                                                                    "endPort": {
                                                                        "type": "integer"
                                                                    },
                                                                    "port": {
                                                                        "x-kubernetes-int-or-string": true
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "to": {
                                                            "items": {
                                                                "properties": {
                                                                    "group": {
                                                                        "type": "string"
                                                                    },
                                                                    "ipBlock": {
                                                                        "properties": {
                                                                            "cidr": {
                                                                                "format": "cidr",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "namespaceSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "podSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "action"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "ingress": {
                                                "items": {
                                                    "properties": {
                                                        "action": {
                                                            "enum": [
                                                                "Allow",
                                                                "Drop"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "appliedTo": {
                                                            "items": {
                                                                "properties": {
                                                                    "group": {
                                                                        "type": "string"
                                                                    },
                                                                    "namespaceSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "podSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "enableLogging": {
                                                            "type": "boolean"
                                                        },
                                                        "from": {
                                                            "items": {
                                                                "properties": {
                                                                    "group": {
                                                                        "type": "string"
                                                                    },
                                                                    "ipBlock": {
                                                                        "properties": {
                                                                            "cidr": {
                                                                                "format": "cidr",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "namespaceSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "podSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "ports": {
                                                            "items": {
                                                                "properties": {
                                                                    "endPort": {
                                                                        "type": "integer"
                                                                    },
                                                                    "port": {
                                                                        "x-kubernetes-int-or-string": true
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "action"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "priority": {
                                                "format": "float",
                                                "maximum": 10000,
                                                "minimum": 1,
                                                "type": "number"
                                            },
                                            "tier": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "priority"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "currentNodesRealized": {
                                                "type": "integer"
                                            },
                                            "desiredNodesRealized": {
                                                "type": "integer"
                                            },
                                            "observedGeneration": {
                                                "type": "integer"
                                            },
                                            "phase": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "ClusterNetworkPolicy",
                    "listKind": "ClusterNetworkPolicyList",
                    "plural": "clusternetworkpolicies",
                    "shortNames": [
                        "cnp",
                        "acnp"
                    ],
                    "singular": "clusternetworkpolicy"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "externalentities.core.antrea.tanzu.vmware.com",
                "resourceVersion": "387",
                "uid": "3bb1e159-474c-4a09-9544-549e299fdc48"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "core.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "ExternalEntity",
                    "listKind": "ExternalEntityList",
                    "plural": "externalentities",
                    "shortNames": [
                        "ee"
                    ],
                    "singular": "externalentity"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha2",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "endpoints": {
                                                "items": {
                                                    "properties": {
                                                        "ip": {
                                                            "pattern": "^(((([1]?\\d)?\\d|2[0-4]\\d|25[0-5])\\.){3}(([1]?\\d)?\\d|2[0-4]\\d|25[0-5]))|([\\da-fA-F]{1,4}(\\:[\\da-fA-F]{1,4}){7})|(([\\da-fA-F]{1,4}:){0,5}::([\\da-fA-F]{1,4}:){0,5}[\\da-fA-F]{1,4})$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "externalNode": {
                                                "type": "string"
                                            },
                                            "ports": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "x-kubernetes-int-or-string": true
                                                        },
                                                        "protocol": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true
                    },
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "type": "object"
                            }
                        },
                        "served": false,
                        "storage": false
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "ExternalEntity",
                    "listKind": "ExternalEntityList",
                    "plural": "externalentities",
                    "shortNames": [
                        "ee"
                    ],
                    "singular": "externalentity"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha2"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "name": "internalpackagemetadatas.internal.packaging.carvel.dev",
                "resourceVersion": "601",
                "uid": "1e4ca612-f0ed-42ea-9746-6ab1fd67fafb"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "internal.packaging.carvel.dev",
                "names": {
                    "kind": "InternalPackageMetadata",
                    "listKind": "InternalPackageMetadataList",
                    "plural": "internalpackagemetadatas",
                    "singular": "internalpackagemetadata"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "categories": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "displayName": {
                                                "type": "string"
                                            },
                                            "iconSVGBase64": {
                                                "type": "string"
                                            },
                                            "longDescription": {
                                                "type": "string"
                                            },
                                            "maintainers": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "providerName": {
                                                "type": "string"
                                            },
                                            "shortDescription": {
                                                "type": "string"
                                            },
                                            "supportDescription": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "spec"
                                ],
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "InternalPackageMetadata",
                    "listKind": "InternalPackageMetadataList",
                    "plural": "internalpackagemetadatas",
                    "singular": "internalpackagemetadata"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "name": "internalpackages.internal.packaging.carvel.dev",
                "resourceVersion": "613",
                "uid": "384e0e88-8b61-43fc-af11-fc3b2b0c9a4d"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "internal.packaging.carvel.dev",
                "names": {
                    "kind": "InternalPackage",
                    "listKind": "InternalPackageList",
                    "plural": "internalpackages",
                    "singular": "internalpackage"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "capacityRequirementsDescription": {
                                                "type": "string"
                                            },
                                            "licenses": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "refName": {
                                                "type": "string"
                                            },
                                            "releaseNotes": {
                                                "type": "string"
                                            },
                                            "releasedAt": {
                                                "format": "date-time",
                                                "nullable": true,
                                                "type": "string"
                                            },
                                            "template": {
                                                "properties": {
                                                    "spec": {
                                                        "properties": {
                                                            "canceled": {
                                                                "description": "Canceled when set to true will stop all active changes",
                                                                "type": "boolean"
                                                            },
                                                            "cluster": {
                                                                "properties": {
                                                                    "kubeconfigSecretRef": {
                                                                        "properties": {
                                                                            "key": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "namespace": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deploy": {
                                                                "items": {
                                                                    "properties": {
                                                                        "kapp": {
                                                                            "properties": {
                                                                                "delete": {
                                                                                    "properties": {
                                                                                        "rawOptions": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "inspect": {
                                                                                    "properties": {
                                                                                        "rawOptions": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "intoNs": {
                                                                                    "type": "string"
                                                                                },
                                                                                "mapNs": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "rawOptions": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "fetch": {
                                                                "items": {
                                                                    "properties": {
                                                                        "git": {
                                                                            "description": "TODO implement git",
                                                                            "properties": {
                                                                                "lfsSkipSmudge": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "ref": {
                                                                                    "type": "string"
                                                                                },
                                                                                "secretRef": {
                                                                                    "description": "Secret may include one or more keys: ssh-privatekey, ssh-knownhosts",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Object is expected to be within same namespace",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "subPath": {
                                                                                    "type": "string"
                                                                                },
                                                                                "url": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "helmChart": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "Example: stable/redis",
                                                                                    "type": "string"
                                                                                },
                                                                                "repository": {
                                                                                    "properties": {
                                                                                        "secretRef": {
                                                                                            "properties": {
                                                                                                "name": {
                                                                                                    "description": "Object is expected to be within same namespace",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "url": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "version": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "http": {
                                                                            "properties": {
                                                                                "secretRef": {
                                                                                    "description": "Secret may include one or more keys: username, password",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Object is expected to be within same namespace",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "sha256": {
                                                                                    "type": "string"
                                                                                },
                                                                                "subPath": {
                                                                                    "type": "string"
                                                                                },
                                                                                "url": {
                                                                                    "description": "URL can point to one of following formats: text, tgz, zip",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "image": {
                                                                            "properties": {
                                                                                "secretRef": {
                                                                                    "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication. TODO support docker config formated secret",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Object is expected to be within same namespace",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "subPath": {
                                                                                    "type": "string"
                                                                                },
                                                                                "url": {
                                                                                    "description": "Example: username/app1-config:v0.1.0",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "imgpkgBundle": {
                                                                            "properties": {
                                                                                "image": {
                                                                                    "type": "string"
                                                                                },
                                                                                "secretRef": {
                                                                                    "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication. TODO support docker config formated secret",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Object is expected to be within same namespace",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "inline": {
                                                                            "properties": {
                                                                                "paths": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "pathsFrom": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "configMapRef": {
                                                                                                "properties": {
                                                                                                    "directoryPath": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "properties": {
                                                                                                    "directoryPath": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "noopDelete": {
                                                                "description": "When NoopDeletion set to true, App deletion should delete App CR but preserve App's associated resources",
                                                                "type": "boolean"
                                                            },
                                                            "paused": {
                                                                "description": "Paused when set to true will ignore all pending changes, once it set back to false, pending changes will be applied",
                                                                "type": "boolean"
                                                            },
                                                            "serviceAccountName": {
                                                                "type": "string"
                                                            },
                                                            "syncPeriod": {
                                                                "description": "Controls frequency of app reconciliation",
                                                                "type": "string"
                                                            },
                                                            "template": {
                                                                "items": {
                                                                    "properties": {
                                                                        "helmTemplate": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "namespace": {
                                                                                    "type": "string"
                                                                                },
                                                                                "path": {
                                                                                    "type": "string"
                                                                                },
                                                                                "valuesFrom": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "configMapRef": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "path": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "jsonnet": {
                                                                            "description": "TODO implement jsonnet",
                                                                            "type": "object"
                                                                        },
                                                                        "kbld": {
                                                                            "properties": {
                                                                                "paths": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "kustomize": {
                                                                            "description": "TODO implement kustomize",
                                                                            "type": "object"
                                                                        },
                                                                        "sops": {
                                                                            "properties": {
                                                                                "paths": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "pgp": {
                                                                                    "properties": {
                                                                                        "privateKeysSecretRef": {
                                                                                            "properties": {
                                                                                                "name": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "ytt": {
                                                                            "properties": {
                                                                                "fileMarks": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ignoreUnknownComments": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "inline": {
                                                                                    "properties": {
                                                                                        "paths": {
                                                                                            "additionalProperties": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "pathsFrom": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "configMapRef": {
                                                                                                        "properties": {
                                                                                                            "directoryPath": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "secretRef": {
                                                                                                        "properties": {
                                                                                                            "directoryPath": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "paths": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "strict": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "valuesFrom": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "configMapRef": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "path": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "spec"
                                                ],
                                                "type": "object"
                                            },
                                            "valuesSchema": {
                                                "description": "valuesSchema can be used to show template values that can be configured by users when a Package is installed in an OpenAPI schema format.",
                                                "properties": {
                                                    "openAPIv3": {
                                                        "nullable": true,
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "version": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "spec"
                                ],
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "InternalPackage",
                    "listKind": "InternalPackageList",
                    "plural": "internalpackages",
                    "singular": "internalpackage"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "networkpolicies.security.antrea.tanzu.vmware.com",
                "resourceVersion": "389",
                "uid": "4ed136a8-2f50-4bdc-b226-fbe232a6c68d"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "security.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "NetworkPolicy",
                    "listKind": "NetworkPolicyList",
                    "plural": "networkpolicies",
                    "shortNames": [
                        "netpol",
                        "anp"
                    ],
                    "singular": "networkpolicy"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The Tier to which this Antrea NetworkPolicy belongs to.",
                                "jsonPath": ".spec.tier",
                                "name": "Tier",
                                "type": "string"
                            },
                            {
                                "description": "The Priority of this Antrea NetworkPolicy relative to other policies.",
                                "format": "float",
                                "jsonPath": ".spec.priority",
                                "name": "Priority",
                                "type": "number"
                            },
                            {
                                "description": "The total number of Nodes that should realize the NetworkPolicy.",
                                "format": "int32",
                                "jsonPath": ".status.desiredNodesRealized",
                                "name": "Desired Nodes",
                                "type": "number"
                            },
                            {
                                "description": "The number of Nodes that have realized the NetworkPolicy.",
                                "format": "int32",
                                "jsonPath": ".status.currentNodesRealized",
                                "name": "Current Nodes",
                                "type": "number"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "appliedTo": {
                                                "items": {
                                                    "properties": {
                                                        "podSelector": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "egress": {
                                                "items": {
                                                    "properties": {
                                                        "action": {
                                                            "enum": [
                                                                "Allow",
                                                                "Drop"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "appliedTo": {
                                                            "items": {
                                                                "properties": {
                                                                    "podSelector": {
                                                                        "type": "object",
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "enableLogging": {
                                                            "type": "boolean"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "ports": {
                                                            "items": {
                                                                "properties": {
                                                                    "endPort": {
                                                                        "type": "integer"
                                                                    },
                                                                    "port": {
                                                                        "x-kubernetes-int-or-string": true
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "to": {
                                                            "items": {
                                                                "properties": {
                                                                    "externalEntitySelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "ipBlock": {
                                                                        "properties": {
                                                                            "cidr": {
                                                                                "format": "cidr",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "namespaceSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "podSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "action"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "ingress": {
                                                "items": {
                                                    "properties": {
                                                        "action": {
                                                            "enum": [
                                                                "Allow",
                                                                "Drop"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "appliedTo": {
                                                            "items": {
                                                                "properties": {
                                                                    "podSelector": {
                                                                        "type": "object",
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "enableLogging": {
                                                            "type": "boolean"
                                                        },
                                                        "from": {
                                                            "items": {
                                                                "properties": {
                                                                    "externalEntitySelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "ipBlock": {
                                                                        "properties": {
                                                                            "cidr": {
                                                                                "format": "cidr",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "namespaceSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    },
                                                                    "podSelector": {
                                                                        "x-kubernetes-preserve-unknown-fields": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "ports": {
                                                            "items": {
                                                                "properties": {
                                                                    "endPort": {
                                                                        "type": "integer"
                                                                    },
                                                                    "port": {
                                                                        "x-kubernetes-int-or-string": true
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "action"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "priority": {
                                                "format": "float",
                                                "maximum": 10000,
                                                "minimum": 1,
                                                "type": "number"
                                            },
                                            "tier": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "priority"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "currentNodesRealized": {
                                                "type": "integer"
                                            },
                                            "desiredNodesRealized": {
                                                "type": "integer"
                                            },
                                            "observedGeneration": {
                                                "type": "integer"
                                            },
                                            "phase": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "NetworkPolicy",
                    "listKind": "NetworkPolicyList",
                    "plural": "networkpolicies",
                    "shortNames": [
                        "netpol",
                        "anp"
                    ],
                    "singular": "networkpolicy"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "generation": 1,
                "name": "packageinstalls.packaging.carvel.dev",
                "resourceVersion": "733",
                "uid": "51f4f412-9ac2-4c10-923b-ed418be426c2"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "packaging.carvel.dev",
                "names": {
                    "kind": "PackageInstall",
                    "listKind": "PackageInstallList",
                    "plural": "packageinstalls",
                    "shortNames": [
                        "pkgi"
                    ],
                    "singular": "packageinstall"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "PackageMetadata name",
                                "jsonPath": ".spec.packageRef.refName",
                                "name": "Package name",
                                "type": "string"
                            },
                            {
                                "description": "PackageMetadata version",
                                "jsonPath": ".status.version",
                                "name": "Package version",
                                "type": "string"
                            },
                            {
                                "description": "Friendly description",
                                "jsonPath": ".status.friendlyDescription",
                                "name": "Description",
                                "type": "string"
                            },
                            {
                                "description": "Time since creation",
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "canceled": {
                                                "description": "Canceled when set to true will stop all active changes",
                                                "type": "boolean"
                                            },
                                            "cluster": {
                                                "properties": {
                                                    "kubeconfigSecretRef": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "namespace": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "noopDelete": {
                                                "description": "When NoopDelete set to true, PackageInstall deletion should delete PackageInstall/App CR but preserve App's associated resources.",
                                                "type": "boolean"
                                            },
                                            "packageRef": {
                                                "properties": {
                                                    "refName": {
                                                        "type": "string"
                                                    },
                                                    "versionSelection": {
                                                        "properties": {
                                                            "constraints": {
                                                                "type": "string"
                                                            },
                                                            "prereleases": {
                                                                "properties": {
                                                                    "identifiers": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "paused": {
                                                "description": "Paused when set to true will ignore all pending changes, once it set back to false, pending changes will be applied",
                                                "type": "boolean"
                                            },
                                            "serviceAccountName": {
                                                "type": "string"
                                            },
                                            "syncPeriod": {
                                                "description": "Controls frequency of App reconciliation in time + unit format. Always \u003e= 30s. If value below 30s is specified, 30s will be used.",
                                                "type": "string"
                                            },
                                            "values": {
                                                "items": {
                                                    "properties": {
                                                        "secretRef": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "conditions": {
                                                "items": {
                                                    "description": "TODO rename to Condition",
                                                    "properties": {
                                                        "message": {
                                                            "description": "Human-readable message indicating details about last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "status",
                                                        "type"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "friendlyDescription": {
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "usefulErrorMessage": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "description": "TODO this is desired resolved version (not actually deployed)",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "spec"
                                ],
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "PackageInstall",
                    "listKind": "PackageInstallList",
                    "plural": "packageinstalls",
                    "shortNames": [
                        "pkgi"
                    ],
                    "singular": "packageinstall"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:46:20Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:46:20Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "packaging.carvel.dev/global-namespace": "tanzu-package-repo-global",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "generation": 1,
                "name": "packagerepositories.packaging.carvel.dev",
                "resourceVersion": "738",
                "uid": "c13fd841-31a0-4ed8-96ce-4b61b5785262"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "packaging.carvel.dev",
                "names": {
                    "kind": "PackageRepository",
                    "listKind": "PackageRepositoryList",
                    "plural": "packagerepositories",
                    "shortNames": [
                        "pkgr"
                    ],
                    "singular": "packagerepository"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "Time since creation",
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            },
                            {
                                "description": "Friendly description",
                                "jsonPath": ".status.friendlyDescription",
                                "name": "Description",
                                "type": "string"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "fetch": {
                                                "properties": {
                                                    "git": {
                                                        "description": "TODO implement git",
                                                        "properties": {
                                                            "lfsSkipSmudge": {
                                                                "type": "boolean"
                                                            },
                                                            "ref": {
                                                                "type": "string"
                                                            },
                                                            "secretRef": {
                                                                "description": "Secret may include one or more keys: ssh-privatekey, ssh-knownhosts",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Object is expected to be within same namespace",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "subPath": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "http": {
                                                        "properties": {
                                                            "secretRef": {
                                                                "description": "Secret may include one or more keys: username, password",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Object is expected to be within same namespace",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "sha256": {
                                                                "type": "string"
                                                            },
                                                            "subPath": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "description": "URL can point to one of following formats: text, tgz, zip",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "properties": {
                                                            "secretRef": {
                                                                "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication. TODO support docker config formated secret",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Object is expected to be within same namespace",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "subPath": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "description": "Example: username/app1-config:v0.1.0",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "imgpkgBundle": {
                                                        "properties": {
                                                            "image": {
                                                                "type": "string"
                                                            },
                                                            "secretRef": {
                                                                "description": "Secret may include one or more keys: username, password, token. By default anonymous access is used for authentication. TODO support docker config formated secret",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Object is expected to be within same namespace",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "paused": {
                                                "description": "Paused when set to true will ignore all pending changes, once it set back to false, pending changes will be applied",
                                                "type": "boolean"
                                            },
                                            "syncPeriod": {
                                                "description": "Controls frequency of PackageRepository reconciliation",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "fetch"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "conditions": {
                                                "items": {
                                                    "description": "TODO rename to Condition",
                                                    "properties": {
                                                        "message": {
                                                            "description": "Human-readable message indicating details about last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "status",
                                                        "type"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "consecutiveReconcileFailures": {
                                                "type": "integer"
                                            },
                                            "consecutiveReconcileSuccesses": {
                                                "type": "integer"
                                            },
                                            "deploy": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "finished": {
                                                        "type": "boolean"
                                                    },
                                                    "startedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "stdout": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "fetch": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "startedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "stdout": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "friendlyDescription": {
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "template": {
                                                "properties": {
                                                    "error": {
                                                        "type": "string"
                                                    },
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "stderr": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "usefulErrorMessage": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "spec"
                                ],
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "PackageRepository",
                    "listKind": "PackageRepositoryList",
                    "plural": "packagerepositories",
                    "shortNames": [
                        "pkgr"
                    ],
                    "singular": "packagerepository"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:46:20Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:46:20Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "controller-gen.kubebuilder.io/version": "v0.2.5",
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "name": "tanzukubernetesreleases.run.tanzu.vmware.com",
                "resourceVersion": "342",
                "uid": "f47d71d1-eca7-47e7-a312-025700845cc1"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "run.tanzu.vmware.com",
                "names": {
                    "kind": "TanzuKubernetesRelease",
                    "listKind": "TanzuKubernetesReleaseList",
                    "plural": "tanzukubernetesreleases",
                    "shortNames": [
                        "tkr"
                    ],
                    "singular": "tanzukubernetesrelease"
                },
                "preserveUnknownFields": true,
                "scope": "Cluster",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "jsonPath": ".spec.version",
                                "name": "Version",
                                "type": "string"
                            },
                            {
                                "jsonPath": ".status.conditions[?(@.type=='Compatible')].status",
                                "name": "Compatible",
                                "type": "string"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Created",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "description": "TanzuKubernetesRelease is the schema for the tanzukubernetesreleases API. TanzuKubernetesRelease objects represent Kubernetes releases available via TKG, which can be used to create TanzuKubernetesCluster instances. TKRs are immutable to end-users. They are created and managed by TKG to provide discovery of Kubernetes releases to TKG users.",
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "description": "TanzuKubernetesReleaseSpec defines the desired state of TanzuKubernetesRelease",
                                        "properties": {
                                            "images": {
                                                "description": "Images is the list of (other than Kubernetes core) essential container images shipped by this TKR (e.g. coredns, etcd).",
                                                "items": {
                                                    "description": "ContainerImage is a struct representing a single fully qualified container image name, constructed as `{Repository}/{Name}:{Tag}`.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name is the container image name without the repository prefix. It MUST be a valid URI path, MAY contain zero or more '/', and SHOULD NOT start or end with '/'.",
                                                            "type": "string"
                                                        },
                                                        "repository": {
                                                            "description": "Repository is the container image repository used by this image. It MUST be a DNS-compatible name.",
                                                            "type": "string"
                                                        },
                                                        "tag": {
                                                            "description": "Tag is the container image version tag. It is the suffix coming after ':' in a fully qualified image name.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "kubernetesVersion": {
                                                "description": "KubernetesVersion is the fully qualified Semantic Versioning conformant version of Kubernetes shipped by this TKR. The same KubernetesVersion MAY be shipped by different TKRs.",
                                                "type": "string"
                                            },
                                            "nodeImageRef": {
                                                "description": "NodeImageRef refers to an object representing the image used to create TKC nodes (e.g. VirtualMachineImage).",
                                                "properties": {
                                                    "apiVersion": {
                                                        "description": "API version of the referent.",
                                                        "type": "string"
                                                    },
                                                    "fieldPath": {
                                                        "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                        "type": "string"
                                                    },
                                                    "resourceVersion": {
                                                        "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                        "type": "string"
                                                    },
                                                    "uid": {
                                                        "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "repository": {
                                                "description": "Repository is the container image repository for Kubernetes core images, such as kube-apiserver, kube-proxy, etc. It MUST be a DNS-compatible name.",
                                                "type": "string"
                                            },
                                            "version": {
                                                "description": "Version is the fully qualified Semantic Versioning conformant version of the TanzuKubernetesRelease. Version MUST be unique across all TanzuKubernetesRelease objects.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "version"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "TanzuKubernetesReleaseStatus defines the observed state of TanzuKubernetesRelease",
                                        "properties": {
                                            "conditions": {
                                                "items": {
                                                    "description": "Condition defines an observation of a Cluster API resource operational state.",
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "A human readable message indicating details about the transition. This field may be empty.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.",
                                                            "type": "string"
                                                        },
                                                        "severity": {
                                                            "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "Status of the condition, one of True, False, Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "status",
                                                        "type"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "TanzuKubernetesRelease",
                    "listKind": "TanzuKubernetesReleaseList",
                    "plural": "tanzukubernetesreleases",
                    "shortNames": [
                        "tkr"
                    ],
                    "singular": "tanzukubernetesrelease"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "spec.preserveUnknownFields: Invalid value: true: must be false",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "tierentitlementbindings.crd.antrea.tanzu.vmware.com",
                "resourceVersion": "392",
                "uid": "4c912f7a-2f4a-4cbf-a3d4-8eb13dd001ed"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "crd.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "TierEntitlementBinding",
                    "listKind": "TierEntitlementBindingList",
                    "plural": "tierentitlementbindings",
                    "shortNames": [
                        "teb"
                    ],
                    "singular": "tierentitlementbinding"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "subjects": {
                                                "items": {
                                                    "properties": {
                                                        "apiGroup": {
                                                            "enum": [
                                                                "rbac.authorization.k8s.io"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "kind": {
                                                            "enum": [
                                                                "User",
                                                                "Group"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tierEntitlement": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "tierEntitlement",
                                            "subjects"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "TierEntitlementBinding",
                    "listKind": "TierEntitlementBindingList",
                    "plural": "tierentitlementbindings",
                    "shortNames": [
                        "teb"
                    ],
                    "singular": "tierentitlementbinding"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "tierentitlements.crd.antrea.tanzu.vmware.com",
                "resourceVersion": "546",
                "uid": "9c0954ad-89c5-4346-beac-74e2a4dd0c83"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "crd.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "TierEntitlement",
                    "listKind": "TierEntitlementList",
                    "plural": "tierentitlements",
                    "shortNames": [
                        "te"
                    ],
                    "singular": "tierentitlement"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "permission": {
                                                "enum": [
                                                    "edit",
                                                    "read"
                                                ],
                                                "type": "string"
                                            },
                                            "tiers": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "permission",
                                            "tiers"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "TierEntitlement",
                    "listKind": "TierEntitlementList",
                    "plural": "tierentitlements",
                    "shortNames": [
                        "te"
                    ],
                    "singular": "tierentitlement"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "tiers.security.antrea.tanzu.vmware.com",
                "resourceVersion": "555",
                "uid": "10030690-3c5f-4bb4-b733-db458a4364b9"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "security.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "Tier",
                    "listKind": "TierList",
                    "plural": "tiers",
                    "shortNames": [
                        "tr"
                    ],
                    "singular": "tier"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The Priority of this Tier relative to other Tiers.",
                                "jsonPath": ".spec.priority",
                                "name": "Priority",
                                "type": "integer"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "description": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "maximum": 255,
                                                "minimum": 0,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "priority"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "Tier",
                    "listKind": "TierList",
                    "plural": "tiers",
                    "shortNames": [
                        "tr"
                    ],
                    "singular": "tier"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "app": "antrea"
                },
                "name": "traceflows.ops.antrea.tanzu.vmware.com",
                "resourceVersion": "568",
                "uid": "6d8daf8f-70f0-4eef-9ca8-bb0ddf411111"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "ops.antrea.tanzu.vmware.com",
                "names": {
                    "kind": "Traceflow",
                    "listKind": "TraceflowList",
                    "plural": "traceflows",
                    "shortNames": [
                        "tf"
                    ],
                    "singular": "traceflow"
                },
                "scope": "Cluster",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The phase of the Traceflow.",
                                "jsonPath": ".status.phase",
                                "name": "Phase",
                                "type": "string"
                            },
                            {
                                "description": "The name of the source Pod.",
                                "jsonPath": ".spec.source.pod",
                                "name": "Source-Pod",
                                "priority": 10,
                                "type": "string"
                            },
                            {
                                "description": "The name of the destination Pod.",
                                "jsonPath": ".spec.destination.pod",
                                "name": "Destination-Pod",
                                "priority": 10,
                                "type": "string"
                            },
                            {
                                "description": "The IP address of the destination.",
                                "jsonPath": ".spec.destination.ip",
                                "name": "Destination-IP",
                                "priority": 10,
                                "type": "string"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "destination": {
                                                "oneOf": [
                                                    {
                                                        "required": [
                                                            "pod",
                                                            "namespace"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "service",
                                                            "namespace"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "ip"
                                                        ]
                                                    }
                                                ],
                                                "properties": {
                                                    "ip": {
                                                        "pattern": "^(((([1]?\\d)?\\d|2[0-4]\\d|25[0-5])\\.){3}(([1]?\\d)?\\d|2[0-4]\\d|25[0-5]))|([\\da-fA-F]{1,4}(\\:[\\da-fA-F]{1,4}){7})|(([\\da-fA-F]{1,4}:){0,5}::([\\da-fA-F]{1,4}:){0,5}[\\da-fA-F]{1,4})$",
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "type": "string"
                                                    },
                                                    "pod": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "packet": {
                                                "properties": {
                                                    "ipHeader": {
                                                        "properties": {
                                                            "flags": {
                                                                "type": "integer"
                                                            },
                                                            "protocol": {
                                                                "type": "integer"
                                                            },
                                                            "srcIP": {
                                                                "pattern": "^(((([1]?\\d)?\\d|2[0-4]\\d|25[0-5])\\.){3}(([1]?\\d)?\\d|2[0-4]\\d|25[0-5]))|([\\da-fA-F]{1,4}(\\:[\\da-fA-F]{1,4}){7})|(([\\da-fA-F]{1,4}:){0,5}::([\\da-fA-F]{1,4}:){0,5}[\\da-fA-F]{1,4})$",
                                                                "type": "string"
                                                            },
                                                            "ttl": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ipv6Header": {
                                                        "properties": {
                                                            "hopLimit": {
                                                                "type": "integer"
                                                            },
                                                            "nextHeader": {
                                                                "type": "integer"
                                                            },
                                                            "srcIP": {
                                                                "format": "ipv6",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "transportHeader": {
                                                        "properties": {
                                                            "icmp": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "sequence": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tcp": {
                                                                "properties": {
                                                                    "dstPort": {
                                                                        "type": "integer"
                                                                    },
                                                                    "flags": {
                                                                        "type": "integer"
                                                                    },
                                                                    "srcPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "udp": {
                                                                "properties": {
                                                                    "dstPort": {
                                                                        "type": "integer"
                                                                    },
                                                                    "srcPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "source": {
                                                "properties": {
                                                    "namespace": {
                                                        "type": "string"
                                                    },
                                                    "pod": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "pod",
                                                    "namespace"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "source",
                                            "destination"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "properties": {
                                            "dataplaneTag": {
                                                "type": "integer"
                                            },
                                            "phase": {
                                                "type": "string"
                                            },
                                            "reason": {
                                                "type": "string"
                                            },
                                            "results": {
                                                "items": {
                                                    "properties": {
                                                        "node": {
                                                            "type": "string"
                                                        },
                                                        "observations": {
                                                            "items": {
                                                                "properties": {
                                                                    "action": {
                                                                        "type": "string"
                                                                    },
                                                                    "component": {
                                                                        "type": "string"
                                                                    },
                                                                    "componentInfo": {
                                                                        "type": "string"
                                                                    },
                                                                    "dstMAC": {
                                                                        "type": "string"
                                                                    },
                                                                    "networkPolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "pod": {
                                                                        "type": "string"
                                                                    },
                                                                    "translatedDstIP": {
                                                                        "type": "string"
                                                                    },
                                                                    "translatedSrcIP": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "integer"
                                                                    },
                                                                    "tunnelDstIP": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "role": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "spec"
                                ],
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "Traceflow",
                    "listKind": "TraceflowList",
                    "plural": "traceflows",
                    "shortNames": [
                        "tf"
                    ],
                    "singular": "traceflow"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.",
                "resourceVersion": "26",
                "uid": "11c05cf8-7cb5-4753-b707-9eecdcfcacbb"
            },
            "spec": {
                "groupPriorityMinimum": 18000,
                "version": "v1",
                "versionPriority": 1
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.admissionregistration.k8s.io",
                "resourceVersion": "27",
                "uid": "8cd8912c-f771-4351-b8c9-d5613025e6fd"
            },
            "spec": {
                "group": "admissionregistration.k8s.io",
                "groupPriorityMinimum": 16700,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.apiextensions.k8s.io",
                "resourceVersion": "29",
                "uid": "bc0eeaa4-272f-48b8-877a-4706e4ce5425"
            },
            "spec": {
                "group": "apiextensions.k8s.io",
                "groupPriorityMinimum": 16700,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.apps",
                "resourceVersion": "31",
                "uid": "6e594df7-ad52-436d-9d41-528025689528"
            },
            "spec": {
                "group": "apps",
                "groupPriorityMinimum": 17800,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.authentication.k8s.io",
                "resourceVersion": "33",
                "uid": "ec62a22a-02dd-45bc-8854-6947525af438"
            },
            "spec": {
                "group": "authentication.k8s.io",
                "groupPriorityMinimum": 17700,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.authorization.k8s.io",
                "resourceVersion": "37",
                "uid": "090661f8-ba15-4055-96d2-b7c9974413ce"
            },
            "spec": {
                "group": "authorization.k8s.io",
                "groupPriorityMinimum": 17600,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.autoscaling",
                "resourceVersion": "35",
                "uid": "33df74d7-0da1-42e8-b358-ce4c87c5b33a"
            },
            "spec": {
                "group": "autoscaling",
                "groupPriorityMinimum": 17500,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.batch",
                "resourceVersion": "42",
                "uid": "bffbed17-d91f-4fbe-81b3-4656c39479bf"
            },
            "spec": {
                "group": "batch",
                "groupPriorityMinimum": 17400,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.certificates.k8s.io",
                "resourceVersion": "46",
                "uid": "da2a853f-3c5d-4bc8-8091-85e7ae53d874"
            },
            "spec": {
                "group": "certificates.k8s.io",
                "groupPriorityMinimum": 17300,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.coordination.k8s.io",
                "resourceVersion": "47",
                "uid": "e03a309d-8544-4733-88e2-86781dcab031"
            },
            "spec": {
                "group": "coordination.k8s.io",
                "groupPriorityMinimum": 16500,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.discovery.k8s.io",
                "resourceVersion": "49",
                "uid": "328cb25b-8bf5-487b-bdc7-4945346c9431"
            },
            "spec": {
                "group": "discovery.k8s.io",
                "groupPriorityMinimum": 16200,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.events.k8s.io",
                "resourceVersion": "54",
                "uid": "058aacd9-d41a-45b2-a10f-7ef2cc468529"
            },
            "spec": {
                "group": "events.k8s.io",
                "groupPriorityMinimum": 17750,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.networking.k8s.io",
                "resourceVersion": "57",
                "uid": "fb12c3f9-77fc-4e8f-b9b2-0963e3b593b9"
            },
            "spec": {
                "group": "networking.k8s.io",
                "groupPriorityMinimum": 17200,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.node.k8s.io",
                "resourceVersion": "59",
                "uid": "717a78b7-131f-4eab-814b-792377529bbc"
            },
            "spec": {
                "group": "node.k8s.io",
                "groupPriorityMinimum": 16300,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.policy",
                "resourceVersion": "62",
                "uid": "15e42e3e-ab19-455a-a631-657ed2df693c"
            },
            "spec": {
                "group": "policy",
                "groupPriorityMinimum": 17100,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.rbac.authorization.k8s.io",
                "resourceVersion": "65",
                "uid": "6230cbd4-34d0-4c94-be31-e597acf17d91"
            },
            "spec": {
                "group": "rbac.authorization.k8s.io",
                "groupPriorityMinimum": 17000,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.scheduling.k8s.io",
                "resourceVersion": "69",
                "uid": "e1df1f8f-54c0-4d9a-a92c-0391f1a2d737"
            },
            "spec": {
                "group": "scheduling.k8s.io",
                "groupPriorityMinimum": 16600,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1.storage.k8s.io",
                "resourceVersion": "70",
                "uid": "ab6fc463-751e-4b3a-a4f1-deb22846dbcd"
            },
            "spec": {
                "group": "storage.k8s.io",
                "groupPriorityMinimum": 16800,
                "version": "v1",
                "versionPriority": 15
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.crd.antrea.tanzu.vmware.com",
                "resourceVersion": "385",
                "uid": "a919ecbf-ef4b-4f11-8169-43dd313d4c80"
            },
            "spec": {
                "group": "crd.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:31Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "v1alpha1.data.packaging.carvel.dev",
                "resourceVersion": "1029",
                "uid": "3eb26637-074f-4a60-8029-5a56191e9269"
            },
            "spec": {
                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFvTVNZd0pBWURWUVFEREIxcllYQncKTFdOdmJuUnliMnhzWlhJdFkyRkFNVFl6TkRFeU5UWXlOakFlRncweU1URXdNVE14TURRM01EWmFGdzB5TWpFdwpNVE14TURRM01EWmFNQ1V4SXpBaEJnTlZCQU1NR210aGNIQXRZMjl1ZEhKdmJHeGxja0F4TmpNME1USTFOakkyCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMk5pOEZHcmFidGFiUEhaOEpjVGQKYzlsd3NMYTJuSUtoZ1E0YW1YT25OQ01RaXEvamhnbUhsbXdSMm9xaFh0R3JLeHBqZmdlRXgxNnowRHhGcDhZRwppbU5QdG5iaDczNW5BMG10ZmhDWFVhODNxRWI3eGZ0UE9MTlRQUVlKNFJYUjR2VzNDUnVPN2lrMU1PK21LRk1wCms4YlpocmN3aTVsQ25MMklVNWpoOWdpQWpIbjJpTm1XVnNmUUFlck5EN1VTL3dyRmQ4dzVVb3BSRUthSTFZSncKNE9pb3hMQTdheEw1S0Nqd3IxY0l5NjV2eVlFRGx0czk5RFFPa00vNXhTcVZ6UzYyTHdST2IzOU5rOUVsTVpCcgo0TTBjRmZSbitudkJ2RGZPaWhiY21XNy8yQTh4bXhJNTF5RHFtRk9pNVduRUFPbUx5Ym5TOXhZZDR2U1d4SXRUClZRSURBUUFCbzRHaU1JR2ZNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkJmMjNsTFV2eURGLzFKUVRFVVF2Vkw0anBpcgpNRWtHQTFVZEVRUkNNRUNDRDJ0aGNIQXRZMjl1ZEhKdmJHeGxjb0ljY0dGamEyRm5hVzVuTFdGd2FTNTBhMmN0CmMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmMKZ05GQ0luSVJ3LzI0TWpPR0JqMXBmY0doU2U5aTZiZ3J6Q3NleU1VUGtmQllVa2NtRnVvRUpZT25iaHlieWxJQwpZVnJ5dmJnbjNhaTJSM2FaaWhNWFBGSkFrMU1yOGRhZmJwMkdwVUNPNllTUE1lb04rSEI1bmlFWjAzVGwrODZCCndkSTBFR3J4NVlRdjBLWXpMMmUxOGg0cnVZdzN0aE5GNm1oMG05Z3IrUU5NeVh6V0kxcURrZHFvTGN6RCtNRGkKT3g4RnVucjN4cmlqMDdOZTU4czNnNWR4VUV1MmVKcU1jdGlRZGppRGYwLzk2Rnh5UnJUVEpTLzQ5by80eHVUcgpMcHVBbWdsbERpRFNoeVBiZHNUSVozSW0wRGUwUnRtL250d3dTQWdyVm40MVJabEl6R3JjRjJ5YXNydkgwTFpvClZNckhOamhvbE9pYlAyNnBXT2NSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREVENDQWZXZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFvTVNZd0pBWURWUVFEREIxcllYQncKTFdOdmJuUnliMnhzWlhJdFkyRkFNVFl6TkRFeU5UWXlOakFlRncweU1URXdNVE14TURRM01EWmFGdzB5TWpFdwpNVE14TURRM01EWmFNQ2d4SmpBa0JnTlZCQU1NSFd0aGNIQXRZMjl1ZEhKdmJHeGxjaTFqWVVBeE5qTTBNVEkxCk5qSTJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9VaTRmSitFdGxnODFpRHQKN1pIMjdMT0VTRW1ONmlFd3EwNkoxWS83Yk55eEF1Vi9NSzExcmplVC9CRFJaQ3Q4N0xWbE01Wi9zdUFPc0s1Ywo3TzN6Smt3RGJpYWtNbDgrRitBSHIvaVZ1WUpEQW1oNjFCTmx6dHpzeGhoOThNZ2E1SG0rYzA2SndNUHRkU3V6CncyYzJiYzFtRGRaZ3JlWGpRak53blpXRDZaUHRiSW85eDQ1YmYrTUhPeHVEYTJiZEdsejZhQXUwY0pEbWhSMDQKMlBHREpCZG9UT1VybVpYR2tqcTVzOTJYcFB2RlFjOExYYjl0cHR0VjFhaEZrREY0aXI5blhKa2tGTmdXVk1oZwprSEJDeW9IemEwUm56U2Nma3pNRkJ2ZXJtM2h0MlNWb3JpdUFZM3hjMjl3M0hJV0tiT3VPSVcybEpLbkZFTnVMCmhGcmZIUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWQKQmdOVkhRNEVGZ1FVRi9iZVV0Uy9JTVgvVWxCTVJSQzlVdmlPbUtzd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1h2RGIvc20zbzBvUlVSSnhnRnlBN2tPekFoRWIyekRvVFpvVTNHbytkb0FWUlJtZEZ5QW5xT0g3bUtGbTBvCmQwK0pib1dqSTRXL0p0SGNOenJJa205VVZUNGM4V2FjK1VtQkdHc1lQMzhpZ0pDVm10ZStralpOWFBqb2hsbFQKZmhVMXZTK1FvTVhmdS9DTTF0eTh4b241M3ovVHNrOUlKdXZnQzg5VnBPdGxKTTdQYlp6WHFkeXREWEJaOTh5agpxNkVwYVJJWk53QnNDYW1QVVM3cmZIQmNKdDQxZEdjRHpDZHB6cjdad1ByOWFBM3YxaHhHRlFYYlZhc1E1SGlaCll6MmwzM3NBb1hXU3RwNjhxSGRWci9Uc2xrT1R1SFYwTTc1R254T0JvV0t6dzNxL3JzaXBBSllEWElqcDViMWsKNXhndXdXUG5VRFVMVXZZTW54SmN3YlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "group": "data.packaging.carvel.dev",
                "groupPriorityMinimum": 100,
                "service": {
                    "name": "packaging-api",
                    "namespace": "tkg-system",
                    "port": 443
                },
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:07Z",
                        "message": "all checks passed",
                        "reason": "Passed",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.internal.packaging.carvel.dev",
                "resourceVersion": "588",
                "uid": "460bc486-f35b-4a4d-801e-8bf9fdb9f5bb"
            },
            "spec": {
                "group": "internal.packaging.carvel.dev",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:00Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.kappctrl.k14s.io",
                "resourceVersion": "650",
                "uid": "785b2f1c-73eb-4337-8489-2ae546de199e"
            },
            "spec": {
                "group": "kappctrl.k14s.io",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:46:00Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.ops.antrea.tanzu.vmware.com",
                "resourceVersion": "559",
                "uid": "d96127c0-936e-4355-bb11-e4aadc882fe4"
            },
            "spec": {
                "group": "ops.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.packaging.carvel.dev",
                "resourceVersion": "730",
                "uid": "031ec635-60de-4b66-97de-1f4ca32e96c1"
            },
            "spec": {
                "group": "packaging.carvel.dev",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:46:20Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.run.tanzu.vmware.com",
                "resourceVersion": "323",
                "uid": "1835aeac-cf09-45a4-9b58-801d314cf047"
            },
            "spec": {
                "group": "run.tanzu.vmware.com",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:27Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha1.security.antrea.tanzu.vmware.com",
                "resourceVersion": "334",
                "uid": "1155ab3e-4b2a-40e5-9e2e-bc85c255e2fb"
            },
            "spec": {
                "group": "security.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:27Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "v1alpha1.stats.antrea.tanzu.vmware.com",
                "resourceVersion": "1039",
                "uid": "80d4124b-ea83-4895-bf0d-4a3522e01aa4"
            },
            "spec": {
                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "group": "stats.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 100,
                "service": {
                    "name": "antrea",
                    "namespace": "kube-system",
                    "port": 443
                },
                "version": "v1alpha1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "message": "all checks passed",
                        "reason": "Passed",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1alpha2.core.antrea.tanzu.vmware.com",
                "resourceVersion": "331",
                "uid": "6e2307ec-1d26-4e4f-9a8d-5886166d809f"
            },
            "spec": {
                "group": "core.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 1000,
                "version": "v1alpha2",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.admissionregistration.k8s.io",
                "resourceVersion": "28",
                "uid": "6eaf1d2c-42df-4256-990b-ab20f8f912bf"
            },
            "spec": {
                "group": "admissionregistration.k8s.io",
                "groupPriorityMinimum": 16700,
                "version": "v1beta1",
                "versionPriority": 12
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.apiextensions.k8s.io",
                "resourceVersion": "30",
                "uid": "af1112a8-8981-4eff-bb78-f9e1c12bf54e"
            },
            "spec": {
                "group": "apiextensions.k8s.io",
                "groupPriorityMinimum": 16700,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.authentication.k8s.io",
                "resourceVersion": "34",
                "uid": "240c4fda-ed58-4505-b0b6-21b09c8b534a"
            },
            "spec": {
                "group": "authentication.k8s.io",
                "groupPriorityMinimum": 17700,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.authorization.k8s.io",
                "resourceVersion": "38",
                "uid": "bbab0498-1279-4336-b6dd-4838bdd1350c"
            },
            "spec": {
                "group": "authorization.k8s.io",
                "groupPriorityMinimum": 17600,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.batch",
                "resourceVersion": "50",
                "uid": "fc0773f5-ad57-43bd-8543-d9d7a9f4adc7"
            },
            "spec": {
                "group": "batch",
                "groupPriorityMinimum": 17400,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.certificates.k8s.io",
                "resourceVersion": "43",
                "uid": "4f53f015-5236-4a72-b1af-ddcec9a5f9cc"
            },
            "spec": {
                "group": "certificates.k8s.io",
                "groupPriorityMinimum": 17300,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "true"
                },
                "name": "v1beta1.clusterinformation.antrea.tanzu.vmware.com",
                "resourceVersion": "315",
                "uid": "8e065cf5-86e7-4016-92e1-1e3052b42305"
            },
            "spec": {
                "group": "clusterinformation.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 1000,
                "version": "v1beta1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:26Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "v1beta1.controlplane.antrea.tanzu.vmware.com",
                "resourceVersion": "1038",
                "uid": "c5c537b1-0780-4528-b1ee-6b6f57255fdb"
            },
            "spec": {
                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "group": "controlplane.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 100,
                "service": {
                    "name": "antrea",
                    "namespace": "kube-system",
                    "port": 443
                },
                "version": "v1beta1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "message": "all checks passed",
                        "reason": "Passed",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.coordination.k8s.io",
                "resourceVersion": "48",
                "uid": "7fdf5914-18fe-4dc0-8e56-562c197d6a44"
            },
            "spec": {
                "group": "coordination.k8s.io",
                "groupPriorityMinimum": 16500,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.discovery.k8s.io",
                "resourceVersion": "51",
                "uid": "dfe4596b-e17e-4191-a0f3-8580c49bd824"
            },
            "spec": {
                "group": "discovery.k8s.io",
                "groupPriorityMinimum": 16200,
                "version": "v1beta1",
                "versionPriority": 12
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.events.k8s.io",
                "resourceVersion": "55",
                "uid": "e40f73bf-9c71-45d0-9949-7598b5c3b4f2"
            },
            "spec": {
                "group": "events.k8s.io",
                "groupPriorityMinimum": 17750,
                "version": "v1beta1",
                "versionPriority": 5
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.extensions",
                "resourceVersion": "52",
                "uid": "67c855a6-483a-4e52-8c57-086f36666c2f"
            },
            "spec": {
                "group": "extensions",
                "groupPriorityMinimum": 17150,
                "version": "v1beta1",
                "versionPriority": 1
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.flowcontrol.apiserver.k8s.io",
                "resourceVersion": "53",
                "uid": "d08739e4-da69-4e98-8ae6-ca62e12a5d75"
            },
            "spec": {
                "group": "flowcontrol.apiserver.k8s.io",
                "groupPriorityMinimum": 16100,
                "version": "v1beta1",
                "versionPriority": 12
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "v1beta1.networking.antrea.tanzu.vmware.com",
                "resourceVersion": "1041",
                "uid": "4d7ce425-0556-4514-a032-fbb1633cecc5"
            },
            "spec": {
                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "group": "networking.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 100,
                "service": {
                    "name": "antrea",
                    "namespace": "kube-system",
                    "port": 443
                },
                "version": "v1beta1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "message": "all checks passed",
                        "reason": "Passed",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.networking.k8s.io",
                "resourceVersion": "58",
                "uid": "29c3af6e-b260-4570-9381-1ac5e6d060ed"
            },
            "spec": {
                "group": "networking.k8s.io",
                "groupPriorityMinimum": 17200,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.node.k8s.io",
                "resourceVersion": "61",
                "uid": "9f088da0-0a03-4f49-9013-57c90806c14a"
            },
            "spec": {
                "group": "node.k8s.io",
                "groupPriorityMinimum": 16300,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.policy",
                "resourceVersion": "63",
                "uid": "0bb86389-2dfc-4837-9276-a0ac22f0d952"
            },
            "spec": {
                "group": "policy",
                "groupPriorityMinimum": 17100,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.rbac.authorization.k8s.io",
                "resourceVersion": "68",
                "uid": "04abe507-6ba9-4ffa-9213-c3cd8449462e"
            },
            "spec": {
                "group": "rbac.authorization.k8s.io",
                "groupPriorityMinimum": 17000,
                "version": "v1beta1",
                "versionPriority": 12
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.scheduling.k8s.io",
                "resourceVersion": "64",
                "uid": "ad64dd19-1e76-469f-8a27-4727ffb05031"
            },
            "spec": {
                "group": "scheduling.k8s.io",
                "groupPriorityMinimum": 16600,
                "version": "v1beta1",
                "versionPriority": 12
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v1beta1.storage.k8s.io",
                "resourceVersion": "67",
                "uid": "1931f98a-0482-4a98-931b-792140a52f8b"
            },
            "spec": {
                "group": "storage.k8s.io",
                "groupPriorityMinimum": 16800,
                "version": "v1beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "v1beta1.system.antrea.tanzu.vmware.com",
                "resourceVersion": "1042",
                "uid": "6e5be8c2-5b25-40bf-9e85-931ad3080110"
            },
            "spec": {
                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "group": "system.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 100,
                "service": {
                    "name": "antrea",
                    "namespace": "kube-system",
                    "port": 443
                },
                "version": "v1beta1",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "message": "all checks passed",
                        "reason": "Passed",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "v1beta2.controlplane.antrea.tanzu.vmware.com",
                "resourceVersion": "1040",
                "uid": "eeefc4be-7d7a-43cb-b7f4-bae528ffb4e8"
            },
            "spec": {
                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQnd4R2pBWUJnTlZCQU1NRVdGdWRISmxZVUF4TmpNME1USTFOakU1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBcklGNm1CdjYzOHc2NEtPK0xVdUhBazNMUnI5cks0alg5RmFEeEZ0SHYvc2QKci9VWVJDaFBHYVpJbzhOdjF2Sk1CWjZBYUVTekYxOHlDTHZnVVpYZ0pyQzM0NlhBZjR0YWZEMWxVMTVFLzllSwpkN3EyUW1zeFNib3VSdmJmSTJnTlgranFBRVl5R0JydlJIdHQ1N3FPVW5jcEtseG9aRTRBZFI2MEJ1UEw3OHZMClJZL05EMGwrN3hOV3plYWxXUUg3MXJDeVQ3SjY0ZmxGcVNneWtFc1h2RzdMWU5TZThzSHRwelJPam5HdFl6cTEKZG9oQ21kWGpiSFJrYUN6bTBVUDBBbDFhSnlvYUZuV1lrOGh4eXdTRUlqZi80NGtwVVlseW9ZaEVaN1RPbTVxagpNWE5aZ3ZKQTN6WFF3RFZtMnBhTlFJVHVIcERFMGhIVDQ3QVRBd0k4dVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFNQmdOVkhSTUJBZjhFQWpBQU1COEcKQTFVZEl3UVlNQmFBRk1OWUxGOVVZR3hCRFdJTzBieWJockdvNUdRR01Eb0dBMVVkRVFRek1ER0NCbUZ1ZEhKbApZWUlXWVc1MGNtVmhMbXQxWW1VdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvQUFBQk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJxdzZPSXdHZW5XYjhOdjlWSnVzSVZiOU53N0pQY1h0MmxLTlZialBxYlBJRUMKSVkvV00zbnlVRnFORWxRTkFsZTFBODN0dWo3WmI2cHRWcU5NNHBPejluRlFvZEp4V2ZTK21mTW0ybUVNRXF5egpZVVhNNGI3RmlUanBNTE14eVRxdnZDY3N6NlNjR3o4dEk0RWZVZkpYbW5vMUNBL3hhWFIzZzc5dTF6bkViQ3BMCkpvc25CLzJiYnZ1SnRHK2xDTFNucmJKdFdaNTY0M2wyRkpJRmtqUTNpZUVTMUMvZXlOUFlESkl0OTIxYVRsMjAKVVR3M2t1Q3dNUXY0UURHbmJlczIxSU14VmxlcVN0VUtlalcvSi9vSHpOZXRTbW5hMW85L0QvcEkxMk02Y3EvYgpOMFBJM1NuR1RwbWVYZUZENzJwZE1wejZrcEU1OEJkcjllKzUxTk1PCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSaGJuUnkKWldFdFkyRkFNVFl6TkRFeU5UWXhPVEFlRncweU1URXdNVE14TURRMk5UbGFGdzB5TWpFd01UTXhNRFEyTlRsYQpNQjh4SFRBYkJnTlZCQU1NRkdGdWRISmxZUzFqWVVBeE5qTTBNVEkxTmpFNU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXMyb2hiSjFQa04yd095RUQwVCtFWVdwTmJOVGUwS091ekZIMlNlTzgKRjlBSXZvT1l4eWNsMU53ZlN0WkVpVlBhdmxCdU5rOGJJRlVFOVNkalpJUjlwVEJsWlhVckEyUER2UFpKbTByYgpKUENPaTRFZ0E0VitYR1RoY1NJdkVoTU9XRitmMWxXMjNaUU5WeklycUcva0pjMDhEU29RVS9PcTZ5Q2t1WFl1CldIbkJwdkluRjl0eTI4Wjk3SE5tS2EzUjMzbVZFOW9xMHJQbnNtQ2VyNmk0NU54cW9oWGFyVkEvNXhNMjJCd0kKeDc0clRhUmNGNHZPb1pDbysyOTA2WVNNVklxemhJTUJyVU1Rc2dwUW1ZNmUwaTRVdGxaY1hmRm1XaTM5bTdRcQo5Z29JaWJLT1Z0TFNUS3luT2JyZlJRYUpZbE9YTzZ2VVU5dXNabzZnRys3b2pRSURBUUFCbzBJd1FEQU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3MWdzWDFSZ2JFRU4KWWc3UnZKdUdzYWprWkFZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbDJoQWQ3SkJTNm9OS21uN1dKSmYwZQpCblBVVi85TVQ0MUhtQ01nWU5BUjQvZ1FxbWpCWW5lOTNyaGo3NFFONjkrU3M4L2gxRGNSbnBRbVdvSVQ2ZFhJClk1T1FVU21wemVFUWpIWHd0bjhibGg3djBvUjBwb0NWeUc3cVJBQ2lqbC9CNlFnR3IwVy82eG5FRGxPYWN3c3UKOVlIZFE2dWkvVTZQL1pPcGMzQzlubERPcmJGZE12UzhYOFN4TlFvZ2tSbllIUGhIM0VObW1ZbU9ncmMxVnRlVQptRWxGZXZ1SllpOGRydFMxcjNuSVpoQWNRQWs2OUFDd0lhV2h3aVhpUEhCbUNNTW1QWjl5R3dtbVJ4aXd3Njk4CmFCWVFDZXFCM0Jtd2hjSDJ2eDYzUHg5aTlHMEZvNHhMQ1BBR284UWNSbUxyWU1pb3NEdU9BTXFVSFg0dFNGdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "group": "controlplane.antrea.tanzu.vmware.com",
                "groupPriorityMinimum": 100,
                "service": {
                    "name": "antrea",
                    "namespace": "kube-system",
                    "port": 443
                },
                "version": "v1beta2",
                "versionPriority": 100
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "message": "all checks passed",
                        "reason": "Passed",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v2beta1.autoscaling",
                "resourceVersion": "40",
                "uid": "cf192acc-9379-46ae-8d4c-04197e9216a5"
            },
            "spec": {
                "group": "autoscaling",
                "groupPriorityMinimum": 17500,
                "version": "v2beta1",
                "versionPriority": 9
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apiregistration.k8s.io/v1",
            "kind": "APIService",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "labels": {
                    "kube-aggregator.kubernetes.io/automanaged": "onstart"
                },
                "name": "v2beta2.autoscaling",
                "resourceVersion": "41",
                "uid": "18dc79f3-4caf-48e1-85fc-720c11bef8c8"
            },
            "spec": {
                "group": "autoscaling",
                "groupPriorityMinimum": 17500,
                "version": "v2beta2",
                "versionPriority": 1
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "Local APIServices are always available",
                        "reason": "Local",
                        "status": "True",
                        "type": "Available"
                    }
                ]
            }
        },
        {
            "apiVersion": "apps/v1",
            "data": {
                "spec": {
                    "template": {
                        "$patch": "replace",
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "app": "antrea",
                                "component": "antrea-agent"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "args": [
                                        "--config",
                                        "/etc/antrea/antrea-agent.conf",
                                        "--logtostderr=false",
                                        "--log_dir=/var/log/antrea",
                                        "--alsologtostderr",
                                        "--log_file_max_size=100",
                                        "--log_file_max_num=4",
                                        "--v=0"
                                    ],
                                    "command": [
                                        "antrea-agent"
                                    ],
                                    "env": [
                                        {
                                            "name": "POD_NAME",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.name"
                                                }
                                            }
                                        },
                                        {
                                            "name": "POD_NAMESPACE",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        },
                                        {
                                            "name": "NODE_NAME",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "spec.nodeName"
                                                }
                                            }
                                        }
                                    ],
                                    "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                    "imagePullPolicy": "IfNotPresent",
                                    "livenessProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "container_liveness_probe agent"
                                            ]
                                        },
                                        "failureThreshold": 5,
                                        "initialDelaySeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "timeoutSeconds": 5
                                    },
                                    "name": "antrea-agent",
                                    "ports": [
                                        {
                                            "containerPort": 10350,
                                            "hostPort": 10350,
                                            "name": "api",
                                            "protocol": "TCP"
                                        }
                                    ],
                                    "readinessProbe": {
                                        "failureThreshold": 5,
                                        "httpGet": {
                                            "host": "127.0.0.1",
                                            "path": "/readyz",
                                            "port": "api",
                                            "scheme": "HTTPS"
                                        },
                                        "initialDelaySeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "timeoutSeconds": 5
                                    },
                                    "resources": {
                                        "requests": {
                                            "cpu": "200m"
                                        }
                                    },
                                    "securityContext": {
                                        "privileged": true
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "volumeMounts": [
                                        {
                                            "mountPath": "/etc/antrea/antrea-agent.conf",
                                            "name": "antrea-config",
                                            "readOnly": true,
                                            "subPath": "antrea-agent.conf"
                                        },
                                        {
                                            "mountPath": "/var/run/antrea",
                                            "name": "host-var-run-antrea"
                                        },
                                        {
                                            "mountPath": "/var/run/openvswitch",
                                            "name": "host-var-run-antrea",
                                            "subPath": "openvswitch"
                                        },
                                        {
                                            "mountPath": "/var/lib/cni",
                                            "name": "host-var-run-antrea",
                                            "subPath": "cni"
                                        },
                                        {
                                            "mountPath": "/var/log/antrea",
                                            "name": "host-var-log-antrea"
                                        },
                                        {
                                            "mountPath": "/host/proc",
                                            "name": "host-proc",
                                            "readOnly": true
                                        },
                                        {
                                            "mountPath": "/host/var/run/netns",
                                            "mountPropagation": "HostToContainer",
                                            "name": "host-var-run-netns",
                                            "readOnly": true
                                        },
                                        {
                                            "mountPath": "/run/xtables.lock",
                                            "name": "xtables-lock"
                                        }
                                    ]
                                },
                                {
                                    "args": [
                                        "--log_file_max_size=100",
                                        "--log_file_max_num=4"
                                    ],
                                    "command": [
                                        "start_ovs_netdev"
                                    ],
                                    "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                    "imagePullPolicy": "IfNotPresent",
                                    "livenessProbe": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "timeout 10 container_liveness_probe ovs"
                                            ]
                                        },
                                        "failureThreshold": 5,
                                        "initialDelaySeconds": 5,
                                        "periodSeconds": 10,
                                        "successThreshold": 1,
                                        "timeoutSeconds": 10
                                    },
                                    "name": "antrea-ovs",
                                    "resources": {
                                        "requests": {
                                            "cpu": "200m"
                                        }
                                    },
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "SYS_NICE",
                                                "NET_ADMIN",
                                                "SYS_ADMIN",
                                                "IPC_LOCK"
                                            ]
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "volumeMounts": [
                                        {
                                            "mountPath": "/var/run/openvswitch",
                                            "name": "host-var-run-antrea",
                                            "subPath": "openvswitch"
                                        },
                                        {
                                            "mountPath": "/var/log/openvswitch",
                                            "name": "host-var-log-antrea",
                                            "subPath": "openvswitch"
                                        },
                                        {
                                            "mountPath": "/dev/net/tun",
                                            "name": "dev-tun"
                                        }
                                    ]
                                }
                            ],
                            "dnsPolicy": "ClusterFirstWithHostNet",
                            "hostNetwork": true,
                            "initContainers": [
                                {
                                    "command": [
                                        "install_cni_kind"
                                    ],
                                    "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                    "imagePullPolicy": "IfNotPresent",
                                    "name": "install-cni",
                                    "resources": {
                                        "requests": {
                                            "cpu": "100m"
                                        }
                                    },
                                    "securityContext": {
                                        "capabilities": {
                                            "add": [
                                                "SYS_MODULE"
                                            ]
                                        }
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "volumeMounts": [
                                        {
                                            "mountPath": "/etc/antrea/antrea-cni.conflist",
                                            "name": "antrea-config",
                                            "readOnly": true,
                                            "subPath": "antrea-cni.conflist"
                                        },
                                        {
                                            "mountPath": "/host/etc/cni/net.d",
                                            "name": "host-cni-conf"
                                        },
                                        {
                                            "mountPath": "/host/opt/cni/bin",
                                            "name": "host-cni-bin"
                                        },
                                        {
                                            "mountPath": "/lib/modules",
                                            "name": "host-lib-modules",
                                            "readOnly": true
                                        },
                                        {
                                            "mountPath": "/var/run/antrea",
                                            "name": "host-var-run-antrea"
                                        }
                                    ]
                                }
                            ],
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "antrea-agent",
                            "serviceAccountName": "antrea-agent",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoSchedule",
                                    "operator": "Exists"
                                },
                                {
                                    "effect": "NoExecute",
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "antrea-config-ctb8mftc58"
                                    },
                                    "name": "antrea-config"
                                },
                                {
                                    "hostPath": {
                                        "path": "/etc/cni/net.d",
                                        "type": ""
                                    },
                                    "name": "host-cni-conf"
                                },
                                {
                                    "hostPath": {
                                        "path": "/opt/cni/bin",
                                        "type": ""
                                    },
                                    "name": "host-cni-bin"
                                },
                                {
                                    "hostPath": {
                                        "path": "/proc",
                                        "type": ""
                                    },
                                    "name": "host-proc"
                                },
                                {
                                    "hostPath": {
                                        "path": "/var/run/netns",
                                        "type": ""
                                    },
                                    "name": "host-var-run-netns"
                                },
                                {
                                    "hostPath": {
                                        "path": "/var/run/antrea",
                                        "type": "DirectoryOrCreate"
                                    },
                                    "name": "host-var-run-antrea"
                                },
                                {
                                    "hostPath": {
                                        "path": "/var/log/antrea",
                                        "type": "DirectoryOrCreate"
                                    },
                                    "name": "host-var-log-antrea"
                                },
                                {
                                    "hostPath": {
                                        "path": "/lib/modules",
                                        "type": ""
                                    },
                                    "name": "host-lib-modules"
                                },
                                {
                                    "hostPath": {
                                        "path": "/run/xtables.lock",
                                        "type": "FileOrCreate"
                                    },
                                    "name": "xtables-lock"
                                },
                                {
                                    "hostPath": {
                                        "path": "/dev/net/tun",
                                        "type": "CharDevice"
                                    },
                                    "name": "dev-tun"
                                }
                            ]
                        }
                    }
                }
            },
            "kind": "ControllerRevision",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kapp.k14s.io/disable-default-label-scoping-rules": ""
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea",
                    "component": "antrea-agent",
                    "controller-revision-hash": "75c599bbdd"
                },
                "name": "antrea-agent-75c599bbdd",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "antrea-agent",
                        "uid": "8c84cfc4-36e3-45b6-9fb9-fa9c7a148363"
                    }
                ],
                "resourceVersion": "842",
                "uid": "41844ac9-8651-4f03-91f6-823db6db046b"
            },
            "revision": 1
        },
        {
            "apiVersion": "apps/v1",
            "data": {
                "spec": {
                    "template": {
                        "$patch": "replace",
                        "metadata": {
                            "creationTimestamp": null,
                            "labels": {
                                "k8s-app": "kube-proxy"
                            }
                        },
                        "spec": {
                            "containers": [
                                {
                                    "command": [
                                        "/usr/local/bin/kube-proxy",
                                        "--config=/var/lib/kube-proxy/config.conf",
                                        "--hostname-override=$(NODE_NAME)"
                                    ],
                                    "env": [
                                        {
                                            "name": "NODE_NAME",
                                            "valueFrom": {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "spec.nodeName"
                                                }
                                            }
                                        }
                                    ],
                                    "image": "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1",
                                    "imagePullPolicy": "IfNotPresent",
                                    "name": "kube-proxy",
                                    "resources": {},
                                    "securityContext": {
                                        "privileged": true
                                    },
                                    "terminationMessagePath": "/dev/termination-log",
                                    "terminationMessagePolicy": "File",
                                    "volumeMounts": [
                                        {
                                            "mountPath": "/var/lib/kube-proxy",
                                            "name": "kube-proxy"
                                        },
                                        {
                                            "mountPath": "/run/xtables.lock",
                                            "name": "xtables-lock"
                                        },
                                        {
                                            "mountPath": "/lib/modules",
                                            "name": "lib-modules",
                                            "readOnly": true
                                        }
                                    ]
                                }
                            ],
                            "dnsPolicy": "ClusterFirst",
                            "hostNetwork": true,
                            "nodeSelector": {
                                "kubernetes.io/os": "linux"
                            },
                            "priorityClassName": "system-node-critical",
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler",
                            "securityContext": {},
                            "serviceAccount": "kube-proxy",
                            "serviceAccountName": "kube-proxy",
                            "terminationGracePeriodSeconds": 30,
                            "tolerations": [
                                {
                                    "key": "CriticalAddonsOnly",
                                    "operator": "Exists"
                                },
                                {
                                    "operator": "Exists"
                                }
                            ],
                            "volumes": [
                                {
                                    "configMap": {
                                        "defaultMode": 420,
                                        "name": "kube-proxy"
                                    },
                                    "name": "kube-proxy"
                                },
                                {
                                    "hostPath": {
                                        "path": "/run/xtables.lock",
                                        "type": "FileOrCreate"
                                    },
                                    "name": "xtables-lock"
                                },
                                {
                                    "hostPath": {
                                        "path": "/lib/modules",
                                        "type": ""
                                    },
                                    "name": "lib-modules"
                                }
                            ]
                        }
                    }
                }
            },
            "kind": "ControllerRevision",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                },
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "labels": {
                    "controller-revision-hash": "c994565f8",
                    "k8s-app": "kube-proxy"
                },
                "name": "kube-proxy-c994565f8",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "aeb8e360-deae-4f0c-a490-2f03c6b8c474"
                    }
                ],
                "resourceVersion": "487",
                "uid": "675c526b-aaac-4040-8f9d-7d0db3db896e"
            },
            "revision": 1
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kapp.k14s.io/disable-default-label-scoping-rules": ""
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generation": 1,
                "labels": {
                    "app": "antrea",
                    "component": "antrea-agent"
                },
                "name": "antrea-agent",
                "namespace": "kube-system",
                "resourceVersion": "960",
                "uid": "8c84cfc4-36e3-45b6-9fb9-fa9c7a148363"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "antrea",
                        "component": "antrea-agent"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "antrea",
                            "component": "antrea-agent"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config",
                                    "/etc/antrea/antrea-agent.conf",
                                    "--logtostderr=false",
                                    "--log_dir=/var/log/antrea",
                                    "--alsologtostderr",
                                    "--log_file_max_size=100",
                                    "--log_file_max_num=4",
                                    "--v=0"
                                ],
                                "command": [
                                    "antrea-agent"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-c",
                                            "container_liveness_probe agent"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "antrea-agent",
                                "ports": [
                                    {
                                        "containerPort": 10350,
                                        "hostPort": 10350,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/readyz",
                                        "port": "api",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "200m"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/antrea/antrea-agent.conf",
                                        "name": "antrea-config",
                                        "readOnly": true,
                                        "subPath": "antrea-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/run/antrea",
                                        "name": "host-var-run-antrea"
                                    },
                                    {
                                        "mountPath": "/var/run/openvswitch",
                                        "name": "host-var-run-antrea",
                                        "subPath": "openvswitch"
                                    },
                                    {
                                        "mountPath": "/var/lib/cni",
                                        "name": "host-var-run-antrea",
                                        "subPath": "cni"
                                    },
                                    {
                                        "mountPath": "/var/log/antrea",
                                        "name": "host-var-log-antrea"
                                    },
                                    {
                                        "mountPath": "/host/proc",
                                        "name": "host-proc",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/host/var/run/netns",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-var-run-netns",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/run/xtables.lock",
                                        "name": "xtables-lock"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--log_file_max_size=100",
                                    "--log_file_max_num=4"
                                ],
                                "command": [
                                    "start_ovs_netdev"
                                ],
                                "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-c",
                                            "timeout 10 container_liveness_probe ovs"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "antrea-ovs",
                                "resources": {
                                    "requests": {
                                        "cpu": "200m"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_NICE",
                                            "NET_ADMIN",
                                            "SYS_ADMIN",
                                            "IPC_LOCK"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/openvswitch",
                                        "name": "host-var-run-antrea",
                                        "subPath": "openvswitch"
                                    },
                                    {
                                        "mountPath": "/var/log/openvswitch",
                                        "name": "host-var-log-antrea",
                                        "subPath": "openvswitch"
                                    },
                                    {
                                        "mountPath": "/dev/net/tun",
                                        "name": "dev-tun"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "install_cni_kind"
                                ],
                                "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "install-cni",
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_MODULE"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/antrea/antrea-cni.conflist",
                                        "name": "antrea-config",
                                        "readOnly": true,
                                        "subPath": "antrea-cni.conflist"
                                    },
                                    {
                                        "mountPath": "/host/etc/cni/net.d",
                                        "name": "host-cni-conf"
                                    },
                                    {
                                        "mountPath": "/host/opt/cni/bin",
                                        "name": "host-cni-bin"
                                    },
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "host-lib-modules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/antrea",
                                        "name": "host-var-run-antrea"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "antrea-agent",
                        "serviceAccountName": "antrea-agent",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "antrea-config-ctb8mftc58"
                                },
                                "name": "antrea-config"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                },
                                "name": "host-cni-conf"
                            },
                            {
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                },
                                "name": "host-cni-bin"
                            },
                            {
                                "hostPath": {
                                    "path": "/proc",
                                    "type": ""
                                },
                                "name": "host-proc"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/netns",
                                    "type": ""
                                },
                                "name": "host-var-run-netns"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/antrea",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "host-var-run-antrea"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/log/antrea",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "host-var-log-antrea"
                            },
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "host-lib-modules"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                },
                                "name": "xtables-lock"
                            },
                            {
                                "hostPath": {
                                    "path": "/dev/net/tun",
                                    "type": "CharDevice"
                                },
                                "name": "dev-tun"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 2,
                "desiredNumberScheduled": 2,
                "numberAvailable": 2,
                "numberMisscheduled": 0,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "705",
                "uid": "aeb8e360-deae-4f0c-a490-2f03c6b8c474"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "projects.registry.vmware.com/tkg/kube-proxy:v1.21.2_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-proxy",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/kube-proxy",
                                        "name": "kube-proxy"
                                    },
                                    {
                                        "mountPath": "/run/xtables.lock",
                                        "name": "xtables-lock"
                                    },
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "lib-modules",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kube-proxy",
                        "serviceAccountName": "kube-proxy",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-proxy"
                                },
                                "name": "kube-proxy"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                },
                                "name": "xtables-lock"
                            },
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "lib-modules"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 2,
                "desiredNumberScheduled": 2,
                "numberAvailable": 2,
                "numberMisscheduled": 0,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kapp.k14s.io/disable-default-label-scoping-rules": ""
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generation": 1,
                "labels": {
                    "app": "antrea",
                    "component": "antrea-controller"
                },
                "name": "antrea-controller",
                "namespace": "kube-system",
                "resourceVersion": "1034",
                "uid": "0a34b529-e9de-4e5d-895b-ab605d24cd07"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "antrea",
                        "component": "antrea-controller"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "antrea",
                            "component": "antrea-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config",
                                    "/etc/antrea/antrea-controller.conf",
                                    "--logtostderr=false",
                                    "--log_dir=/var/log/antrea",
                                    "--alsologtostderr",
                                    "--log_file_max_size=100",
                                    "--log_file_max_num=4",
                                    "--v=0"
                                ],
                                "command": [
                                    "antrea-controller"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ANTREA_CONFIG_MAP_NAME",
                                        "value": "antrea-config-ctb8mftc58"
                                    }
                                ],
                                "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/livez",
                                        "port": "api",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "antrea-controller",
                                "ports": [
                                    {
                                        "containerPort": 10349,
                                        "hostPort": 10349,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/readyz",
                                        "port": "api",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "200m"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/antrea/antrea-controller.conf",
                                        "name": "antrea-config",
                                        "readOnly": true,
                                        "subPath": "antrea-controller.conf"
                                    },
                                    {
                                        "mountPath": "/var/run/antrea/antrea-controller-tls",
                                        "name": "antrea-controller-tls"
                                    },
                                    {
                                        "mountPath": "/var/log/antrea",
                                        "name": "host-var-log-antrea"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "antrea-controller",
                        "serviceAccountName": "antrea-controller",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "antrea-config-ctb8mftc58"
                                },
                                "name": "antrea-config"
                            },
                            {
                                "name": "antrea-controller-tls",
                                "secret": {
                                    "defaultMode": 256,
                                    "optional": true,
                                    "secretName": "antrea-controller-tls"
                                }
                            },
                            {
                                "hostPath": {
                                    "path": "/var/log/antrea",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "host-var-log-antrea"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:08Z",
                        "lastUpdateTime": "2021-10-13T11:47:08Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:46:40Z",
                        "lastUpdateTime": "2021-10-13T11:47:08Z",
                        "message": "ReplicaSet \"antrea-controller-86f8988c5f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "name": "coredns",
                "namespace": "kube-system",
                "resourceVersion": "1016",
                "uid": "aaa5c679-b699-4f47-9495-6e9d7b88636a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:06Z",
                        "lastUpdateTime": "2021-10-13T11:47:06Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:34Z",
                        "lastUpdateTime": "2021-10-13T11:47:06Z",
                        "message": "ReplicaSet \"coredns-8dcb5c56b\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kapp-controller.carvel.dev/version": "v0.23.0",
                    "kapp.k14s.io/change-rule": "upsert after upserting apps.kappctrl.k14s.io/kapp-controller-config",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "generation": 1,
                "name": "kapp-controller",
                "namespace": "tkg-system",
                "resourceVersion": "970",
                "uid": "efb21e81-da4d-4cfa-839f-2dd8bc6734a7"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app": "kapp-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kapp-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-packaging-global-namespace=tanzu-package-repo-global",
                                    "-concurrency=4"
                                ],
                                "env": [
                                    {
                                        "name": "KAPPCTRL_MEM_TMP_DIR",
                                        "value": "/etc/kappctrl-mem-tmp"
                                    },
                                    {
                                        "name": "KAPPCTRL_SYSTEM_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KAPPCTRL_API_PORT",
                                        "value": "10100"
                                    }
                                ],
                                "image": "projects.registry.vmware.com/tkg/kapp-controller:v0.23.0_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kapp-controller",
                                "ports": [
                                    {
                                        "containerPort": 10100,
                                        "hostPort": 10100,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "120m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "runAsGroup": 2000,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kappctrl-mem-tmp",
                                        "name": "template-fs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 3000
                        },
                        "serviceAccount": "kapp-controller-sa",
                        "serviceAccountName": "kapp-controller-sa",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/not-ready"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.cloudprovider.kubernetes.io/uninitialized",
                                "value": "true"
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "template-fs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:02Z",
                        "lastUpdateTime": "2021-10-13T11:47:02Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:46:20Z",
                        "lastUpdateTime": "2021-10-13T11:47:02Z",
                        "message": "ReplicaSet \"kapp-controller-6499b8866\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "app": "tanzu-capabilities-manager"
                },
                "name": "tanzu-capabilities-controller-manager",
                "namespace": "tkg-system",
                "resourceVersion": "1028",
                "uid": "eb35895c-a287-48f6-9230-7ab5e297c9ae"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "tanzu-capabilities-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "tanzu-capabilities-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "manager",
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "30Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "20Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tanzu-capabilities-manager-sa",
                        "serviceAccountName": "tanzu-capabilities-manager-sa",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:07Z",
                        "lastUpdateTime": "2021-10-13T11:47:07Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "lastUpdateTime": "2021-10-13T11:47:07Z",
                        "message": "ReplicaSet \"tanzu-capabilities-controller-manager-6ff97656b8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "control-plane": "controller-manager"
                },
                "name": "tkr-controller-manager",
                "namespace": "tkr-system",
                "resourceVersion": "1020",
                "uid": "13119ba2-5dc7-4327-86a5-6d3bfa8f9bff"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "control-plane": "controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "control-plane": "controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--enable-leader-election",
                                    "--bom-image-path=projects.registry.vmware.com/tkg/tkr-bom",
                                    "--bom-metadata-image-path=projects.registry.vmware.com/tkg/tkr-compatibility",
                                    "--skip-verify-registry-cert=False",
                                    "--continuous-discover-frequency=600"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "image": "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager:v1.4.0",
                                "imagePullPolicy": "Always",
                                "name": "manager",
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "20Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 10
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:47:07Z",
                        "lastUpdateTime": "2021-10-13T11:47:07Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:45:40Z",
                        "lastUpdateTime": "2021-10-13T11:47:07Z",
                        "message": "ReplicaSet \"tkr-controller-manager-6bc455b5d4\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "kapp.k14s.io/disable-default-label-scoping-rules": ""
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generation": 1,
                "labels": {
                    "app": "antrea",
                    "component": "antrea-controller",
                    "pod-template-hash": "86f8988c5f"
                },
                "name": "antrea-controller-86f8988c5f",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "antrea-controller",
                        "uid": "0a34b529-e9de-4e5d-895b-ab605d24cd07"
                    }
                ],
                "resourceVersion": "1032",
                "uid": "eb3f1b57-1f11-43e0-b256-7329f7b02172"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "antrea",
                        "component": "antrea-controller",
                        "pod-template-hash": "86f8988c5f"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "antrea",
                            "component": "antrea-controller",
                            "pod-template-hash": "86f8988c5f"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config",
                                    "/etc/antrea/antrea-controller.conf",
                                    "--logtostderr=false",
                                    "--log_dir=/var/log/antrea",
                                    "--alsologtostderr",
                                    "--log_file_max_size=100",
                                    "--log_file_max_num=4",
                                    "--v=0"
                                ],
                                "command": [
                                    "antrea-controller"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ANTREA_CONFIG_MAP_NAME",
                                        "value": "antrea-config-ctb8mftc58"
                                    }
                                ],
                                "image": "projects.registry.vmware.com/tkg/antrea/antrea-debian:v0.13.3_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/livez",
                                        "port": "api",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "antrea-controller",
                                "ports": [
                                    {
                                        "containerPort": 10349,
                                        "hostPort": 10349,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "host": "127.0.0.1",
                                        "path": "/readyz",
                                        "port": "api",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "200m"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/antrea/antrea-controller.conf",
                                        "name": "antrea-config",
                                        "readOnly": true,
                                        "subPath": "antrea-controller.conf"
                                    },
                                    {
                                        "mountPath": "/var/run/antrea/antrea-controller-tls",
                                        "name": "antrea-controller-tls"
                                    },
                                    {
                                        "mountPath": "/var/log/antrea",
                                        "name": "host-var-log-antrea"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "antrea-controller",
                        "serviceAccountName": "antrea-controller",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "antrea-config-ctb8mftc58"
                                },
                                "name": "antrea-config"
                            },
                            {
                                "name": "antrea-controller-tls",
                                "secret": {
                                    "defaultMode": 256,
                                    "optional": true,
                                    "secretName": "antrea-controller-tls"
                                }
                            },
                            {
                                "hostPath": {
                                    "path": "/var/log/antrea",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "host-var-log-antrea"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "8dcb5c56b"
                },
                "name": "coredns-8dcb5c56b",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "aaa5c679-b699-4f47-9495-6e9d7b88636a"
                    }
                ],
                "resourceVersion": "1013",
                "uid": "a68dc46a-9508-4051-9b85-5477a08da721"
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "8dcb5c56b"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "8dcb5c56b"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "projects.registry.vmware.com/tkg/coredns:v1.8.0_vmware.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "kapp-controller.carvel.dev/version": "v0.23.0",
                    "kapp.k14s.io/change-rule": "upsert after upserting apps.kappctrl.k14s.io/kapp-controller-config",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "generation": 1,
                "labels": {
                    "app": "kapp-controller",
                    "pod-template-hash": "6499b8866"
                },
                "name": "kapp-controller-6499b8866",
                "namespace": "tkg-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kapp-controller",
                        "uid": "efb21e81-da4d-4cfa-839f-2dd8bc6734a7"
                    }
                ],
                "resourceVersion": "969",
                "uid": "c93eaecc-0c01-4fe9-ba3b-8990e65dff37"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "kapp-controller",
                        "pod-template-hash": "6499b8866"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kapp-controller",
                            "pod-template-hash": "6499b8866"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-packaging-global-namespace=tanzu-package-repo-global",
                                    "-concurrency=4"
                                ],
                                "env": [
                                    {
                                        "name": "KAPPCTRL_MEM_TMP_DIR",
                                        "value": "/etc/kappctrl-mem-tmp"
                                    },
                                    {
                                        "name": "KAPPCTRL_SYSTEM_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KAPPCTRL_API_PORT",
                                        "value": "10100"
                                    }
                                ],
                                "image": "projects.registry.vmware.com/tkg/kapp-controller:v0.23.0_vmware.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kapp-controller",
                                "ports": [
                                    {
                                        "containerPort": 10100,
                                        "hostPort": 10100,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "120m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "runAsGroup": 2000,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kappctrl-mem-tmp",
                                        "name": "template-fs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 3000
                        },
                        "serviceAccount": "kapp-controller-sa",
                        "serviceAccountName": "kapp-controller-sa",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.kubernetes.io/not-ready"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node.cloudprovider.kubernetes.io/uninitialized",
                                "value": "true"
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "template-fs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "app": "tanzu-capabilities-manager",
                    "pod-template-hash": "6ff97656b8"
                },
                "name": "tanzu-capabilities-controller-manager-6ff97656b8",
                "namespace": "tkg-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "tanzu-capabilities-controller-manager",
                        "uid": "eb35895c-a287-48f6-9230-7ab5e297c9ae"
                    }
                ],
                "resourceVersion": "1027",
                "uid": "1fb95997-eb2b-40c7-a76b-151b8f163eaf"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "tanzu-capabilities-manager",
                        "pod-template-hash": "6ff97656b8"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "tanzu-capabilities-manager",
                            "pod-template-hash": "6ff97656b8"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "manager",
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "30Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "20Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tanzu-capabilities-manager-sa",
                        "serviceAccountName": "tanzu-capabilities-manager-sa",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generation": 1,
                "labels": {
                    "control-plane": "controller-manager",
                    "pod-template-hash": "6bc455b5d4"
                },
                "name": "tkr-controller-manager-6bc455b5d4",
                "namespace": "tkr-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "tkr-controller-manager",
                        "uid": "13119ba2-5dc7-4327-86a5-6d3bfa8f9bff"
                    }
                ],
                "resourceVersion": "1019",
                "uid": "473fa565-5be4-4792-9156-8a1c023c2409"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "control-plane": "controller-manager",
                        "pod-template-hash": "6bc455b5d4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "control-plane": "controller-manager",
                            "pod-template-hash": "6bc455b5d4"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--enable-leader-election",
                                    "--bom-image-path=projects.registry.vmware.com/tkg/tkr-bom",
                                    "--bom-metadata-image-path=projects.registry.vmware.com/tkg/tkr-compatibility",
                                    "--skip-verify-registry-cert=False",
                                    "--continuous-discover-frequency=600"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "image": "projects.registry.vmware.com/tkg/tanzu_core/tkr/tkr-controller-manager:v1.4.0",
                                "imagePullPolicy": "Always",
                                "name": "manager",
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "20Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 10
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "certificates.k8s.io/v1",
            "kind": "CertificateSigningRequest",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:00Z",
                "generateName": "csr-",
                "name": "csr-47t95",
                "resourceVersion": "646",
                "uid": "a5d6cb28-6a89-4b03-94ee-97e54c029ec5"
            },
            "spec": {
                "groups": [
                    "system:bootstrappers",
                    "system:bootstrappers:kubeadm:default-node-token",
                    "system:authenticated"
                ],
                "request": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQkN6Q0JzUUlCQURCUE1SVXdFd1lEVlFRS0V3eHplWE4wWlcwNmJtOWtaWE14TmpBMEJnTlZCQU1UTFhONQpjM1JsYlRwdWIyUmxPblJsYzNSamJIVnpkR1Z5TFcxa0xUQXROVGhqTmprMk5UYzRZeTE0WW5wbmJEQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTzlPSFAzYm5qcnhWeHA4RGFuZlBybFJ4NnpXMGlLTlBXNVcKSklxYldMK1J5UkNHSWVRcXA4MVlQb0w5R0RtdER5Z0tsKzFFb3ZsU3NPSzBySUFYcXZDZ0FEQUtCZ2dxaGtqTwpQUVFEQWdOSkFEQkdBaUVBN3BCVS96RHFGVW51ZzFyN0oyUThRY2tqQXZEUU5hWnJrb3NyY3ZFTlIrY0NJUUR6CjByUDhKUjExZmkraUtmRitUOCtTUGgzSnlwTFYvZ3lPR3Z3QXdqQjYwZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=",
                "signerName": "kubernetes.io/kube-apiserver-client-kubelet",
                "usages": [
                    "digital signature",
                    "key encipherment",
                    "client auth"
                ],
                "username": "system:bootstrap:7zsaih"
            },
            "status": {
                "certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlakNDQVdLZ0F3SUJBZ0lSQU1QQnRLODhJVU9sNkt2a1BlM3IvRDR3RFFZSktvWklodmNOQVFFTEJRQXcKRlRFVE1CRUdBMVVFQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TVRFd01UTXhNVFF4TURCYUZ3MHlNakV3TVRNeApNVFF4TURCYU1FOHhGVEFUQmdOVkJBb1RESE41YzNSbGJUcHViMlJsY3pFMk1EUUdBMVVFQXhNdGMzbHpkR1Z0Ck9tNXZaR1U2ZEdWemRHTnNkWE4wWlhJdGJXUXRNQzAxT0dNMk9UWTFOemhqTFhoaWVtZHNNRmt3RXdZSEtvWkkKemowQ0FRWUlLb1pJemowREFRY0RRZ0FFNzA0Yy9kdWVPdkZYR253TnFkOCt1VkhIck5iU0lvMDlibFlraXB0WQp2NUhKRUlZaDVDcW56VmcrZ3YwWU9hMFBLQXFYN1VTaStWS3c0clNzZ0JlcThLTldNRlF3RGdZRFZSMFBBUUgvCkJBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGoKQkJnd0ZvQVV5Y0l4aFZ5cHZsbTVGUFAxNjFzYzhnSVNrU2d3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUVMaQoraXF4S3MyZ29nVW1pVGhERVJCUlc2SlpWUjhYSzdhU1Qza3NxWU9MTVZQdktQVEdBUXUxRkZZWVcwQ2ZWMzQ4CmxuK0RJb2twVzBJSEJlT0Z1cnovTndqQ3FNd0NtZjFzdzlSOGVoMGhyd3JMUFNpcHA4OHRkOXZUc3JOby9jMnEKSm9Hd1h1V2pFZk9HZEhPbGxwNVd3SnFPV1piSGJpeEt5SUtUQXpQSHNCczdkY29RQURQUDl0NjFnODhGenhDOApyNVdVVmhNZ3NOUFhBSzBxTGRxYWNyc0VoT1dpMktFamY2dUluRm4yLzUwaFVBN3c5RDRSVUNlNWVJOHZ3a0J0CksvNkx4cW1Bc2ZnSFo0Z2YwNCtXOXBJUXN0czllRnVRdm1qMzdlVWRuVGVqMEtkTmF5YkZWbjhKWkI4bkpUSlMKcTVvOEVsRGZSdkI5OVM0UHd6QT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:46:00Z",
                        "lastUpdateTime": "2021-10-13T11:46:00Z",
                        "message": "Auto approving kubelet client certificate after SubjectAccessReview.",
                        "reason": "AutoApproved",
                        "status": "True",
                        "type": "Approved"
                    }
                ]
            }
        },
        {
            "agentConditions": [
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "AgentHealthy"
                },
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "ControllerConnectionUp"
                },
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "OVSDBConnectionUp"
                },
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "OpenflowConnectionUp"
                }
            ],
            "apiPort": 10350,
            "apiVersion": "clusterinformation.antrea.tanzu.vmware.com/v1beta1",
            "kind": "AntreaAgentInfo",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:56Z",
                "generation": 8,
                "name": "testcluster-control-plane-f4k77",
                "resourceVersion": "1902",
                "uid": "367eacc9-5abb-4075-991c-6f6406018f12"
            },
            "networkPolicyControllerInfo": {},
            "nodeRef": {
                "kind": "Node",
                "name": "testcluster-control-plane-f4k77"
            },
            "nodeSubnets": [
                "100.96.0.0/24"
            ],
            "ovsInfo": {
                "bridgeName": "br-int",
                "flowTable": {
                    "0": 3,
                    "10": 4,
                    "100": 2,
                    "101": 1,
                    "105": 5,
                    "106": 1,
                    "110": 4,
                    "20": 3,
                    "21": 4,
                    "29": 2,
                    "30": 2,
                    "31": 5,
                    "40": 1,
                    "41": 7,
                    "42": 11,
                    "45": 2,
                    "50": 2,
                    "60": 2,
                    "61": 1,
                    "70": 4,
                    "71": 3,
                    "80": 3,
                    "85": 2,
                    "90": 3
                },
                "version": "2.14.0"
            },
            "podRef": {
                "kind": "Pod",
                "name": "antrea-agent-bqmn5",
                "namespace": "kube-system"
            },
            "version": "v0.13.3-7ad64b3"
        },
        {
            "agentConditions": [
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "AgentHealthy"
                },
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "ControllerConnectionUp"
                },
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "OVSDBConnectionUp"
                },
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:56Z",
                    "status": "True",
                    "type": "OpenflowConnectionUp"
                }
            ],
            "apiPort": 10350,
            "apiVersion": "clusterinformation.antrea.tanzu.vmware.com/v1beta1",
            "kind": "AntreaAgentInfo",
            "localPodNum": 4,
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:56Z",
                "generation": 8,
                "name": "testcluster-md-0-58c696578c-xbzgl",
                "resourceVersion": "1903",
                "uid": "73422888-3a8c-46ba-842e-5ce332928d0c"
            },
            "networkPolicyControllerInfo": {},
            "nodeRef": {
                "kind": "Node",
                "name": "testcluster-md-0-58c696578c-xbzgl"
            },
            "nodeSubnets": [
                "100.96.1.0/24"
            ],
            "ovsInfo": {
                "bridgeName": "br-int",
                "flowTable": {
                    "0": 7,
                    "10": 12,
                    "100": 2,
                    "101": 1,
                    "105": 5,
                    "106": 9,
                    "110": 4,
                    "20": 3,
                    "21": 4,
                    "29": 2,
                    "30": 2,
                    "31": 5,
                    "40": 1,
                    "41": 7,
                    "42": 11,
                    "45": 2,
                    "50": 2,
                    "60": 2,
                    "61": 1,
                    "70": 8,
                    "71": 3,
                    "80": 7,
                    "85": 2,
                    "90": 3
                },
                "version": "2.14.0"
            },
            "podRef": {
                "kind": "Pod",
                "name": "antrea-agent-ltnjk",
                "namespace": "kube-system"
            },
            "version": "v0.13.3-7ad64b3"
        },
        {
            "apiPort": 10349,
            "apiVersion": "clusterinformation.antrea.tanzu.vmware.com/v1beta1",
            "connectedAgentNum": 2,
            "controllerConditions": [
                {
                    "lastHeartbeatTime": "2021-10-13T11:53:59Z",
                    "status": "True",
                    "type": "ControllerHealthy"
                }
            ],
            "kind": "AntreaControllerInfo",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:59Z",
                "generation": 8,
                "name": "antrea-controller",
                "resourceVersion": "1912",
                "uid": "14ed8537-d6b5-4d5b-aed6-aa8414d19381"
            },
            "networkPolicyControllerInfo": {},
            "nodeRef": {
                "kind": "Node",
                "name": "testcluster-md-0-58c696578c-xbzgl"
            },
            "podRef": {
                "kind": "Pod",
                "name": "antrea-controller-86f8988c5f-tmgvh",
                "namespace": "kube-system"
            },
            "serviceRef": {
                "kind": "Service",
                "name": "antrea"
            },
            "version": "v0.13.3-7ad64b3"
        },
        {
            "apiVersion": "coordination.k8s.io/v1",
            "kind": "Lease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:32Z",
                "name": "testcluster-control-plane-f4k77",
                "namespace": "kube-node-lease",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "testcluster-control-plane-f4k77",
                        "uid": "b7524e19-8095-4320-b100-52503b81c868"
                    }
                ],
                "resourceVersion": "2006",
                "uid": "16c4395f-b52c-4762-b969-aa46bbf7e480"
            },
            "spec": {
                "holderIdentity": "testcluster-control-plane-f4k77",
                "leaseDurationSeconds": 40,
                "renewTime": "2021-10-13T11:54:53.259278Z"
            }
        },
        {
            "apiVersion": "coordination.k8s.io/v1",
            "kind": "Lease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:16Z",
                "name": "testcluster-md-0-58c696578c-xbzgl",
                "namespace": "kube-node-lease",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "testcluster-md-0-58c696578c-xbzgl",
                        "uid": "a69b8887-6851-4545-af81-1ea9c4a6b64e"
                    }
                ],
                "resourceVersion": "1995",
                "uid": "19dce4de-81d4-403d-aae0-be68b7edab3e"
            },
            "spec": {
                "holderIdentity": "testcluster-md-0-58c696578c-xbzgl",
                "leaseDurationSeconds": 40,
                "renewTime": "2021-10-13T11:54:47.717459Z"
            }
        },
        {
            "apiVersion": "coordination.k8s.io/v1",
            "kind": "Lease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "2008",
                "uid": "28a9cb4c-8c01-4427-8803-18345ef036e6"
            },
            "spec": {
                "acquireTime": "2021-10-13T11:45:20.228077Z",
                "holderIdentity": "testcluster-control-plane-f4k77_6bb9db4e-d354-4843-b37c-2ffafcf3a885",
                "leaseDurationSeconds": 15,
                "leaseTransitions": 0,
                "renewTime": "2021-10-13T11:54:54.162961Z"
            }
        },
        {
            "apiVersion": "coordination.k8s.io/v1",
            "kind": "Lease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "2007",
                "uid": "f7d470b2-966c-48c0-80a4-c9582e6762e9"
            },
            "spec": {
                "acquireTime": "2021-10-13T11:45:20.921656Z",
                "holderIdentity": "testcluster-control-plane-f4k77_19ce91e4-533f-45d3-a4c2-564907bdc10b",
                "leaseDurationSeconds": 15,
                "leaseTransitions": 0,
                "renewTime": "2021-10-13T11:54:54.163590Z"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/addons-manager.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.4fddd918f98d7628a55f5ce2b4fc7b7e"
                },
                "name": "addons-manager.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1121",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/addons-manager.tanzu.vmware.com",
                "uid": "7042172f-6b37-4e1e-87f6-d5715809139e"
            },
            "spec": {
                "categories": [
                    "addons-lifecycle-management"
                ],
                "displayName": "tanzu-addons-manager",
                "longDescription": "This package provides TKG addons lifecycle management capabilities.",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "This package provides TKG addons lifecycle management capabilities.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/ako-operator.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.c54d24467aa03b3481fdfeabfd0a56f4"
                },
                "name": "ako-operator.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1126",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/ako-operator.tanzu.vmware.com",
                "uid": "eb233fc4-e67d-49dd-9fed-a8b9a73349c4"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "ako-operator",
                "longDescription": "NSX Advanced Load Balancer using ako-operator",
                "maintainers": [
                    {
                        "name": "Fangyuan Li"
                    },
                    {
                        "name": "Xudong Liu"
                    },
                    {
                        "name": "Xinqi Li"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "NSX Advanced Load Balancer using ako-operator",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/antrea.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.014b890467af7abdb3b5cdb94d2592a8"
                },
                "name": "antrea.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1128",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/antrea.tanzu.vmware.com",
                "uid": "844990e3-c9f0-4ac5-8c36-601f6fad6226"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "antrea",
                "longDescription": "networking and network security solution for containers",
                "maintainers": [
                    {
                        "name": "Andrew Sy Kim"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "networking and network security solution for containers",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/calico.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.e63922292dcf2923f5a23139510e41d0"
                },
                "name": "calico.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1120",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/calico.tanzu.vmware.com",
                "uid": "69e059e5-5a81-45ae-b218-9bb12a53b569"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "calico",
                "longDescription": "Calico is an open source networking and network security solution for containers, virtual machines, and native host-based workloads. Calico supports a broad range of platforms including Kubernetes, OpenShift, Docker EE, OpenStack, and bare metal services.",
                "maintainers": [
                    {
                        "name": "Andrew Sy Kim"
                    },
                    {
                        "name": "David McClure"
                    },
                    {
                        "name": "Tyler Schultz"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Networking and network security solution for containers.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/kapp-controller.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.df442ca01b27ec39347fd75041a1fea8"
                },
                "name": "kapp-controller.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1131",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/kapp-controller.tanzu.vmware.com",
                "uid": "e2f5c66d-ad52-4e9f-8e21-ee99b101a868"
            },
            "spec": {
                "categories": [
                    "package management"
                ],
                "displayName": "kapp-controller",
                "longDescription": "Kubernetes package manager for lifecycle management of packages and package repositories",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    },
                    {
                        "name": "Vijay Katam"
                    },
                    {
                        "name": "Eli Wrenn"
                    },
                    {
                        "name": "Shivaani Gupta"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Kubernetes package manager",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/load-balancer-and-ingress-service.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.6c213963e938db6f0fe361555c5d6d7e"
                },
                "name": "load-balancer-and-ingress-service.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1134",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/load-balancer-and-ingress-service.tanzu.vmware.com",
                "uid": "d58f98bc-bf63-4eed-ace4-27e4d2a9cdcd"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "load-balancer-and-ingress-service",
                "longDescription": "(vSphere only) Provides L4+L7 load balancing for applications running in clusters created by Tanzu Kubernetes Grid; used for north-south traffic. This package is installed in every cluster if NSX Advanced Load Balancer is enabled.",
                "maintainers": [
                    {
                        "name": "Fangyuan Li"
                    },
                    {
                        "name": "Xudong Liu"
                    },
                    {
                        "name": "Xinqi Li"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Provides L4+L7 load balancing for TKG clusters running on vSphere",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/metrics-server.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.6396e6dfbf35fc92b572ab0411c8a889"
                },
                "name": "metrics-server.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1129",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/metrics-server.tanzu.vmware.com",
                "uid": "6a192c67-660d-49cb-be5a-2f2faf4a8735"
            },
            "spec": {
                "categories": [
                    "observability"
                ],
                "displayName": "metrics-server",
                "longDescription": "Metrics Server is a scalable, efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Metrics Server is a scalable, efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/pinniped.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:42Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.bf7ff426c3448b59ba0ac7db631b2436"
                },
                "name": "pinniped.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1138",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/pinniped.tanzu.vmware.com",
                "uid": "a06a9a96-7f80-4343-8953-05604cd3e1d7"
            },
            "spec": {
                "categories": [
                    "identity"
                ],
                "displayName": "pinniped",
                "longDescription": "Pinniped provides identity services to Kubernetes.",
                "maintainers": [
                    {
                        "name": "Andrew Keesler"
                    },
                    {
                        "name": "Ben Petersen"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Pinniped provides identity services to Kubernetes.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/vsphere-cpi.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:42Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.da82c6a45b9c251f427282684373ff55"
                },
                "name": "vsphere-cpi.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1140",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/vsphere-cpi.tanzu.vmware.com",
                "uid": "6354812d-2a3a-4c85-82ff-95977f405a64"
            },
            "spec": {
                "categories": [
                    "cloud provider interface"
                ],
                "displayName": "vsphere-cpi",
                "longDescription": "The Cluster API brings declarative, Kubernetes-style APIs to cluster creation, configuration and management. Cluster API Provider for vSphere is a concrete implementation of Cluster API for vSphere.",
                "maintainers": [
                    {
                        "name": "Andrew Sy Kim"
                    },
                    {
                        "name": "Lucheng Bao"
                    },
                    {
                        "name": "Nicole Han"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "The Cluster API brings declarative, Kubernetes-style APIs to cluster creation, configuration and management. Cluster API Provider for vSphere is a concrete implementation of Cluster API for vSphere.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "PackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/vsphere-csi.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.5bb2a6435824df5a66f93e84c5b78d9b"
                },
                "name": "vsphere-csi.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1124",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packagemetadatas/vsphere-csi.tanzu.vmware.com",
                "uid": "0bb3312f-f665-4377-a624-fb0ba35d964a"
            },
            "spec": {
                "categories": [
                    "container storage interface"
                ],
                "displayName": "vsphere-csi",
                "longDescription": "vSphere CSI provider",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    },
                    {
                        "name": "Vijay Katam"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "vSphere CSI provider",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/addons-manager.tanzu.vmware.com.1.4.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7\n  URL: projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.1588b9106d1a65d48ff580a47a80d59f"
                },
                "name": "addons-manager.tanzu.vmware.com.1.4.0+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1118",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/addons-manager.tanzu.vmware.com.1.4.0+vmware.1-tkg.1",
                "uid": "d68c8d17-2c1f-4c68-85b6-af05e4dc07aa"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "addons-manager.tanzu.vmware.com",
                "releaseNotes": "addons-manager 1.4.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "addons-manager.tanzu.vmware.com.1.4.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.4.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/ako-operator.tanzu.vmware.com.1.4.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250\n  URL: projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.769005866ca1cdb44ba0ff9af52b7bce"
                },
                "name": "ako-operator.tanzu.vmware.com.1.4.0+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1125",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/ako-operator.tanzu.vmware.com.1.4.0+vmware.1-tkg.1",
                "uid": "4570f15d-76d1-4765-bbe4-589e983a11c5"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "ako-operator.tanzu.vmware.com",
                "releaseNotes": "ako-operator 1.4.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "ako-operator.tanzu.vmware.com.1.4.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.4.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/antrea.tanzu.vmware.com.0.13.3+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f\n  URL: projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.deace6d6f5d0d2e6e2c676919c3ca513"
                },
                "name": "antrea.tanzu.vmware.com.0.13.3+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1127",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/antrea.tanzu.vmware.com.0.13.3+vmware.1-tkg.1",
                "uid": "dd3e02e2-b492-47de-9a40-12365c1ef99e"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "antrea.tanzu.vmware.com",
                "releaseNotes": "antrea 0.13.3 https://github.com/antrea-io/antrea/releases/tag/v0.13.3",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "antrea.tanzu.vmware.com.0.13.3+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.13.3+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/calico.tanzu.vmware.com.3.11.3+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11\n  URL: projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.3d374f1a0dd68334ecba5f6e2a4a1715"
                },
                "name": "calico.tanzu.vmware.com.3.11.3+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1122",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/calico.tanzu.vmware.com.3.11.3+vmware.1-tkg.1",
                "uid": "b203deb1-050d-4969-8e81-e5ca518f2189"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "calico.tanzu.vmware.com",
                "releaseNotes": "calico 3.11.3 https://docs.projectcalico.org/archive/v3.11/release-notes/",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "calico.tanzu.vmware.com.3.11.3+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "3.11.3+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/kapp-controller.tanzu.vmware.com.0.23.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300\n  URL: projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.ea38f2511a9b2ba73e003fb50f5c69a7"
                },
                "name": "kapp-controller.tanzu.vmware.com.0.23.0+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1130",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/kapp-controller.tanzu.vmware.com.0.23.0+vmware.1-tkg.1",
                "uid": "e33cfe16-6c1c-465a-b313-4b8887b397fd"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "kapp-controller.tanzu.vmware.com",
                "releaseNotes": "kapp-controller 0.23.0 https://github.com/vmware-tanzu/carvel-kapp-controller",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "kapp-controller.tanzu.vmware.com.0.23.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.23.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/load-balancer-and-ingress-service.tanzu.vmware.com.1.4.3+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d\n  URL: projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.cdc77694c1ecfe57429ed8fa8b6cdf72"
                },
                "name": "load-balancer-and-ingress-service.tanzu.vmware.com.1.4.3+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1133",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/load-balancer-and-ingress-service.tanzu.vmware.com.1.4.3+vmware.1-tkg.1",
                "uid": "afdcfd99-dd34-45ce-9063-2a23fcfc1802"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "load-balancer-and-ingress-service.tanzu.vmware.com",
                "releaseNotes": "load-balancer-and-ingress-service 1.4.3",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "load-balancer-and-ingress-service.tanzu.vmware.com.1.4.3+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.4.3+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/metrics-server.tanzu.vmware.com.0.4.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae\n  URL: projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.3eacbb72bacdfc35550f8896f4eb031a"
                },
                "name": "metrics-server.tanzu.vmware.com.0.4.0+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1135",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/metrics-server.tanzu.vmware.com.0.4.0+vmware.1-tkg.1",
                "uid": "9e210582-f8a5-466d-a94a-7308f006c47f"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "metrics-server.tanzu.vmware.com",
                "releaseNotes": "metrics-server 0.4.0 https://github.com/kubernetes-sigs/metrics-server/releases/tag/v0.4.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "metrics-server.tanzu.vmware.com.0.4.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.4.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/pinniped.tanzu.vmware.com.0.4.4+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5\n  URL: projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.25d92210adfb79c66703ffcd5d7ae2ab"
                },
                "name": "pinniped.tanzu.vmware.com.0.4.4+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1137",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/pinniped.tanzu.vmware.com.0.4.4+vmware.1-tkg.1",
                "uid": "8deb9201-2732-4058-9ce7-7457e474fb1d"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "pinniped.tanzu.vmware.com",
                "releaseNotes": "pinniped 0.4.4 https://github.com/vmware-tanzu/pinniped/releases/tag/v0.4.4",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        "kbld-config.yaml",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "pinniped.tanzu.vmware.com.0.4.4+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.4.4+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/vsphere-cpi.tanzu.vmware.com.1.21.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2\n  URL: projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.d151d0123ccddd3468f2aba18eb73942"
                },
                "name": "vsphere-cpi.tanzu.vmware.com.1.21.0+vmware.1-tkg.1",
                "namespace": "tkg-system",
                "resourceVersion": "1136",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/vsphere-cpi.tanzu.vmware.com.1.21.0+vmware.1-tkg.1",
                "uid": "9518f016-d9a5-4806-8744-d83ffeee9949"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "vsphere-cpi.tanzu.vmware.com",
                "releaseNotes": "vsphere-cpi 1.21.0 https://github.com/kubernetes/cloud-provider-vsphere",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "vsphere-cpi.tanzu.vmware.com.1.21.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.21.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "data.packaging.carvel.dev/v1alpha1",
            "kind": "Package",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/vsphere-csi.tanzu.vmware.com.2.3.0+vmware.1-tkg.2;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd\n  URL: projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd\n"
                },
                "creationTimestamp": "2021-10-13T11:47:42Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.347d2ea53078779a305b0bd13919f4e8"
                },
                "name": "vsphere-csi.tanzu.vmware.com.2.3.0+vmware.1-tkg.2",
                "namespace": "tkg-system",
                "resourceVersion": "1139",
                "selfLink": "/apis/data.packaging.carvel.dev/v1alpha1/namespaces/tkg-system/packages/vsphere-csi.tanzu.vmware.com.2.3.0+vmware.1-tkg.2",
                "uid": "08351d2a-abf5-4a81-85a3-632056504f36"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "vsphere-csi.tanzu.vmware.com",
                "releaseNotes": "vsphere-csi 2.3.0 https://github.com/kubernetes-sigs/vsphere-csi-driver/releases/tag/v2.3.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "vsphere-csi.tanzu.vmware.com.2.3.0+vmware.1-tkg.2 values schema"
                    }
                },
                "version": "2.3.0+vmware.1-tkg.2"
            }
        },
        {
            "addressType": "IPv4",
            "apiVersion": "discovery.k8s.io/v1",
            "endpoints": [
                {
                    "addresses": [
                        "172.18.0.4"
                    ],
                    "conditions": {
                        "ready": true
                    }
                }
            ],
            "kind": "EndpointSlice",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "generation": 1,
                "labels": {
                    "kubernetes.io/service-name": "kubernetes"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "200",
                "uid": "6945cae9-a846-48b5-b261-ce45167540b7"
            },
            "ports": [
                {
                    "name": "https",
                    "port": 6443,
                    "protocol": "TCP"
                }
            ]
        },
        {
            "addressType": "IPv4",
            "apiVersion": "discovery.k8s.io/v1",
            "endpoints": [
                {
                    "addresses": [
                        "172.18.0.5"
                    ],
                    "conditions": {
                        "ready": true
                    },
                    "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                    "targetRef": {
                        "kind": "Pod",
                        "name": "antrea-controller-86f8988c5f-tmgvh",
                        "namespace": "kube-system",
                        "resourceVersion": "1030",
                        "uid": "5728c88a-1b2e-40ab-bb30-2ce7f98104c5"
                    }
                }
            ],
            "kind": "EndpointSlice",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2021-10-13T11:47:08Z"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "generateName": "antrea-",
                "generation": 3,
                "labels": {
                    "app": "antrea",
                    "endpointslice.kubernetes.io/managed-by": "endpointslice-controller.k8s.io",
                    "kubernetes.io/service-name": "antrea"
                },
                "name": "antrea-ggv7g",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Service",
                        "name": "antrea",
                        "uid": "33bd3979-401d-42d0-8db3-3695afd86bee"
                    }
                ],
                "resourceVersion": "1031",
                "uid": "b4bf9a29-f0ac-4711-996a-febbe89215a6"
            },
            "ports": [
                {
                    "name": "",
                    "port": 10349,
                    "protocol": "TCP"
                }
            ]
        },
        {
            "addressType": "IPv4",
            "apiVersion": "discovery.k8s.io/v1",
            "endpoints": [
                {
                    "addresses": [
                        "100.96.1.4"
                    ],
                    "conditions": {
                        "ready": true
                    },
                    "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                    "targetRef": {
                        "kind": "Pod",
                        "name": "coredns-8dcb5c56b-jcd79",
                        "namespace": "kube-system",
                        "resourceVersion": "1003",
                        "uid": "fc9c15bd-f721-41a5-bef8-1e15b85ec728"
                    }
                },
                {
                    "addresses": [
                        "100.96.1.5"
                    ],
                    "conditions": {
                        "ready": true
                    },
                    "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                    "targetRef": {
                        "kind": "Pod",
                        "name": "coredns-8dcb5c56b-mmxrc",
                        "namespace": "kube-system",
                        "resourceVersion": "1012",
                        "uid": "fadd038f-a1f1-434a-92c6-65494f97de80"
                    }
                }
            ],
            "kind": "EndpointSlice",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2021-10-13T11:47:05Z"
                },
                "creationTimestamp": "2021-10-13T11:45:34Z",
                "generateName": "kube-dns-",
                "generation": 5,
                "labels": {
                    "endpointslice.kubernetes.io/managed-by": "endpointslice-controller.k8s.io",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS",
                    "kubernetes.io/service-name": "kube-dns"
                },
                "name": "kube-dns-gg5vx",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Service",
                        "name": "kube-dns",
                        "uid": "05ef5dda-69fa-4e01-8802-8876001ad7c7"
                    }
                ],
                "resourceVersion": "1014",
                "uid": "69751166-c837-4a36-bb82-d98fa44c7f25"
            },
            "ports": [
                {
                    "name": "metrics",
                    "port": 9153,
                    "protocol": "TCP"
                },
                {
                    "name": "dns",
                    "port": 53,
                    "protocol": "UDP"
                },
                {
                    "name": "dns-tcp",
                    "port": 53,
                    "protocol": "TCP"
                }
            ]
        },
        {
            "addressType": "IPv4",
            "apiVersion": "discovery.k8s.io/v1",
            "endpoints": [
                {
                    "addresses": [
                        "172.18.0.5"
                    ],
                    "conditions": {
                        "ready": true
                    },
                    "nodeName": "testcluster-md-0-58c696578c-xbzgl",
                    "targetRef": {
                        "kind": "Pod",
                        "name": "kapp-controller-6499b8866-2fcn8",
                        "namespace": "tkg-system",
                        "resourceVersion": "966",
                        "uid": "790f0162-085f-4924-aa1b-175c0332a942"
                    }
                }
            ],
            "kind": "EndpointSlice",
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2021-10-13T11:47:02Z"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "generateName": "packaging-api-",
                "generation": 3,
                "labels": {
                    "endpointslice.kubernetes.io/managed-by": "endpointslice-controller.k8s.io",
                    "kubernetes.io/service-name": "packaging-api"
                },
                "name": "packaging-api-dtjhp",
                "namespace": "tkg-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Service",
                        "name": "packaging-api",
                        "uid": "9b8274a9-b006-4d9d-8324-ac23568de051"
                    }
                ],
                "resourceVersion": "968",
                "uid": "6df3f937-0f22-48e7-8d59-56a5c0fef6ea"
            },
            "ports": [
                {
                    "name": "",
                    "port": 10100,
                    "protocol": "TCP"
                }
            ]
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "catch-all",
                "resourceVersion": "72",
                "uid": "bf1bd6b9-a7d8-4bd4-806f-097401f32104"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByUser"
                },
                "matchingPrecedence": 10000,
                "priorityLevelConfiguration": {
                    "name": "catch-all"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": "system:unauthenticated"
                                },
                                "kind": "Group"
                            },
                            {
                                "group": {
                                    "name": "system:authenticated"
                                },
                                "kind": "Group"
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"catch-all\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "exempt",
                "resourceVersion": "56",
                "uid": "c274b635-b1d3-49dd-9866-e8cdb84d11a8"
            },
            "spec": {
                "matchingPrecedence": 1,
                "priorityLevelConfiguration": {
                    "name": "exempt"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": "system:masters"
                                },
                                "kind": "Group"
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"exempt\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "global-default",
                "resourceVersion": "45",
                "uid": "3f70ec78-2ac7-4dcc-9f47-3991cf77b75d"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByUser"
                },
                "matchingPrecedence": 9900,
                "priorityLevelConfiguration": {
                    "name": "global-default"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": "system:unauthenticated"
                                },
                                "kind": "Group"
                            },
                            {
                                "group": {
                                    "name": "system:authenticated"
                                },
                                "kind": "Group"
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"global-default\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "kube-controller-manager",
                "resourceVersion": "32",
                "uid": "6bfb6480-5ec3-4604-b642-6597c75ce439"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByNamespace"
                },
                "matchingPrecedence": 800,
                "priorityLevelConfiguration": {
                    "name": "workload-high"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "kind": "User",
                                "user": {
                                    "name": "system:kube-controller-manager"
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"workload-high\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "kube-scheduler",
                "resourceVersion": "36",
                "uid": "b974d036-85c0-4b6c-9736-239782b24af1"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByNamespace"
                },
                "matchingPrecedence": 800,
                "priorityLevelConfiguration": {
                    "name": "workload-high"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "kind": "User",
                                "user": {
                                    "name": "system:kube-scheduler"
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"workload-high\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "kube-system-service-accounts",
                "resourceVersion": "44",
                "uid": "76bc696f-464c-4e6a-9b48-14632898698a"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByNamespace"
                },
                "matchingPrecedence": 900,
                "priorityLevelConfiguration": {
                    "name": "workload-high"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "serviceAccount": {
                                    "name": "*",
                                    "namespace": "kube-system"
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"workload-high\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "probes",
                "resourceVersion": "60",
                "uid": "a1518cc1-c938-489a-b231-2c8004c9a345"
            },
            "spec": {
                "matchingPrecedence": 2,
                "priorityLevelConfiguration": {
                    "name": "exempt"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "/healthz",
                                    "/readyz",
                                    "/livez"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": "system:unauthenticated"
                                },
                                "kind": "Group"
                            },
                            {
                                "group": {
                                    "name": "system:authenticated"
                                },
                                "kind": "Group"
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"exempt\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "service-accounts",
                "resourceVersion": "71",
                "uid": "a237f2d5-62a3-47d1-b38a-6ba29513eba9"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByUser"
                },
                "matchingPrecedence": 9000,
                "priorityLevelConfiguration": {
                    "name": "workload-low"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": "system:serviceaccounts"
                                },
                                "kind": "Group"
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"workload-low\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "system-leader-election",
                "resourceVersion": "25",
                "uid": "0e9fd768-f3d4-410c-ba5f-8ac6cfbda5d2"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByUser"
                },
                "matchingPrecedence": 100,
                "priorityLevelConfiguration": {
                    "name": "leader-election"
                },
                "rules": [
                    {
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "namespaces": [
                                    "kube-system"
                                ],
                                "resources": [
                                    "endpoints",
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "create",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "create",
                                    "update"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "kind": "User",
                                "user": {
                                    "name": "system:kube-controller-manager"
                                }
                            },
                            {
                                "kind": "User",
                                "user": {
                                    "name": "system:kube-scheduler"
                                }
                            },
                            {
                                "kind": "ServiceAccount",
                                "serviceAccount": {
                                    "name": "*",
                                    "namespace": "kube-system"
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"leader-election\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "system-nodes",
                "resourceVersion": "73",
                "uid": "bf10f04a-e7ea-4f17-9628-e1cac4c33468"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByUser"
                },
                "matchingPrecedence": 500,
                "priorityLevelConfiguration": {
                    "name": "system"
                },
                "rules": [
                    {
                        "nonResourceRules": [
                            {
                                "nonResourceURLs": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    "*"
                                ],
                                "clusterScope": true,
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "*"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "group": {
                                    "name": "system:nodes"
                                },
                                "kind": "Group"
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"system\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "FlowSchema",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "workload-leader-election",
                "resourceVersion": "66",
                "uid": "53eedd8d-7074-4269-9d7f-6dac3bc82b4b"
            },
            "spec": {
                "distinguisherMethod": {
                    "type": "ByUser"
                },
                "matchingPrecedence": 200,
                "priorityLevelConfiguration": {
                    "name": "leader-election"
                },
                "rules": [
                    {
                        "resourceRules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "endpoints",
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "create",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "coordination.k8s.io"
                                ],
                                "namespaces": [
                                    "*"
                                ],
                                "resources": [
                                    "leases"
                                ],
                                "verbs": [
                                    "get",
                                    "create",
                                    "update"
                                ]
                            }
                        ],
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "serviceAccount": {
                                    "name": "*",
                                    "namespace": "kube-system"
                                }
                            }
                        ]
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:45:16Z",
                        "message": "This FlowSchema references the PriorityLevelConfiguration object named \"leader-election\" and it exists",
                        "reason": "Found",
                        "status": "False",
                        "type": "Dangling"
                    }
                ]
            }
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "catch-all",
                "resourceVersion": "23",
                "uid": "7b656bda-3860-49ed-80b6-f08907a0c142"
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 5,
                    "limitResponse": {
                        "type": "Reject"
                    }
                },
                "type": "Limited"
            },
            "status": {}
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "exempt",
                "resourceVersion": "24",
                "uid": "747cac79-b675-4e45-8a5d-08ce921e181b"
            },
            "spec": {
                "type": "Exempt"
            },
            "status": {}
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "global-default",
                "resourceVersion": "20",
                "uid": "9c574d8a-94e6-446f-9627-a8ef0a4cfef1"
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 20,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 6,
                            "queueLengthLimit": 50,
                            "queues": 128
                        },
                        "type": "Queue"
                    }
                },
                "type": "Limited"
            },
            "status": {}
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "leader-election",
                "resourceVersion": "16",
                "uid": "b0ae4f36-e7ad-44a9-88ea-9a326856488d"
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 10,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 4,
                            "queueLengthLimit": 50,
                            "queues": 16
                        },
                        "type": "Queue"
                    }
                },
                "type": "Limited"
            },
            "status": {}
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "system",
                "resourceVersion": "14",
                "uid": "5bfd85fe-755f-4be2-abc6-7d5e61751842"
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 30,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 6,
                            "queueLengthLimit": 50,
                            "queues": 64
                        },
                        "type": "Queue"
                    }
                },
                "type": "Limited"
            },
            "status": {}
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "workload-high",
                "resourceVersion": "17",
                "uid": "9c1ffcd7-ae6a-4075-9919-0cf752c6e295"
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 40,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 6,
                            "queueLengthLimit": 50,
                            "queues": 128
                        },
                        "type": "Queue"
                    }
                },
                "type": "Limited"
            },
            "status": {}
        },
        {
            "apiVersion": "flowcontrol.apiserver.k8s.io/v1beta1",
            "kind": "PriorityLevelConfiguration",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:16Z",
                "generation": 1,
                "name": "workload-low",
                "resourceVersion": "19",
                "uid": "6669a54c-090b-48dc-a19b-6ce58c000f6b"
            },
            "spec": {
                "limited": {
                    "assuredConcurrencyShares": 100,
                    "limitResponse": {
                        "queuing": {
                            "handSize": 6,
                            "queueLengthLimit": 50,
                            "queues": 128
                        },
                        "type": "Queue"
                    }
                },
                "type": "Limited"
            },
            "status": {}
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/addons-manager.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.4fddd918f98d7628a55f5ce2b4fc7b7e"
                },
                "name": "addons-manager.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1121",
                "uid": "7042172f-6b37-4e1e-87f6-d5715809139e"
            },
            "spec": {
                "categories": [
                    "addons-lifecycle-management"
                ],
                "displayName": "tanzu-addons-manager",
                "longDescription": "This package provides TKG addons lifecycle management capabilities.",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "This package provides TKG addons lifecycle management capabilities.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/ako-operator.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.c54d24467aa03b3481fdfeabfd0a56f4"
                },
                "name": "ako-operator.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1126",
                "uid": "eb233fc4-e67d-49dd-9fed-a8b9a73349c4"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "ako-operator",
                "longDescription": "NSX Advanced Load Balancer using ako-operator",
                "maintainers": [
                    {
                        "name": "Fangyuan Li"
                    },
                    {
                        "name": "Xudong Liu"
                    },
                    {
                        "name": "Xinqi Li"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "NSX Advanced Load Balancer using ako-operator",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/antrea.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.014b890467af7abdb3b5cdb94d2592a8"
                },
                "name": "antrea.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1128",
                "uid": "844990e3-c9f0-4ac5-8c36-601f6fad6226"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "antrea",
                "longDescription": "networking and network security solution for containers",
                "maintainers": [
                    {
                        "name": "Andrew Sy Kim"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "networking and network security solution for containers",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/calico.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.e63922292dcf2923f5a23139510e41d0"
                },
                "name": "calico.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1120",
                "uid": "69e059e5-5a81-45ae-b218-9bb12a53b569"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "calico",
                "longDescription": "Calico is an open source networking and network security solution for containers, virtual machines, and native host-based workloads. Calico supports a broad range of platforms including Kubernetes, OpenShift, Docker EE, OpenStack, and bare metal services.",
                "maintainers": [
                    {
                        "name": "Andrew Sy Kim"
                    },
                    {
                        "name": "David McClure"
                    },
                    {
                        "name": "Tyler Schultz"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Networking and network security solution for containers.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/kapp-controller.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.df442ca01b27ec39347fd75041a1fea8"
                },
                "name": "kapp-controller.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1131",
                "uid": "e2f5c66d-ad52-4e9f-8e21-ee99b101a868"
            },
            "spec": {
                "categories": [
                    "package management"
                ],
                "displayName": "kapp-controller",
                "longDescription": "Kubernetes package manager for lifecycle management of packages and package repositories",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    },
                    {
                        "name": "Vijay Katam"
                    },
                    {
                        "name": "Eli Wrenn"
                    },
                    {
                        "name": "Shivaani Gupta"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Kubernetes package manager",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/load-balancer-and-ingress-service.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.6c213963e938db6f0fe361555c5d6d7e"
                },
                "name": "load-balancer-and-ingress-service.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1134",
                "uid": "d58f98bc-bf63-4eed-ace4-27e4d2a9cdcd"
            },
            "spec": {
                "categories": [
                    "networking"
                ],
                "displayName": "load-balancer-and-ingress-service",
                "longDescription": "(vSphere only) Provides L4+L7 load balancing for applications running in clusters created by Tanzu Kubernetes Grid; used for north-south traffic. This package is installed in every cluster if NSX Advanced Load Balancer is enabled.",
                "maintainers": [
                    {
                        "name": "Fangyuan Li"
                    },
                    {
                        "name": "Xudong Liu"
                    },
                    {
                        "name": "Xinqi Li"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Provides L4+L7 load balancing for TKG clusters running on vSphere",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/metrics-server.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.6396e6dfbf35fc92b572ab0411c8a889"
                },
                "name": "metrics-server.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1129",
                "uid": "6a192c67-660d-49cb-be5a-2f2faf4a8735"
            },
            "spec": {
                "categories": [
                    "observability"
                ],
                "displayName": "metrics-server",
                "longDescription": "Metrics Server is a scalable, efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Metrics Server is a scalable, efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/pinniped.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:42Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.bf7ff426c3448b59ba0ac7db631b2436"
                },
                "name": "pinniped.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1138",
                "uid": "a06a9a96-7f80-4343-8953-05604cd3e1d7"
            },
            "spec": {
                "categories": [
                    "identity"
                ],
                "displayName": "pinniped",
                "longDescription": "Pinniped provides identity services to Kubernetes.",
                "maintainers": [
                    {
                        "name": "Andrew Keesler"
                    },
                    {
                        "name": "Ben Petersen"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "Pinniped provides identity services to Kubernetes.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/vsphere-cpi.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:42Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.da82c6a45b9c251f427282684373ff55"
                },
                "name": "vsphere-cpi.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1140",
                "uid": "6354812d-2a3a-4c85-82ff-95977f405a64"
            },
            "spec": {
                "categories": [
                    "cloud provider interface"
                ],
                "displayName": "vsphere-cpi",
                "longDescription": "The Cluster API brings declarative, Kubernetes-style APIs to cluster creation, configuration and management. Cluster API Provider for vSphere is a concrete implementation of Cluster API for vSphere.",
                "maintainers": [
                    {
                        "name": "Andrew Sy Kim"
                    },
                    {
                        "name": "Lucheng Bao"
                    },
                    {
                        "name": "Nicole Han"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "The Cluster API brings declarative, Kubernetes-style APIs to cluster creation, configuration and management. Cluster API Provider for vSphere is a concrete implementation of Cluster API for vSphere.",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackageMetadata",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/PackageMetadata/vsphere-csi.tanzu.vmware.com;data.packaging.carvel.dev/v1alpha1"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.5bb2a6435824df5a66f93e84c5b78d9b"
                },
                "name": "vsphere-csi.tanzu.vmware.com",
                "namespace": "tkg-system",
                "resourceVersion": "1124",
                "uid": "0bb3312f-f665-4377-a624-fb0ba35d964a"
            },
            "spec": {
                "categories": [
                    "container storage interface"
                ],
                "displayName": "vsphere-csi",
                "longDescription": "vSphere CSI provider",
                "maintainers": [
                    {
                        "name": "Lucheng Bao"
                    },
                    {
                        "name": "Vijay Katam"
                    }
                ],
                "providerName": "VMware",
                "shortDescription": "vSphere CSI provider",
                "supportDescription": "Support provided by VMware for deployment on TKG 1.4+ clusters. Best-effort support for deployment on any conformant Kubernetes cluster. Contact support by opening a support request via VMware Cloud Services or my.vmware.com."
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/addons-manager.tanzu.vmware.com.1.4.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7\n  URL: projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.1588b9106d1a65d48ff580a47a80d59f"
                },
                "name": "c5i68rreecmmqobec5jmasheehgmsujl5pr6qtr1e9iisorfdkn32bhk5oo2mtjdetgn4p9e64mn8qr75oog",
                "namespace": "tkg-system",
                "resourceVersion": "1118",
                "uid": "d68c8d17-2c1f-4c68-85b6-af05e4dc07aa"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "addons-manager.tanzu.vmware.com",
                "releaseNotes": "addons-manager 1.4.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "addons-manager.tanzu.vmware.com.1.4.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.4.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/ako-operator.tanzu.vmware.com.1.4.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250\n  URL: projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.769005866ca1cdb44ba0ff9af52b7bce"
                },
                "name": "c5lmubbfe1in4obkdtp2st31dpt7abjmdlrm2sj55phmur9e64n38bhg5dr6qtr1e9iisc9dehlmebhh",
                "namespace": "tkg-system",
                "resourceVersion": "1125",
                "uid": "4570f15d-76d1-4765-bbe4-589e983a11c5"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "ako-operator.tanzu.vmware.com",
                "releaseNotes": "ako-operator 1.4.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "ako-operator.tanzu.vmware.com.1.4.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.4.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/antrea.tanzu.vmware.com.0.13.3+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f\n  URL: projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.deace6d6f5d0d2e6e2c676919c3ca513"
                },
                "name": "c5n78sj5c4n78obef9qistjdetgn4p9ecdnmqbhg5ooj6bhj5dr6qtr1e9iisc9dehlmebhh",
                "namespace": "tkg-system",
                "resourceVersion": "1127",
                "uid": "dd3e02e2-b492-47de-9a40-12365c1ef99e"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "antrea.tanzu.vmware.com",
                "releaseNotes": "antrea 0.13.3 https://github.com/antrea-io/antrea/releases/tag/v0.13.3",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "antrea.tanzu.vmware.com.0.13.3+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.13.3+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/calico.tanzu.vmware.com.3.11.3+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11\n  URL: projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.3d374f1a0dd68334ecba5f6e2a4a1715"
                },
                "name": "cdgmoqb3dsn78obef9qistjdetgn4p9ecdnmqbhj5ooj2bhj5dr6qtr1e9iisc9dehlmebhh",
                "namespace": "tkg-system",
                "resourceVersion": "1122",
                "uid": "b203deb1-050d-4969-8e81-e5ca518f2189"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "calico.tanzu.vmware.com",
                "releaseNotes": "calico 3.11.3 https://docs.projectcalico.org/archive/v3.11/release-notes/",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "calico.tanzu.vmware.com.3.11.3+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "3.11.3+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/kapp-controller.tanzu.vmware.com.0.23.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300\n  URL: projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.ea38f2511a9b2ba73e003fb50f5c69a7"
                },
                "name": "ddgn0s1dcdnmst3idtm6opbi5pq62rjqekn7crbnc5p6abj3dtmisc1e68pisc1bepmneobickn32bbkddjisc8",
                "namespace": "tkg-system",
                "resourceVersion": "1130",
                "uid": "e33cfe16-6c1c-465a-b313-4b8887b397fd"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "kapp-controller.tanzu.vmware.com",
                "releaseNotes": "kapp-controller 0.23.0 https://github.com/vmware-tanzu/carvel-kapp-controller",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "kapp-controller.tanzu.vmware.com.0.23.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.23.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/load-balancer-and-ingress-service.tanzu.vmware.com.1.4.3+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d\n  URL: projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.cdc77694c1ecfe57429ed8fa8b6cdf72"
                },
                "name": "dhnm2p1dc9gmoobecdin4bb1dpi2qqbectp6asrj5lpmasjmd5hmabjkc5n7kt9eepmneobickn66rrd5ooisd1e6clncrbnc5p6abhh5lq6mppe64",
                "namespace": "tkg-system",
                "resourceVersion": "1133",
                "uid": "afdcfd99-dd34-45ce-9063-2a23fcfc1802"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "load-balancer-and-ingress-service.tanzu.vmware.com",
                "releaseNotes": "load-balancer-and-ingress-service 1.4.3",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "load-balancer-and-ingress-service.tanzu.vmware.com.1.4.3+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.4.3+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/metrics-server.tanzu.vmware.com.0.4.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae\n  URL: projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.3eacbb72bacdfc35550f8896f4eb031a"
                },
                "name": "dlin8sj9cdpiqsr5e9r6asheehgmsujl5pr6qtr1e9iisorfdkn30bhk5oo2mtjdetgn4p9e64mn8qr75oog",
                "namespace": "tkg-system",
                "resourceVersion": "1135",
                "uid": "9e210582-f8a5-466d-a94a-7308f006c47f"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "metrics-server.tanzu.vmware.com",
                "releaseNotes": "metrics-server 0.4.0 https://github.com/kubernetes-sigs/metrics-server/releases/tag/v0.4.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "metrics-server.tanzu.vmware.com.0.4.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.4.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/pinniped.tanzu.vmware.com.0.4.4+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5\n  URL: projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.25d92210adfb79c66703ffcd5d7ae2ab"
                },
                "name": "e1kmsrj9e1im8bjkc5n7kt9eepmneobickn66rrd5oo2sd1e6glncrbnc5p6abhh5lq6mppe64",
                "namespace": "tkg-system",
                "resourceVersion": "1137",
                "uid": "8deb9201-2732-4058-9ce7-7457e474fb1d"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "pinniped.tanzu.vmware.com",
                "releaseNotes": "pinniped 0.4.4 https://github.com/vmware-tanzu/pinniped/releases/tag/v0.4.4",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        "kbld-config.yaml",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "pinniped.tanzu.vmware.com.0.4.4+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "0.4.4+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/vsphere-cpi.tanzu.vmware.com.1.21.0+vmware.1-tkg.1;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2\n  URL: projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2\n"
                },
                "creationTimestamp": "2021-10-13T11:47:41Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.d151d0123ccddd3468f2aba18eb73942"
                },
                "name": "eppn0q35e9iiqorgd4n78obef9qistjdetgn4p9ecdnmqbhh5op32bhg5dr6qtr1e9iisc9dehlmebhh",
                "namespace": "tkg-system",
                "resourceVersion": "1136",
                "uid": "9518f016-d9a5-4806-8744-d83ffeee9949"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "vsphere-cpi.tanzu.vmware.com",
                "releaseNotes": "vsphere-cpi 1.21.0 https://github.com/kubernetes/cloud-provider-vsphere",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "vsphere-cpi.tanzu.vmware.com.1.21.0+vmware.1-tkg.1 values schema"
                    }
                },
                "version": "1.21.0+vmware.1-tkg.1"
            }
        },
        {
            "apiVersion": "internal.packaging.carvel.dev/v1alpha1",
            "kind": "InternalPackage",
            "metadata": {
                "annotations": {
                    "kapp.k14s.io/disable-original": "",
                    "kapp.k14s.io/disable-wait": "",
                    "kapp.k14s.io/identity": "v1;tkg-system/data.packaging.carvel.dev/Package/vsphere-csi.tanzu.vmware.com.2.3.0+vmware.1-tkg.2;data.packaging.carvel.dev/v1alpha1",
                    "kbld.k14s.io/images": "- Metas:\n  - Type: preresolved\n    URL: projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd\n  URL: projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd\n"
                },
                "creationTimestamp": "2021-10-13T11:47:42Z",
                "generation": 1,
                "labels": {
                    "kapp.k14s.io/app": "1634125634387008976",
                    "kapp.k14s.io/association": "v1.347d2ea53078779a305b0bd13919f4e8"
                },
                "name": "eppn0q35e9iiqorjd4n78obef9qistjdetgn4p9ecdnmqbhi5opisc1bepmneobickn32bbkddjiscg",
                "namespace": "tkg-system",
                "resourceVersion": "1139",
                "uid": "08351d2a-abf5-4a81-85a3-632056504f36"
            },
            "spec": {
                "licenses": [
                    "VMware’s End User License Agreement (Underlying OSS license: Apache License 2.0)"
                ],
                "refName": "vsphere-csi.tanzu.vmware.com",
                "releaseNotes": "vsphere-csi 2.3.0 https://github.com/kubernetes-sigs/vsphere-csi-driver/releases/tag/v2.3.0",
                "releasedAt": "2021-08-30T15:42:12Z",
                "template": {
                    "spec": {
                        "deploy": [
                            {
                                "kapp": {
                                    "rawOptions": [
                                        "--wait-timeout=30s",
                                        "--kube-api-qps=20",
                                        "--kube-api-burst=30"
                                    ]
                                }
                            }
                        ],
                        "fetch": [
                            {
                                "imgpkgBundle": {
                                    "image": "projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd"
                                }
                            }
                        ],
                        "template": [
                            {
                                "ytt": {
                                    "ignoreUnknownComments": true,
                                    "paths": [
                                        "config/"
                                    ]
                                }
                            },
                            {
                                "kbld": {
                                    "paths": [
                                        "-",
                                        ".imgpkg/images.yml"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "valuesSchema": {
                    "openAPIv3": {
                        "title": "vsphere-csi.tanzu.vmware.com.2.3.0+vmware.1-tkg.2 values schema"
                    }
                },
                "version": "2.3.0+vmware.1-tkg.2"
            }
        },
        {
            "apiVersion": "packaging.carvel.dev/v1alpha1",
            "kind": "PackageRepository",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/core-package-repo"
                },
                "creationTimestamp": "2021-10-13T11:46:58Z",
                "finalizers": [
                    "finalizers.packagerepository.packaging.carvel.dev/delete"
                ],
                "generation": 1,
                "name": "tanzu-core",
                "namespace": "tkg-system",
                "resourceVersion": "1826",
                "uid": "07ea7d41-b70b-43d1-9ab9-74e0a1d85e4d"
            },
            "spec": {
                "fetch": {
                    "imgpkgBundle": {
                        "image": "projects.registry.vmware.com/tkg/packages/core/repo:v1.21.2_vmware.1-tkg.1"
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "status": "True",
                        "type": "ReconcileSucceeded"
                    }
                ],
                "consecutiveReconcileSuccesses": 2,
                "deploy": {
                    "exitCode": 0,
                    "finished": true,
                    "startedAt": "2021-10-13T11:52:48Z",
                    "stdout": "Target cluster 'https://100.64.0.1:443'\nChanges\nNamespace  Name  Kind  Conds.  Age  Op  Op st.  Wait to  Rs  Ri\nOp:      0 create, 0 delete, 0 update, 0 noop\nWait to: 0 reconcile, 0 delete, 0 noop\nSucceeded",
                    "updatedAt": "2021-10-13T11:53:13Z"
                },
                "fetch": {
                    "exitCode": 0,
                    "startedAt": "2021-10-13T11:52:43Z",
                    "stdout": "apiVersion: vendir.k14s.io/v1alpha1\ndirectories:\n- contents:\n  - imgpkgBundle:\n      image: projects.registry.vmware.com/tkg/packages/core/repo@sha256:001b658360989a5a3ba64fe1a416397e0e68fb5f5202545a837df669f3463db1\n    path: .\n  path: \"0\"\nkind: LockConfig\n",
                    "updatedAt": "2021-10-13T11:52:48Z"
                },
                "friendlyDescription": "Reconcile succeeded",
                "observedGeneration": 1,
                "template": {
                    "exitCode": 0,
                    "stderr": "resolve | final: projects.registry.vmware.com/tkg/packages/core/addons-manager:v1.4.0_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/addons-manager@sha256:db091b9437e93a6797e61e7a283d3819b8e2680733f6a22cba257b87af4e09c7\nresolve | final: projects.registry.vmware.com/tkg/packages/core/ako-operator:v1.4.0_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/ako-operator@sha256:b5db3398849a6e2f7c4ff289ecce3fd41aa93bf49c28f962565438fa2179a250\nresolve | final: projects.registry.vmware.com/tkg/packages/core/antrea:v0.13.3_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/antrea@sha256:fb3d3287ce707667ca90ead9f1670db2597342064895a4d54c267610ea814e5f\nresolve | final: projects.registry.vmware.com/tkg/packages/core/calico:v3.11.3_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/calico@sha256:bb1bdeb354d65a06c05259a5c282f97b5ba2488de2a56c1be6d5de942186ce11\nresolve | final: projects.registry.vmware.com/tkg/packages/core/kapp-controller:v0.23.0_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/kapp-controller@sha256:e0f23b38752ecc7ce347250d06bf7cd394f7a074da485cbb9c054771709a2300\nresolve | final: projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service:v1.4.3_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/load-balancer-and-ingress-service@sha256:88eed5e81a04d25ac759327b548d0d9c2fdbfdcdd57a81048e1836268448e52d\nresolve | final: projects.registry.vmware.com/tkg/packages/core/metrics-server:v0.4.0_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/metrics-server@sha256:bb667c7c79ed60f775050d12f8d72c3f706fb5623a835ef55281817888834fae\nresolve | final: projects.registry.vmware.com/tkg/packages/core/pinniped:v0.4.4_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/pinniped@sha256:ba87a876463bc865cbc1152628c011dac70b8cea98f556dc52c516c5b16a38d5\nresolve | final: projects.registry.vmware.com/tkg/packages/core/vsphere-cpi:v1.21.0_vmware.1-tkg.1 -\u003e projects.registry.vmware.com/tkg/packages/core/vsphere-cpi@sha256:edc1937cd40b49f77b4fa6818303c3663834cd0e482a01eaba4fc4b736c06ba2\nresolve | final: projects.registry.vmware.com/tkg/packages/core/vsphere-csi:v2.3.0_vmware.1-tkg.2 -\u003e projects.registry.vmware.com/tkg/packages/core/vsphere-csi@sha256:992ac3663eace6e4242331be27ad77c632ee8b324ab001fd423c251834a68edd\n",
                    "updatedAt": "2021-10-13T11:52:48Z"
                }
            }
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antctl",
                "resourceVersion": "804",
                "uid": "5ccc1050-6f4c-4f0c-bb22-cb0a5f0e0a6e"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "antctl"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "antctl",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-agent",
                "resourceVersion": "805",
                "uid": "1c3c0745-6190-4530-b7ee-12566868639d"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "antrea-agent"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "antrea-agent",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-controller",
                "resourceVersion": "806",
                "uid": "8802e286-585c-4158-bcbf-2566bbf24dc9"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "antrea-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "antrea-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "cluster-admin",
                "resourceVersion": "138",
                "uid": "a42ba3bd-99b4-430c-ac9d-ccd4704c655d"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "cluster-admin"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:masters"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "name": "kapp-controller-cluster-role-binding",
                "resourceVersion": "800",
                "uid": "c9be966e-226f-4583-a600-f04094807a74"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kapp-controller-cluster-role"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "kapp-controller-sa",
                    "namespace": "tkg-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:get-nodes",
                "resourceVersion": "284",
                "uid": "c46d06ed-9ff9-4b5c-b9cf-d7e21ee27485"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kubeadm:get-nodes"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:kubelet-bootstrap",
                "resourceVersion": "285",
                "uid": "0c6e471d-5a5d-4dea-9329-d7641fd5e7ea"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-bootstrapper"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:node-autoapprove-bootstrap",
                "resourceVersion": "286",
                "uid": "709b019d-55b7-4bc1-b455-31056e84a90a"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:node-autoapprove-certificate-rotation",
                "resourceVersion": "287",
                "uid": "af83a89c-ca8a-4bfd-888a-d60702e7ef8b"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:nodes"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "kubeadm:node-proxier",
                "resourceVersion": "306",
                "uid": "8bc4437d-b39d-432f-974f-ad0dd1eb1435"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-proxier"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "kube-proxy",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "name": "pkg-apiserver:system:auth-delegator",
                "resourceVersion": "801",
                "uid": "41588cd0-4486-4eec-bf59-130d2a18e99b"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:auth-delegator"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "kapp-controller-sa",
                    "namespace": "tkg-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:basic-user",
                "resourceVersion": "141",
                "uid": "f2ba7904-cb7d-4d99-a3df-075360097ea9"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:basic-user"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:attachdetach-controller",
                "resourceVersion": "150",
                "uid": "0ec08b55-74a0-475f-8f46-8a7d923f9fda"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:attachdetach-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "attachdetach-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:certificate-controller",
                "resourceVersion": "176",
                "uid": "f61f968a-23b7-42da-97e0-4129a7b53544"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:certificate-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "certificate-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:clusterrole-aggregation-controller",
                "resourceVersion": "151",
                "uid": "753d2fa8-f0d3-4a72-bc70-61ea38f89557"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:clusterrole-aggregation-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "clusterrole-aggregation-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cronjob-controller",
                "resourceVersion": "152",
                "uid": "ea69ebca-1300-4bd0-baaa-16d959789c03"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:cronjob-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "cronjob-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:daemon-set-controller",
                "resourceVersion": "153",
                "uid": "12001866-670c-4c33-b445-92ef102ea82f"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:daemon-set-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "daemon-set-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:deployment-controller",
                "resourceVersion": "154",
                "uid": "a486e817-a5aa-403d-be96-8aeac1ac31bf"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:deployment-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "deployment-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:disruption-controller",
                "resourceVersion": "155",
                "uid": "a815082b-f27c-4dbe-a4f6-49cb4c4be7a5"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:disruption-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "disruption-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpoint-controller",
                "resourceVersion": "156",
                "uid": "b820c693-fd2a-4f5d-90ec-499bf162c24f"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpoint-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "endpoint-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslice-controller",
                "resourceVersion": "157",
                "uid": "8c1c246c-f8b7-4af3-91f4-df647513645b"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpointslice-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "endpointslice-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslicemirroring-controller",
                "resourceVersion": "158",
                "uid": "0726c757-c99c-4fae-8848-b1820232b508"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpointslicemirroring-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "endpointslicemirroring-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ephemeral-volume-controller",
                "resourceVersion": "160",
                "uid": "5f3e46c6-4912-4cb3-81ef-d67c8513f523"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ephemeral-volume-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "ephemeral-volume-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:expand-controller",
                "resourceVersion": "159",
                "uid": "ed0e33c9-ce60-48cb-879e-b93addac130e"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:expand-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "expand-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:generic-garbage-collector",
                "resourceVersion": "161",
                "uid": "89d067cb-3838-4b70-a1f4-dc348a225ec2"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:generic-garbage-collector"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "generic-garbage-collector",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:horizontal-pod-autoscaler",
                "resourceVersion": "162",
                "uid": "39780dac-4058-4575-8105-6fc729c81db7"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:horizontal-pod-autoscaler"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "horizontal-pod-autoscaler",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:job-controller",
                "resourceVersion": "163",
                "uid": "22990c27-eef5-4a7e-b13b-57690102db37"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:job-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "job-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:namespace-controller",
                "resourceVersion": "164",
                "uid": "cc79e229-c727-4766-905d-ffcbe4b59be0"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:namespace-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "namespace-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:node-controller",
                "resourceVersion": "165",
                "uid": "8460b395-def9-46bb-b1b9-686f5af7fdc6"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:node-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "node-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:persistent-volume-binder",
                "resourceVersion": "166",
                "uid": "2bf2e2e9-2569-4812-96f5-319504c6f687"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:persistent-volume-binder"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "persistent-volume-binder",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pod-garbage-collector",
                "resourceVersion": "167",
                "uid": "1b806aed-48f4-4ec8-901a-3c1b502a6f59"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pod-garbage-collector"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "pod-garbage-collector",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pv-protection-controller",
                "resourceVersion": "178",
                "uid": "eceb18c9-5e70-4aa4-bdd6-2f77e510ff8c"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pv-protection-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "pv-protection-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pvc-protection-controller",
                "resourceVersion": "177",
                "uid": "3f8f1c7f-c508-4f6b-87f8-83b3d33ca117"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pvc-protection-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "pvc-protection-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replicaset-controller",
                "resourceVersion": "168",
                "uid": "8f8f8d8a-e9e0-4b12-b456-f8b187ef89e8"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:replicaset-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "replicaset-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replication-controller",
                "resourceVersion": "169",
                "uid": "0b152867-9265-4bc1-a7da-c0eefce5e19a"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:replication-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "replication-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:resourcequota-controller",
                "resourceVersion": "170",
                "uid": "10408e27-4850-43a2-ad43-8e7c944a415b"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:resourcequota-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "resourcequota-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:root-ca-cert-publisher",
                "resourceVersion": "180",
                "uid": "360163b9-413a-4dd7-bb61-059271781ee3"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:root-ca-cert-publisher"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "root-ca-cert-publisher",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:route-controller",
                "resourceVersion": "171",
                "uid": "a030648d-4a15-4c21-95bb-69c5d96e8b09"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:route-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "route-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-account-controller",
                "resourceVersion": "172",
                "uid": "f0e29036-fcb9-40ae-83e4-dfdd851e3dc9"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:service-account-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "service-account-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-controller",
                "resourceVersion": "173",
                "uid": "5c3f043e-6366-41d0-b752-32945856d9b5"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:service-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "service-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:statefulset-controller",
                "resourceVersion": "174",
                "uid": "dfb0b270-e364-447f-9769-e37a0e2acf86"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:statefulset-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "statefulset-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-after-finished-controller",
                "resourceVersion": "179",
                "uid": "13102c10-96ac-433d-ac44-a99551b1c9cf"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ttl-after-finished-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "ttl-after-finished-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-controller",
                "resourceVersion": "175",
                "uid": "047f7426-b5ce-408c-84de-8181f212bac7"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ttl-controller"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "ttl-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "system:coredns",
                "resourceVersion": "294",
                "uid": "34476cef-6cba-4a32-89d3-6a0792d3ad9f"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:coredns"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "coredns",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:discovery",
                "resourceVersion": "140",
                "uid": "5ce54c03-4041-4cc6-b3c0-4cc923c61294"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:discovery"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-controller-manager",
                "resourceVersion": "144",
                "uid": "9dd57f14-d3b2-4f41-a5b5-6ea9962594c6"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-controller-manager"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-controller-manager"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-dns",
                "resourceVersion": "145",
                "uid": "bb54e818-dd78-403c-8cca-5f5bed3da4b8"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-dns"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "kube-dns",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-scheduler",
                "resourceVersion": "146",
                "uid": "91c4ca08-747a-46a6-b815-b7dc31d533b3"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-scheduler"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-scheduler"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:monitoring",
                "resourceVersion": "139",
                "uid": "2ed8d257-5da8-4b6c-8591-dc600258f501"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:monitoring"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:monitoring"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node",
                "resourceVersion": "148",
                "uid": "ff0782b4-f35f-4b41-a999-684195ea0a6d"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node"
            }
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-proxier",
                "resourceVersion": "143",
                "uid": "28af17d2-e13c-4cd7-bee2-8895502d48de"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-proxier"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-proxy"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:public-info-viewer",
                "resourceVersion": "142",
                "uid": "87a8e467-45e1-4c43-9644-22f183705fc3"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:public-info-viewer"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated"
                },
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:unauthenticated"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:service-account-issuer-discovery",
                "resourceVersion": "149",
                "uid": "c7487077-9593-4b84-9fbc-b9e0768b829c"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:service-account-issuer-discovery"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:serviceaccounts"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:volume-scheduler",
                "resourceVersion": "147",
                "uid": "4616e7bc-422f-418b-89df-56c0bfae121e"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:volume-scheduler"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-scheduler"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "ext.packaging.carvel.dev/ytt-data-values-overlays": "tanzu-addons-manager-data-values",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/tanzu-addons-manager"
                },
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tanzu-addons-package-cluster-rolebinding",
                "resourceVersion": "381",
                "uid": "eed445b2-bf41-4798-80a0-9e36ebc45cc7"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "tanzu-addons-package-cluster-role"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "tanzu-addons-package-sa",
                    "namespace": "tkg-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tanzu-capabilities-manager-clusterrolebinding",
                "resourceVersion": "379",
                "uid": "1cafed53-67d3-4504-b566-80c6e108ee28"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "tanzu-capabilities-manager-clusterrole"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "tanzu-capabilities-manager-sa",
                    "namespace": "tkg-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "name": "tkr-manager-rolebinding",
                "resourceVersion": "532",
                "uid": "ec217fb9-b9b5-4271-8d00-159b3b30df94"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "tkr-manager-role"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "default",
                    "namespace": "tkr-system"
                }
            ]
        },
        {
            "aggregationRule": {
                "clusterRoleSelectors": [
                    {
                        "matchLabels": {
                            "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                        }
                    }
                ]
            },
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "admin",
                "resourceVersion": "752",
                "uid": "2c88415c-952f-48cd-be9b-9a800253f1d6"
            },
            "rules": [
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy",
                        "secrets",
                        "services/proxy"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods",
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "secrets",
                        "serviceaccounts",
                        "services",
                        "services/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "replicasets",
                        "replicasets/scale",
                        "statefulsets",
                        "statefulsets/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "ingresses",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "localsubjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "resources": [
                        "rolebindings",
                        "roles"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:40Z",
                "labels": {
                    "app": "antrea",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "name": "aggregate-antrea-clustergroups-edit",
                "resourceVersion": "584",
                "uid": "d102fdce-e53d-433b-b9c4-2d95ebf8e8a6"
            },
            "rules": [
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:00Z",
                "labels": {
                    "app": "antrea",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                },
                "name": "aggregate-antrea-clustergroups-view",
                "resourceVersion": "647",
                "uid": "cad5acd2-f750-435b-8154-7fc0400af454"
            },
            "rules": [
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "labels": {
                    "app": "antrea",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "name": "aggregate-antrea-policies-edit",
                "resourceVersion": "724",
                "uid": "22f49c43-a408-4136-8731-d1b39509f1e5"
            },
            "rules": [
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "labels": {
                    "app": "antrea",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                },
                "name": "aggregate-antrea-policies-view",
                "resourceVersion": "728",
                "uid": "a09813fb-53ed-4905-b729-d770177fea13"
            },
            "rules": [
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "labels": {
                    "app": "antrea",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "name": "aggregate-traceflows-edit",
                "resourceVersion": "736",
                "uid": "32bb02ac-11bb-471b-a4a6-ddf6a9a486e6"
            },
            "rules": [
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:20Z",
                "labels": {
                    "app": "antrea",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                },
                "name": "aggregate-traceflows-view",
                "resourceVersion": "743",
                "uid": "4dd2e265-afa0-4d93-88d9-e155a59a9e3f"
            },
            "rules": [
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antctl",
                "resourceVersion": "792",
                "uid": "418ebdcd-417c-41a8-b3ab-2254d1c577a5"
            },
            "rules": [
                {
                    "apiGroups": [
                        "controlplane.antrea.tanzu.vmware.com",
                        "networking.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "networkpolicies",
                        "appliedtogroups",
                        "addressgroups"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "stats.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "networkpolicystats",
                        "antreaclusternetworkpolicystats",
                        "antreanetworkpolicystats"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "system.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "controllerinfos",
                        "agentinfos"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "system.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "supportbundles"
                    ],
                    "verbs": [
                        "get",
                        "post"
                    ]
                },
                {
                    "apiGroups": [
                        "system.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "supportbundles/download"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "nonResourceURLs": [
                        "/agentinfo",
                        "/addressgroups",
                        "/appliedtogroups",
                        "/loglevel",
                        "/networkpolicies",
                        "/ovsflows",
                        "/ovstracing",
                        "/podinterfaces"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-agent",
                "resourceVersion": "796",
                "uid": "db67d098-59d3-4718-8284-d2b3ebf414d1"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list",
                        "patch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "discovery.k8s.io"
                    ],
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "clusterinformation.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "antreaagentinfos"
                    ],
                    "verbs": [
                        "get",
                        "create",
                        "update",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "controlplane.antrea.tanzu.vmware.com",
                        "networking.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "networkpolicies",
                        "appliedtogroups",
                        "addressgroups"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "controlplane.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "nodestatssummaries"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "controlplane.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "networkpolicies/status"
                    ],
                    "verbs": [
                        "create",
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "authentication.k8s.io"
                    ],
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "extension-apiserver-authentication"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "antrea-ca"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows",
                        "traceflows/status"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list",
                        "update",
                        "patch",
                        "create",
                        "delete"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-cluster-identity-reader",
                "resourceVersion": "798",
                "uid": "dbf031ab-8342-4cf4-96d8-51f6230cc2b4"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "antrea-cluster-identity"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "labels": {
                    "app": "antrea"
                },
                "name": "antrea-controller",
                "resourceVersion": "802",
                "uid": "512260bb-bdde-4362-a84e-d4e0bdff8b7d"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes",
                        "pods",
                        "namespaces",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "clusterinformation.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "antreacontrollerinfos"
                    ],
                    "verbs": [
                        "get",
                        "create",
                        "update",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "clusterinformation.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "antreaagentinfos"
                    ],
                    "verbs": [
                        "list",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "authentication.k8s.io"
                    ],
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "extension-apiserver-authentication"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "antrea-ca",
                        "antrea-cluster-identity"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "antrea-config-ctb8mftc58"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "apiregistration.k8s.io"
                    ],
                    "resourceNames": [
                        "v1alpha1.stats.antrea.tanzu.vmware.com",
                        "v1beta1.system.antrea.tanzu.vmware.com",
                        "v1beta2.controlplane.antrea.tanzu.vmware.com",
                        "v1beta1.controlplane.antrea.tanzu.vmware.com",
                        "v1beta1.networking.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "apiservices"
                    ],
                    "verbs": [
                        "get",
                        "update",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "admissionregistration.k8s.io"
                    ],
                    "resourceNames": [
                        "crdmutator.antrea.tanzu.vmware.com",
                        "crdvalidator.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "mutatingwebhookconfigurations",
                        "validatingwebhookconfigurations"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies/status",
                        "networkpolicies/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "tiers"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list",
                        "create",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "crd.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "tierentitlements",
                        "tierentitlementbindings"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows",
                        "traceflows/status"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list",
                        "update",
                        "patch",
                        "create",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "externalentities",
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "watch",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "cluster-admin",
                "resourceVersion": "76",
                "uid": "cbd87d5e-455b-46a1-bb07-6742f979eb8d"
            },
            "rules": [
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "nonResourceURLs": [
                        "*"
                    ],
                    "verbs": [
                        "*"
                    ]
                }
            ]
        },
        {
            "aggregationRule": {
                "clusterRoleSelectors": [
                    {
                        "matchLabels": {
                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                        }
                    }
                ]
            },
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                },
                "name": "edit",
                "resourceVersion": "749",
                "uid": "3ebee0d0-5486-4429-9977-1b4974fd7acb"
            },
            "rules": [
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy",
                        "secrets",
                        "services/proxy"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods",
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "secrets",
                        "serviceaccounts",
                        "services",
                        "services/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "replicasets",
                        "replicasets/scale",
                        "statefulsets",
                        "statefulsets/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "ingresses",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "name": "kapp-controller-cluster-role",
                "resourceVersion": "795",
                "uid": "52bc4627-33ea-44bf-8e48-e11273e809b9"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets",
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "kappctrl.k14s.io"
                    ],
                    "resources": [
                        "apps",
                        "apps/status"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "packaging.carvel.dev"
                    ],
                    "resources": [
                        "packageinstalls",
                        "packageinstalls/status"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "packaging.carvel.dev"
                    ],
                    "resources": [
                        "packagerepositories",
                        "packagerepositories/status"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "internal.packaging.carvel.dev"
                    ],
                    "resources": [
                        "internalpackagemetadatas"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "data.packaging.carvel.dev"
                    ],
                    "resources": [
                        "packagemetadatas",
                        "packagemetadatas/status"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "internal.packaging.carvel.dev"
                    ],
                    "resources": [
                        "internalpackages"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "data.packaging.carvel.dev"
                    ],
                    "resources": [
                        "packages",
                        "packages/status"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "apiGroups": [
                        "apiregistration.k8s.io"
                    ],
                    "resources": [
                        "apiservices"
                    ],
                    "verbs": [
                        "update",
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "list",
                        "watch",
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "admissionregistration.k8s.io"
                    ],
                    "resources": [
                        "mutatingwebhookconfigurations"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "admissionregistration.k8s.io"
                    ],
                    "resources": [
                        "validatingwebhookconfigurations"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:get-nodes",
                "resourceVersion": "283",
                "uid": "ff445430-e05e-452b-b6c1-ec7fddff1bc4"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                },
                "name": "system:aggregate-to-admin",
                "resourceVersion": "84",
                "uid": "61d664ab-1f88-4e22-a8b1-38e41b35591f"
            },
            "rules": [
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "localsubjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "resources": [
                        "rolebindings",
                        "roles"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "name": "system:aggregate-to-edit",
                "resourceVersion": "85",
                "uid": "51f47629-4258-4b4f-904c-0d48c3358105"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy",
                        "secrets",
                        "services/proxy"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods",
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "secrets",
                        "serviceaccounts",
                        "services",
                        "services/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "replicasets",
                        "replicasets/scale",
                        "statefulsets",
                        "statefulsets/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "ingresses",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                },
                "name": "system:aggregate-to-view",
                "resourceVersion": "86",
                "uid": "5180c256-dd19-47c4-be41-43eb8b01eb9e"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:auth-delegator",
                "resourceVersion": "92",
                "uid": "f26e7e83-f4ab-4623-a0b5-2843ae890f40"
            },
            "rules": [
                {
                    "apiGroups": [
                        "authentication.k8s.io"
                    ],
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:basic-user",
                "resourceVersion": "79",
                "uid": "63b76938-e2eb-4160-a6e7-87a5de40ce70"
            },
            "rules": [
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "selfsubjectaccessreviews",
                        "selfsubjectrulesreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                "resourceVersion": "97",
                "uid": "bb527748-79bd-4d38-ad4a-ff7a533e19dd"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resources": [
                        "certificatesigningrequests/nodeclient"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                "resourceVersion": "98",
                "uid": "b943f027-a786-4e0c-a697-9555f4b3725c"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resources": [
                        "certificatesigningrequests/selfnodeclient"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                "resourceVersion": "102",
                "uid": "146af4e8-e6fd-4a1e-b3b4-354b52aec992"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resourceNames": [
                        "kubernetes.io/kube-apiserver-client"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                "resourceVersion": "103",
                "uid": "c0544ae9-be49-49ed-b89f-a6eceb95e52d"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resourceNames": [
                        "kubernetes.io/kube-apiserver-client-kubelet"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:kubelet-serving-approver",
                "resourceVersion": "101",
                "uid": "4e04cd68-931a-4a91-b512-0e936fdad921"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resourceNames": [
                        "kubernetes.io/kubelet-serving"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:certificates.k8s.io:legacy-unknown-approver",
                "resourceVersion": "100",
                "uid": "70127d25-0600-4bf5-a622-1d92db9f443c"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resourceNames": [
                        "kubernetes.io/legacy-unknown"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:attachdetach-controller",
                "resourceVersion": "107",
                "uid": "a1b33366-0aa2-4afe-ae22-8a87cefa879d"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims",
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "volumeattachments"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csidrivers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csinodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:certificate-controller",
                "resourceVersion": "133",
                "uid": "3b740a62-23bd-4c33-b211-0a6d3f724753"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resources": [
                        "certificatesigningrequests"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resources": [
                        "certificatesigningrequests/approval",
                        "certificatesigningrequests/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resourceNames": [
                        "kubernetes.io/kube-apiserver-client-kubelet"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                },
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resourceNames": [
                        "kubernetes.io/kube-apiserver-client",
                        "kubernetes.io/kube-apiserver-client-kubelet",
                        "kubernetes.io/kubelet-serving",
                        "kubernetes.io/legacy-unknown"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "sign"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:clusterrole-aggregation-controller",
                "resourceVersion": "108",
                "uid": "24c69557-0088-477f-951c-8824eac248bf"
            },
            "rules": [
                {
                    "apiGroups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "resources": [
                        "clusterroles"
                    ],
                    "verbs": [
                        "escalate",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cronjob-controller",
                "resourceVersion": "109",
                "uid": "c894f4c5-bf67-41ee-897c-50664c9cfe41"
            },
            "rules": [
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:daemon-set-controller",
                "resourceVersion": "110",
                "uid": "de2d134c-3765-4a61-8cc8-471a5e2165af"
            },
            "rules": [
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/binding"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "controllerrevisions"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:deployment-controller",
                "resourceVersion": "111",
                "uid": "c270590d-a3a3-4ff7-9815-72c90fee3f7a"
            },
            "rules": [
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "deployments"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "deployments/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "deployments/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:disruption-controller",
                "resourceVersion": "112",
                "uid": "79a26634-d0d3-4f23-95a6-e25d19464082"
            },
            "rules": [
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "deployments"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "replicationcontrollers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*/scale"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpoint-controller",
                "resourceVersion": "113",
                "uid": "12e66b27-5dfa-4651-89ee-3bb8da4d4f97"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints/restricted"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslice-controller",
                "resourceVersion": "114",
                "uid": "b1c72b09-c28e-4c0c-9668-dfcc77c60dab"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes",
                        "pods",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "services/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "discovery.k8s.io"
                    ],
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:endpointslicemirroring-controller",
                "resourceVersion": "115",
                "uid": "2c389dec-c532-4e6e-9c6c-4df4f5c73467"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "services/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "discovery.k8s.io"
                    ],
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ephemeral-volume-controller",
                "resourceVersion": "117",
                "uid": "e87cb72a-de14-492f-a485-0e961c4876e1"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:expand-controller",
                "resourceVersion": "116",
                "uid": "9833fbdc-176e-45fe-b332-fc71219fcf6e"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:generic-garbage-collector",
                "resourceVersion": "118",
                "uid": "148b54a9-4e27-4935-9af4-e56c5f41dc93"
            },
            "rules": [
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:horizontal-pod-autoscaler",
                "resourceVersion": "119",
                "uid": "df332ddd-a18a-41dd-8da3-b2860f870dab"
            },
            "rules": [
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*/scale"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "http:heapster:",
                        "https:heapster:"
                    ],
                    "resources": [
                        "services/proxy"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "metrics.k8s.io"
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "custom.metrics.k8s.io"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:job-controller",
                "resourceVersion": "120",
                "uid": "0bfcbdee-9b2c-4540-861c-d47a005c8426"
            },
            "rules": [
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "jobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "jobs/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "jobs/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:namespace-controller",
                "resourceVersion": "121",
                "uid": "b25b0cff-7753-420c-af59-07cedd319863"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces/finalize",
                        "namespaces/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "delete",
                        "deletecollection",
                        "get",
                        "list"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:node-controller",
                "resourceVersion": "122",
                "uid": "3d576b82-1541-41b5-9f7c-29bfd730f06f"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:persistent-volume-binder",
                "resourceVersion": "123",
                "uid": "cc4b4a25-16d9-42bc-925d-82021c28ef4b"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumes/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pod-garbage-collector",
                "resourceVersion": "124",
                "uid": "69c3b2a1-e7ca-4e2b-9e35-00df78a6408d"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pv-protection-controller",
                "resourceVersion": "135",
                "uid": "9c848045-0096-48bb-9688-2d12c45e0438"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:pvc-protection-controller",
                "resourceVersion": "134",
                "uid": "baea993d-404c-49e2-a1ca-157f33e6ebcd"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replicaset-controller",
                "resourceVersion": "125",
                "uid": "25640b24-3210-457b-9282-06cbba31807a"
            },
            "rules": [
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "replicasets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "replicasets/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:replication-controller",
                "resourceVersion": "126",
                "uid": "d62f66c0-199d-452d-8fc6-ea3d4d66872a"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "replicationcontrollers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "replicationcontrollers/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "replicationcontrollers/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:resourcequota-controller",
                "resourceVersion": "127",
                "uid": "536c951f-38dc-46a7-bb22-adc59a3036de"
            },
            "rules": [
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:root-ca-cert-publisher",
                "resourceVersion": "137",
                "uid": "698f5538-08ac-43e3-b492-c9bfae338ec8"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "create",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:route-controller",
                "resourceVersion": "128",
                "uid": "9e7ce084-284d-4855-b3c5-c4e3b26d6fe4"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-account-controller",
                "resourceVersion": "129",
                "uid": "5275155b-7936-4b54-9701-d0976e314c40"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:service-controller",
                "resourceVersion": "130",
                "uid": "9d103ab8-9327-4bd9-a4ba-a60bf4041960"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "services/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:statefulset-controller",
                "resourceVersion": "131",
                "uid": "e40f84ae-549a-4f8b-bd50-a9448cf0fa28"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "statefulsets/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "controllerrevisions"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "create",
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-after-finished-controller",
                "resourceVersion": "136",
                "uid": "c42e7a4c-19c2-418e-8b9c-fe39230b2c87"
            },
            "rules": [
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "jobs"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:ttl-controller",
                "resourceVersion": "132",
                "uid": "64e012ac-550c-4553-a1bf-88ea88dcad60"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "system:coredns",
                "resourceVersion": "293",
                "uid": "8fecab3e-670c-4049-85d2-c8a7ffd17afe"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services",
                        "pods",
                        "namespaces"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:discovery",
                "resourceVersion": "77",
                "uid": "0b91ead6-317c-481e-a435-eaae352d86a9"
            },
            "rules": [
                {
                    "nonResourceURLs": [
                        "/api",
                        "/api/*",
                        "/apis",
                        "/apis/*",
                        "/healthz",
                        "/livez",
                        "/openapi",
                        "/openapi/*",
                        "/readyz",
                        "/version",
                        "/version/"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:heapster",
                "resourceVersion": "87",
                "uid": "f483d312-06de-4d79-a74c-86fe6fbfd5fd"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "events",
                        "namespaces",
                        "nodes",
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "deployments"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-aggregator",
                "resourceVersion": "93",
                "uid": "3310739b-494c-4488-bc6c-baa2e2e1e616"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-controller-manager",
                "resourceVersion": "94",
                "uid": "4061f9d5-9870-4026-b12c-d0153d11f947"
            },
            "rules": [
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "coordination.k8s.io"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "coordination.k8s.io"
                    ],
                    "resourceNames": [
                        "kube-controller-manager"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kube-controller-manager"
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets",
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "namespaces",
                        "secrets",
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets",
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "authentication.k8s.io"
                    ],
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-dns",
                "resourceVersion": "95",
                "uid": "a4578f4b-1d0f-4500-bafc-5d9cd3e411c2"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kube-scheduler",
                "resourceVersion": "106",
                "uid": "d3861791-e91e-4c8b-afae-5ac959d34cf5"
            },
            "rules": [
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "coordination.k8s.io"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "coordination.k8s.io"
                    ],
                    "resourceNames": [
                        "kube-scheduler"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kube-scheduler"
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "bindings",
                        "pods/binding"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "replicationcontrollers",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps",
                        "extensions"
                    ],
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims",
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "authentication.k8s.io"
                    ],
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csinodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csidrivers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csistoragecapacities"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:kubelet-api-admin",
                "resourceVersion": "90",
                "uid": "c7240cd2-5671-4471-86c2-3437b8cc91b0"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "proxy"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes/log",
                        "nodes/metrics",
                        "nodes/proxy",
                        "nodes/spec",
                        "nodes/stats"
                    ],
                    "verbs": [
                        "*"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:monitoring",
                "resourceVersion": "78",
                "uid": "b1b02dca-e72d-40ec-9a4f-0e35aeeb2333"
            },
            "rules": [
                {
                    "nonResourceURLs": [
                        "/healthz",
                        "/healthz/*",
                        "/livez",
                        "/livez/*",
                        "/metrics",
                        "/readyz",
                        "/readyz/*"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node",
                "resourceVersion": "88",
                "uid": "499be11f-b03f-4657-b47b-fe12b29dce72"
            },
            "rules": [
                {
                    "apiGroups": [
                        "authentication.k8s.io"
                    ],
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        "authorization.k8s.io"
                    ],
                    "resources": [
                        "localsubjectaccessreviews",
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "pods/eviction"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "secrets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims",
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resources": [
                        "certificatesigningrequests"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "coordination.k8s.io"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "volumeattachments"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims/status"
                    ],
                    "verbs": [
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csidrivers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "csinodes"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "node.k8s.io"
                    ],
                    "resources": [
                        "runtimeclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-bootstrapper",
                "resourceVersion": "91",
                "uid": "42480829-f626-49ee-ab4d-7ffe1620d6ea"
            },
            "rules": [
                {
                    "apiGroups": [
                        "certificates.k8s.io"
                    ],
                    "resources": [
                        "certificatesigningrequests"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-problem-detector",
                "resourceVersion": "89",
                "uid": "6e55ab8a-f10e-48d9-8303-f01e52993b27"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:node-proxier",
                "resourceVersion": "105",
                "uid": "7a0e51bb-d958-471d-acaf-22c7bb0298e3"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "discovery.k8s.io"
                    ],
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:persistent-volume-provisioner",
                "resourceVersion": "96",
                "uid": "42cf09e5-9f3c-43a0-91f3-f7e93cbfbf98"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:public-info-viewer",
                "resourceVersion": "80",
                "uid": "3bc572bb-26f7-478b-9986-07d476e26199"
            },
            "rules": [
                {
                    "nonResourceURLs": [
                        "/healthz",
                        "/livez",
                        "/readyz",
                        "/version",
                        "/version/"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:service-account-issuer-discovery",
                "resourceVersion": "104",
                "uid": "4329ff32-136b-42e6-a1cb-effbefb7256a"
            },
            "rules": [
                {
                    "nonResourceURLs": [
                        "/.well-known/openid-configuration",
                        "/openid/v1/jwks"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:volume-scheduler",
                "resourceVersion": "99",
                "uid": "07591e7e-7686-4b95-b1ab-7d7de0981724"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "storage.k8s.io"
                    ],
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "ext.packaging.carvel.dev/ytt-data-values-overlays": "tanzu-addons-manager-data-values",
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/tanzu-addons-manager"
                },
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tanzu-addons-package-cluster-role",
                "resourceVersion": "375",
                "uid": "fc25ca5b-012c-41db-ab33-2da3a2b1d861"
            },
            "rules": [
                {
                    "apiGroups": [
                        "*"
                    ],
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "*"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tanzu-capabilities-manager-clusterrole",
                "resourceVersion": "376",
                "uid": "451dcabd-2a61-4b2d-860e-2abac10b6c5c"
            },
            "rules": [
                {
                    "apiGroups": [
                        "run.tanzu.vmware.com"
                    ],
                    "resources": [
                        "capabilities"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "run.tanzu.vmware.com"
                    ],
                    "resources": [
                        "capabilities/status"
                    ],
                    "verbs": [
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "run.tanzu.vmware.com"
                    ],
                    "resources": [
                        "tanzukubernetesreleases",
                        "tanzukubernetesreleases/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "run.tanzu.vmware.com"
                    ],
                    "resources": [
                        "tanzukubernetesclusters",
                        "tanzukubernetesclusters/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "clusterctl.cluster.x-k8s.io"
                    ],
                    "resources": [
                        "providers",
                        "providers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "namespaces",
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tkr-manager-role",
                "resourceVersion": "374",
                "uid": "c17c85ec-6284-420a-8a43-ebb3791aa0e1"
            },
            "rules": [
                {
                    "apiGroups": [
                        "run.tanzu.vmware.com"
                    ],
                    "resources": [
                        "tanzukubernetesreleases"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "run.tanzu.vmware.com"
                    ],
                    "resources": [
                        "tanzukubernetesreleases/status"
                    ],
                    "verbs": [
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "cluster.x-k8s.io"
                    ],
                    "resources": [
                        "clusters",
                        "clusters/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                }
            ]
        },
        {
            "aggregationRule": {
                "clusterRoleSelectors": [
                    {
                        "matchLabels": {
                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                        }
                    }
                ]
            },
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:17Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "name": "view",
                "resourceVersion": "745",
                "uid": "e054a921-dad3-4852-86d1-9f86bef25102"
            },
            "rules": [
                {
                    "apiGroups": [
                        "core.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clustergroups"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "security.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "clusternetworkpolicies",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "ops.antrea.tanzu.vmware.com"
                    ],
                    "resources": [
                        "traceflows"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "apps"
                    ],
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "autoscaling"
                    ],
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "batch"
                    ],
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "extensions"
                    ],
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "policy"
                    ],
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "networking.k8s.io"
                    ],
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:bootstrap-signer-clusterinfo",
                "namespace": "kube-public",
                "resourceVersion": "290",
                "uid": "1fa80367-6da3-40cd-85e9-e273a2eee049"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:bootstrap-signer-clusterinfo"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:anonymous"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-public",
                "resourceVersion": "194",
                "uid": "4810684a-59f1-427e-9d04-0eb10c45dbc3"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:bootstrap-signer"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "bootstrap-signer",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "308",
                "uid": "3ad994a4-d52e-49e4-a717-c8ab1cad33ad"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kube-proxy"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kubeadm:kubelet-config-1.21",
                "namespace": "kube-system",
                "resourceVersion": "209",
                "uid": "6042b7b6-92f3-479a-9601-9ce5776f89eb"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:kubelet-config-1.21"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:nodes"
                },
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kubeadm:nodes-kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "206",
                "uid": "4c0b885b-255d-4a15-99a7-7fd1319b7e90"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubeadm:nodes-kubeadm-config"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token"
                },
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:nodes"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "addons-management/kapp-controller"
                },
                "creationTimestamp": "2021-10-13T11:46:40Z",
                "name": "pkgserver-auth-reader",
                "namespace": "kube-system",
                "resourceVersion": "803",
                "uid": "8a2200f8-d98b-44e7-92ef-7359016bf86d"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "extension-apiserver-authentication-reader"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "kapp-controller-sa",
                    "namespace": "tkg-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "188",
                "uid": "e83f2f42-2d2b-44a1-9602-1da4e1391134"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "extension-apiserver-authentication-reader"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-controller-manager"
                },
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-scheduler"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "189",
                "uid": "30581f5e-5dbe-4f35-8997-7c865e08c920"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system::leader-locking-kube-controller-manager"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-controller-manager"
                },
                {
                    "kind": "ServiceAccount",
                    "name": "kube-controller-manager",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "190",
                "uid": "39b6b2e3-0907-4ed2-9d19-21a9c9270edf"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system::leader-locking-kube-scheduler"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-scheduler"
                },
                {
                    "kind": "ServiceAccount",
                    "name": "kube-scheduler",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "191",
                "uid": "e300a07f-c5aa-4782-a1cf-f57943d11fee"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:bootstrap-signer"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "bootstrap-signer",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cloud-provider",
                "namespace": "kube-system",
                "resourceVersion": "192",
                "uid": "695772a6-cf7f-448e-b512-779b9e0d8c02"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:cloud-provider"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "cloud-provider",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:token-cleaner",
                "namespace": "kube-system",
                "resourceVersion": "193",
                "uid": "54169c65-c34c-4f37-b1e2-efc7b0f5442d"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "system:controller:token-cleaner"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "token-cleaner",
                    "namespace": "kube-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "metadata/tkg"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "tkg-metadata-reader",
                "namespace": "tkg-system-public",
                "resourceVersion": "320",
                "uid": "dc140416-81df-4f59-b0d3-bd6ef513e96c"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "tkg-metadata-reader"
            },
            "subjects": [
                {
                    "apiGroup": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "RoleBinding",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:31Z",
                "name": "tkr-leader-election-rolebinding",
                "namespace": "tkr-system",
                "resourceVersion": "378",
                "uid": "9d4f22a2-c506-46f3-b748-b08820567665"
            },
            "roleRef": {
                "apiGroup": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "tkr-leader-election-role"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "default",
                    "namespace": "tkr-system"
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "kubeadm:bootstrap-signer-clusterinfo",
                "namespace": "kube-public",
                "resourceVersion": "289",
                "uid": "aa25593e-1be5-4144-a09b-249bf515e972"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "cluster-info"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-public",
                "resourceVersion": "187",
                "uid": "05641166-3f2b-40b8-a8eb-5cc4d54c606f"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "cluster-info"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "extension-apiserver-authentication-reader",
                "namespace": "kube-system",
                "resourceVersion": "181",
                "uid": "120924de-10f1-42f3-9de4-186cba99f656"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "extension-apiserver-authentication"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "307",
                "uid": "20de48c6-18f0-4365-8253-980da829c816"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kube-proxy"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kubeadm:kubelet-config-1.21",
                "namespace": "kube-system",
                "resourceVersion": "208",
                "uid": "cf4db41b-3519-4e21-9978-dd21ae72f072"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kubelet-config-1.21"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:45:20Z",
                "name": "kubeadm:nodes-kubeadm-config",
                "namespace": "kube-system",
                "resourceVersion": "205",
                "uid": "c61eca42-a2db-45eb-a911-091f968734f7"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kubeadm-config"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "185",
                "uid": "49517e00-e3fc-4ae3-a2ee-e08efa0901b2"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kube-controller-manager"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system::leader-locking-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "186",
                "uid": "ca3b0b3f-ebfb-4bcc-94e5-3e59dec15c9b"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "kube-scheduler"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:bootstrap-signer",
                "namespace": "kube-system",
                "resourceVersion": "182",
                "uid": "549e67c7-fe40-4c7b-8a64-216b07f3f1d1"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:cloud-provider",
                "namespace": "kube-system",
                "resourceVersion": "183",
                "uid": "3e629131-332a-42fb-aeae-a71713595a98"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creationTimestamp": "2021-10-13T11:45:18Z",
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "name": "system:controller:token-cleaner",
                "namespace": "kube-system",
                "resourceVersion": "184",
                "uid": "d4e9d738-8a5f-410a-8cf1-b46be30c7d6c"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "apiGroups": [
                        "",
                        "events.k8s.io"
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "metadata/tkg"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "tkg-metadata-reader",
                "namespace": "tkg-system-public",
                "resourceVersion": "313",
                "uid": "a6473f65-6e51-4386-b58e-9c463e436229"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resourceNames": [
                        "tkg-metadata",
                        "tkg-bom"
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        {
            "apiVersion": "rbac.authorization.k8s.io/v1",
            "kind": "Role",
            "metadata": {
                "annotations": {
                    "tkg.tanzu.vmware.com/addon-type": "tkr/tkr-controller"
                },
                "creationTimestamp": "2021-10-13T11:45:26Z",
                "name": "tkr-leader-election-role",
                "namespace": "tkr-system",
                "resourceVersion": "329",
                "uid": "43ce83a7-baa0-4ca5-9fbe-1cb3664ef1fa"
            },
            "rules": [
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "configmaps/status"
                    ],
                    "verbs": [
                        "get",
                        "update",
                        "patch"
                    ]
                },
                {
                    "apiGroups": [
                        ""
                    ],
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:31Z",
                "generation": 1,
                "name": "v1.17.16---vmware.2-tkg.1",
                "resourceVersion": "1270",
                "uid": "98b91730-287d-4469-9b24-feeb1dcaa85a"
            },
            "spec": {
                "images": [
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.5_vmware.12"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.1"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    }
                ],
                "kubernetesVersion": "v1.17.16+vmware.2",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.17.16+vmware.2-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:31Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:31Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:31Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:34Z",
                "generation": 1,
                "name": "v1.17.16---vmware.2-tkg.2",
                "resourceVersion": "1277",
                "uid": "c1337ead-cee8-469e-ac43-f355f06b6095"
            },
            "spec": {
                "images": [
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.5_vmware.12"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.1"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.17.16+vmware.2",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.17.16+vmware.2-tkg.2"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:34Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:34Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:34Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:36Z",
                "generation": 1,
                "name": "v1.17.16---vmware.3-tkg.1",
                "resourceVersion": "1283",
                "uid": "e789b58c-094d-49aa-bc6d-04c7d1c376b3"
            },
            "spec": {
                "images": [
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.2"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.3"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.3"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.3"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.3"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.17.16_vmware.3"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.5_vmware.12"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.17.16+vmware.3",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.17.16+vmware.3-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:36Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:36Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:36Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:17Z",
                "generation": 1,
                "name": "v1.18.16---vmware.1-tkg.1",
                "resourceVersion": "1234",
                "uid": "529cc67e-c993-456c-a6c7-5232bccd8f3d"
            },
            "spec": {
                "images": [
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.7_vmware.8"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.18.16+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.18.16+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:17Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:17Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:17Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:50Z",
                "generation": 1,
                "name": "v1.18.16---vmware.1-tkg.2",
                "resourceVersion": "1319",
                "uid": "2db2f623-ea8d-4ac5-b829-d7ac51a41084"
            },
            "spec": {
                "images": [
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.7_vmware.8"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.18.16+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.18.16+vmware.1-tkg.2"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:50Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:50Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:50Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:49:04Z",
                "generation": 1,
                "name": "v1.18.16---vmware.3-tkg.1",
                "resourceVersion": "1356",
                "uid": "7032d458-ed29-4611-98c4-4505a7455a44"
            },
            "spec": {
                "images": [
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.3"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.3"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.3"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.3"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.3"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.7_vmware.8"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.16_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.18.16+vmware.3",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.18.16+vmware.3-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:49:04Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:04Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:04Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:20Z",
                "generation": 1,
                "name": "v1.18.17---vmware.1-tkg.1",
                "resourceVersion": "1243",
                "uid": "1f18fe9d-fbad-496b-83e0-b3da209a056c"
            },
            "spec": {
                "images": [
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.7_vmware.8"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.18.17+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.18.17+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:20Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:20Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:20Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:49:13Z",
                "generation": 1,
                "name": "v1.18.17---vmware.2-tkg.1",
                "resourceVersion": "1377",
                "uid": "6af7e25c-2c76-4055-bc94-52279d7f81d0"
            },
            "spec": {
                "images": [
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.3_vmware.13"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.2"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.2"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.2"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.2"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.17_vmware.2"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.6.7_vmware.8"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.18.17+vmware.2",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.18.17+vmware.2-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:49:13Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:13Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:13Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:49:07Z",
                "generation": 1,
                "name": "v1.19.12---vmware.1-tkg.1",
                "resourceVersion": "1364",
                "uid": "bd106a66-4163-4131-80f5-789f260cc2b5"
            },
            "spec": {
                "images": [
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.2.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.1.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.4_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.2.0_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.1_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.14"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0"
                    },
                    {
                        "name": "ako-operator",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.12"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.2.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.23.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1"
                    },
                    {
                        "name": "ako",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.3_vmware.1"
                    },
                    {
                        "name": "packages/core/ako-operator",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/antrea",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2-tkg.1"
                    },
                    {
                        "name": "packages/core/kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.23.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.4_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/vsphere-cpi",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.1_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/vsphere-csi",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1-tkg.2"
                    },
                    {
                        "name": "packages/core/addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/load-balancer-and-ingress-service",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/repo",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.12_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/calico",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    }
                ],
                "kubernetesVersion": "v1.19.12+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.19.12+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:49:07Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:07Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:07Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:49:10Z",
                "generation": 1,
                "name": "v1.19.8---vmware.1-tkg.1",
                "resourceVersion": "1372",
                "uid": "05a9d562-cdbf-4032-8099-bcdc2e8a251f"
            },
            "spec": {
                "images": [
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.19.8+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.19.8+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:49:10Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:10Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:10Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:53Z",
                "generation": 1,
                "name": "v1.19.8---vmware.1-tkg.2",
                "resourceVersion": "1326",
                "uid": "d3f95833-6d87-4ef4-98e0-1c3c3bf8a322"
            },
            "spec": {
                "images": [
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    }
                ],
                "kubernetesVersion": "v1.19.8+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.19.8+vmware.1-tkg.2"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:53Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:53Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:53Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:56Z",
                "generation": 1,
                "name": "v1.19.8---vmware.3-tkg.1",
                "resourceVersion": "1334",
                "uid": "0248182c-f446-4c1e-af0b-0802321ba3d7"
            },
            "spec": {
                "images": [
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.3"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.3"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.3"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.3"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.8_vmware.3"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    }
                ],
                "kubernetesVersion": "v1.19.8+vmware.3",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.19.8+vmware.3-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:56Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:56Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:56Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:42Z",
                "generation": 1,
                "name": "v1.19.9---vmware.1-tkg.1",
                "resourceVersion": "1298",
                "uid": "bbe12367-19ee-43df-a1eb-3714989959c1"
            },
            "spec": {
                "images": [
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.19.9+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.19.9+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:42Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:42Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:42Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:49:16Z",
                "generation": 1,
                "name": "v1.19.9---vmware.2-tkg.1",
                "resourceVersion": "1385",
                "uid": "3b15dd06-e513-429b-a284-d8a8e0ece90f"
            },
            "spec": {
                "images": [
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.2"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.2"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.2"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.2"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.2"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.19.9_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.19.9+vmware.2",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.19.9+vmware.2-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:49:16Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:16Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:16Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:45Z",
                "generation": 1,
                "name": "v1.20.4---vmware.1-tkg.1",
                "resourceVersion": "1303",
                "uid": "9fcfa743-da42-41f7-aab0-e82f6dd15a49"
            },
            "spec": {
                "images": [
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.20.4+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.4+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:45Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:45Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:45Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:22Z",
                "generation": 1,
                "name": "v1.20.4---vmware.1-tkg.2",
                "resourceVersion": "1248",
                "uid": "f2839303-53b0-4ed9-b18b-16c1b3351dd3"
            },
            "spec": {
                "images": [
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    }
                ],
                "kubernetesVersion": "v1.20.4+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.4+vmware.1-tkg.2"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:22Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:22Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:22Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:59Z",
                "generation": 1,
                "name": "v1.20.4---vmware.3-tkg.1",
                "resourceVersion": "1341",
                "uid": "13cb0ba7-b9f9-4cb5-8e21-707b3cb06ab5"
            },
            "spec": {
                "images": [
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.3"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.3"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.3"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.3"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.4_vmware.3"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.0"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.16.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    }
                ],
                "kubernetesVersion": "v1.20.4+vmware.3",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.4+vmware.3-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:59Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:59Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:59Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:25Z",
                "generation": 1,
                "name": "v1.20.5---vmware.1-tkg.1",
                "resourceVersion": "1256",
                "uid": "0aba6152-f5b4-4b9d-9b36-5830dcd4df03"
            },
            "spec": {
                "images": [
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.20.5+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.5+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:25Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:25Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:25Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:28Z",
                "generation": 1,
                "name": "v1.20.5---vmware.2-fips.1-tkg.1",
                "resourceVersion": "1263",
                "uid": "99362fd6-3374-40fe-8ea9-95f144b55467"
            },
            "spec": {
                "images": [
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7-fips.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8-fips.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2-fips.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2-fips.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2-fips.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2-fips.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2-fips.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2-fips.1"
                    }
                ],
                "kubernetesVersion": "v1.20.5+vmware.2-fips.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.5+vmware.2-fips.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:28Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:28Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:28Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:39Z",
                "generation": 1,
                "name": "v1.20.5---vmware.2-tkg.1",
                "resourceVersion": "1291",
                "uid": "b6f46976-e7b1-48b6-8e79-cd8434583406"
            },
            "spec": {
                "images": [
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.1_vmware.1"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.5_vmware.2"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-csi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/antrea-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/calico-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/pinniped-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/vsphere-cpi-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/kapp-controller-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/metrics-server-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager-templates",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.3.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.8"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.0.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.0.1_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.7"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.18.1_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.18.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.0.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.20.5+vmware.2",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.5+vmware.2-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:39Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:39Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:39Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:48:48Z",
                "generation": 1,
                "name": "v1.20.8---vmware.1-tkg.2",
                "resourceVersion": "1312",
                "uid": "02c5b4a9-5573-4be5-99c3-6200c88c1814"
            },
            "spec": {
                "images": [
                    {
                        "name": "ako-operator",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.7.0_vmware.12"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.2.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.2.0_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.14"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.2.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "ako",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.3_vmware.1"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.2"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1"
                    },
                    {
                        "name": "packages/core/addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/ako-operator",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/load-balancer-and-ingress-service",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/repo",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.8_vmware.1-tkg.2"
                    },
                    {
                        "name": "packages/core/vsphere-csi",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1-tkg.2"
                    },
                    {
                        "name": "packages/core/vsphere-cpi",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.20.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/antrea",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.11.3_vmware.2-tkg.1"
                    },
                    {
                        "name": "packages/core/calico",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.23.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.4_vmware.1-tkg.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.23.0_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.1.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.4_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.20.8+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.20.8+vmware.1-tkg.2"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:48:48Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:48Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:48:48Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "run.tanzu.vmware.com/v1alpha1",
            "kind": "TanzuKubernetesRelease",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:49:02Z",
                "generation": 1,
                "name": "v1.21.2---vmware.1-tkg.1",
                "resourceVersion": "1351",
                "uid": "88f35f35-81ec-4a1b-ab7a-af063bd92288"
            },
            "spec": {
                "images": [
                    {
                        "name": "ako-operator",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-attacher",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.2.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-livenessprobe",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.2.0_vmware.1"
                    },
                    {
                        "name": "kind/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1"
                    },
                    {
                        "name": "etcd",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.4.13_vmware.15"
                    },
                    {
                        "name": "packages/core/pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.4_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/repo",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/vsphere-csi",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1-tkg.2"
                    },
                    {
                        "name": "packages/core/ako-operator",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/load-balancer-and-ingress-service",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/calico",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.23.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/vsphere-cpi",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0_vmware.1-tkg.1"
                    },
                    {
                        "name": "packages/core/antrea",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.13.3_vmware.1-tkg.1"
                    },
                    {
                        "name": "calico-all/kube-controllers",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/node",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/pod2daemon",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "calico-all/cni-plugin",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v3.11.3_vmware.1"
                    },
                    {
                        "name": "coredns",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.8.0_vmware.5"
                    },
                    {
                        "name": "csi/csi-provisioner",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.2.0_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.4.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.4.1-windows-amd64-2004"
                    },
                    {
                        "name": "kube-scheduler",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.4.1-windows-amd64"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.4.1-windows-amd64-1903"
                    },
                    {
                        "name": "pause",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "3.4.1-windows-amd64-1909"
                    },
                    {
                        "name": "kube-apiserver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1"
                    },
                    {
                        "name": "kube-controller-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1"
                    },
                    {
                        "name": "e2e-test",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1"
                    },
                    {
                        "name": "kube-proxy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.2_vmware.1"
                    },
                    {
                        "name": "kubernetes-csi_external-resizer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.1.0_vmware.1"
                    },
                    {
                        "name": "ako",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.3_vmware.1"
                    },
                    {
                        "name": "pinniped",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.4_vmware.1"
                    },
                    {
                        "name": "ccm/manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.21.0_vmware.1"
                    },
                    {
                        "name": "csi/csi-node-driver-registrar",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.1.0_vmware.1"
                    },
                    {
                        "name": "dex",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.27.0_vmware.1"
                    },
                    {
                        "name": "csi/vsphere-block-csi-driver",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1"
                    },
                    {
                        "name": "csi/volume-metadata-syncer",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v2.3.0_vmware.1"
                    },
                    {
                        "name": "tanzu_core/addons/tkg-pinniped-post-deploy",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0"
                    },
                    {
                        "name": "tanzu_core/addons/tanzu-addons-manager",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v1.4.0"
                    },
                    {
                        "name": "antrea/antrea-debian",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.13.3_vmware.1"
                    },
                    {
                        "name": "kapp-controller",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.23.0_vmware.1"
                    },
                    {
                        "name": "metrics-server",
                        "repository": "projects.registry.vmware.com/tkg",
                        "tag": "v0.4.0_vmware.1"
                    }
                ],
                "kubernetesVersion": "v1.21.2+vmware.1",
                "repository": "projects.registry.vmware.com/tkg",
                "version": "v1.21.2+vmware.1-tkg.1"
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2021-10-13T11:49:02Z",
                        "status": "Unknown",
                        "type": "Compatible"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:02Z",
                        "status": "False",
                        "type": "UpdatesAvailable"
                    },
                    {
                        "lastTransitionTime": "2021-10-13T11:49:02Z",
                        "message": "Deprecated",
                        "status": "False",
                        "type": "UpgradeAvailable"
                    }
                ]
            }
        },
        {
            "apiVersion": "security.antrea.tanzu.vmware.com/v1alpha1",
            "kind": "Tier",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:09Z",
                "generation": 1,
                "name": "application",
                "resourceVersion": "1045",
                "uid": "de87687e-62b7-42f0-b80c-cec45fbed28c"
            },
            "spec": {
                "description": "[READ-ONLY]: System generated default Application Tier",
                "priority": 250
            }
        },
        {
            "apiVersion": "security.antrea.tanzu.vmware.com/v1alpha1",
            "kind": "Tier",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:09Z",
                "generation": 1,
                "name": "baseline",
                "resourceVersion": "1044",
                "uid": "c4d195e6-c2da-47c3-b3f5-0c673eb50640"
            },
            "spec": {
                "description": "[READ-ONLY]: System generated Baseline Tier",
                "priority": 253
            }
        },
        {
            "apiVersion": "security.antrea.tanzu.vmware.com/v1alpha1",
            "kind": "Tier",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:09Z",
                "generation": 1,
                "name": "emergency",
                "resourceVersion": "1049",
                "uid": "8cbd5ca7-0ce2-40e3-8570-774f6c876093"
            },
            "spec": {
                "description": "[READ-ONLY]: System generated Emergency Tier",
                "priority": 50
            }
        },
        {
            "apiVersion": "security.antrea.tanzu.vmware.com/v1alpha1",
            "kind": "Tier",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:09Z",
                "generation": 1,
                "name": "networkops",
                "resourceVersion": "1047",
                "uid": "ffa73d3b-0665-49bd-979a-169714615134"
            },
            "spec": {
                "description": "[READ-ONLY]: System generated NetworkOps Tier",
                "priority": 150
            }
        },
        {
            "apiVersion": "security.antrea.tanzu.vmware.com/v1alpha1",
            "kind": "Tier",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:09Z",
                "generation": 1,
                "name": "platform",
                "resourceVersion": "1046",
                "uid": "8dba5693-4f0a-4749-992d-4d1773b9e33e"
            },
            "spec": {
                "description": "[READ-ONLY]: System generated Platform Tier",
                "priority": 200
            }
        },
        {
            "apiVersion": "security.antrea.tanzu.vmware.com/v1alpha1",
            "kind": "Tier",
            "metadata": {
                "creationTimestamp": "2021-10-13T11:47:09Z",
                "generation": 1,
                "name": "securityops",
                "resourceVersion": "1048",
                "uid": "3ba7596a-1864-4c72-bff8-df580c05bcad"
            },
            "spec": {
                "description": "[READ-ONLY]: System generated SecurityOps Tier",
                "priority": 100
            }
        },
        {
            "apiVersion": "storage.k8s.io/v1",
            "kind": "CSINode",
            "metadata": {
                "annotations": {
                    "storage.alpha.kubernetes.io/migrated-plugins": "kubernetes.io/cinder"
                },
                "creationTimestamp": "2021-10-13T11:45:25Z",
                "name": "testcluster-control-plane-f4k77",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "testcluster-control-plane-f4k77",
                        "uid": "b7524e19-8095-4320-b100-52503b81c868"
                    }
                ],
                "resourceVersion": "280",
                "uid": "d6278c0d-dc80-4fa1-b457-b8fd37bd6f15"
            },
            "spec": {
                "drivers": null
            }
        },
        {
            "apiVersion": "storage.k8s.io/v1",
            "kind": "CSINode",
            "metadata": {
                "annotations": {
                    "storage.alpha.kubernetes.io/migrated-plugins": "kubernetes.io/cinder"
                },
                "creationTimestamp": "2021-10-13T11:46:08Z",
                "name": "testcluster-md-0-58c696578c-xbzgl",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "testcluster-md-0-58c696578c-xbzgl",
                        "uid": "a69b8887-6851-4545-af81-1ea9c4a6b64e"
                    }
                ],
                "resourceVersion": "696",
                "uid": "51896e6f-8797-4eb4-9fda-beedabc51787"
            },
            "spec": {
                "drivers": null
            }
        },
        {
            "apiPort": 10349,
            "apiVersion": "system.antrea.tanzu.vmware.com/v1beta1",
            "connectedAgentNum": 2,
            "controllerConditions": [
                {
                    "lastHeartbeatTime": "2021-10-13T11:54:55Z",
                    "status": "True",
                    "type": "ControllerHealthy"
                }
            ],
            "kind": "AntreaControllerInfo",
            "metadata": {
                "creationTimestamp": null,
                "name": "antrea-controller",
                "selfLink": "/apis/system.antrea.tanzu.vmware.com/v1beta1/controllerinfos/antrea-controller"
            },
            "networkPolicyControllerInfo": {},
            "nodeRef": {
                "kind": "Node",
                "name": "testcluster-md-0-58c696578c-xbzgl"
            },
            "podRef": {
                "kind": "Pod",
                "name": "antrea-controller-86f8988c5f-tmgvh",
                "namespace": "kube-system"
            },
            "serviceRef": {
                "kind": "Service",
                "name": "antrea"
            },
            "version": "v0.13.3-7ad64b3"
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
